"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[277],{2277:(e,r,t)=>{t.d(r,{ProfileManager:()=>l});var a=t(5493),s=t(2054),i=t(7364);let c=a.Ik({id:a.Yj().uuid(),email:a.Yj().email(),full_name:a.Yj().optional(),role:a.k5(["patient","doctor","company","admin","organization_admin","platform_admin"]),portal:a.k5(["patients","doctors","companies","admin"]),organization_id:a.Yj().uuid().optional(),metadata:a.g1(a.L5()).default({}),created_at:a.Yj().datetime(),updated_at:a.Yj().datetime()}),n=a.Ik({id:a.ai(),event:a.Yj(),data:a.g1(a.L5()),created_at:a.Yj().datetime()}),o=a.Ik({full_name:a.Yj().min(1).max(100).optional(),metadata:a.g1(a.L5()).optional()});class l{static browser(){return new l((0,i.UZ)())}createError(e,r,t){return{code:e,message:r,details:t}}validateData(e,r){try{let t=e.parse(r);return{success:!0,data:t}}catch(e){return{success:!1,error:this.createError("VALIDATION_ERROR","Invalid data format",e instanceof s.G?e.errors:e)}}}async getCurrentProfile(){try{let{data:e,error:r}=await this.client.rpc("get_current_profile");if(r)return{success:!1,error:this.createError("RPC_ERROR","Failed to fetch user profile",r)};if(!e)return{success:!0,data:null};let t=this.validateData(c,e);if(!t.success)return t;return{success:!0,data:t.data}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Connection failed while fetching profile",e)}}}async setPortalAndRole(e,r,t){try{if(t&&!a.Yj().uuid().safeParse(t).success)return{success:!1,error:this.createError("VALIDATION_ERROR","Invalid organization ID format")};let{data:s,error:i}=await this.client.rpc("set_portal_and_role",{p_portal:e,p_role:r||null,p_organization_id:t||null});if(i)return{success:!1,error:this.createError("RPC_ERROR","Failed to update portal and role",i)};return{success:!0,data:!0}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Connection failed while updating profile",e)}}}async getAuditLog(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let{userId:r,limit:t=50,offset:a=0,eventFilter:s}=e;if(t<1||t>1e3)return{success:!1,error:this.createError("VALIDATION_ERROR","Limit must be between 1 and 1000")};if(a<0)return{success:!1,error:this.createError("VALIDATION_ERROR","Offset must be non-negative")};let{data:i,error:c}=await this.client.rpc("get_user_audit_log",{p_user_id:r||null,p_limit:t,p_offset:a,p_event_filter:s||null});if(c)return{success:!1,error:this.createError("RPC_ERROR","Failed to fetch audit log",c)};let o=[];for(let e of i||[]){let r=this.validateData(n,e);r.success&&o.push(r.data)}return{success:!0,data:o}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Connection failed while fetching audit log",e)}}}async isAdmin(){var e,r,t;let a=await this.getCurrentProfile();return a.success?{success:!0,data:(null==(e=a.data)?void 0:e.role)==="admin"||(null==(r=a.data)?void 0:r.role)==="organization_admin"||(null==(t=a.data)?void 0:t.role)==="platform_admin"}:a}async hasRole(e){var r;let t=await this.getCurrentProfile();return t.success?{success:!0,data:(null==(r=t.data)?void 0:r.role)===e}:t}async hasPortalAccess(e){var r,t;let a=await this.getCurrentProfile();return a.success?{success:!0,data:(null==(r=a.data)?void 0:r.portal)===e||["admin","organization_admin","platform_admin"].includes((null==(t=a.data)?void 0:t.role)||"")}:a}async updateProfile(e){try{let r=this.validateData(o,e);if(!r.success)return r;let t=r.data,{data:{user:a},error:s}=await this.client.auth.getUser();if(s||!a)return{success:!1,error:this.createError("AUTH_ERROR","User not authenticated")};let{error:i}=await this.client.from("profiles").update({...t,updated_at:new Date().toISOString()}).eq("id",a.id);if(i)return{success:!1,error:this.createError("DATABASE_ERROR","Failed to update profile",i)};return{success:!0,data:!0}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Connection failed while updating profile",e)}}}async getProfileById(e){try{if(!a.Yj().uuid().safeParse(e).success)return{success:!1,error:this.createError("VALIDATION_ERROR","Invalid profile ID format")};let r=await this.isAdmin();if(!r.success)return r;if(!r.data)return{success:!1,error:this.createError("PERMISSION_ERROR","Admin access required")};let{data:t,error:s}=await this.client.from("profiles").select("*").eq("id",e).single();if(s){if("PGRST116"===s.code)return{success:!0,data:null};return{success:!1,error:this.createError("DATABASE_ERROR","Failed to fetch profile",s)}}let i=this.validateData(c,t);if(!i.success)return i;return{success:!0,data:i.data}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Connection failed while fetching profile",e)}}}async healthCheck(){try{let e=Date.now(),{error:r}=await this.client.from("profiles").select("id").limit(1),t=Date.now()-e;if(r)return{success:!1,error:this.createError("HEALTH_CHECK_ERROR","Service health check failed",r)};return{success:!0,data:{status:"healthy",latency:t}}}catch(e){return{success:!1,error:this.createError("NETWORK_ERROR","Health check connection failed",e)}}}constructor(e){this.client=null!=e?e:(0,i.UZ)()}}l.browser()},7364:(e,r,t)=>{t.d(r,{UZ:()=>c});var a=t(5927),s=t(7301);let i=null,c=()=>{if(!i){let{url:e,anonKey:r}={url:(0,s.Ob)("NEXT_PUBLIC_SUPABASE_URL"),anonKey:(0,s.Ob)("NEXT_PUBLIC_SUPABASE_ANON_KEY")};i=(0,a.createBrowserClient)(e,r,{auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0,flowType:"pkce",debug:!1},realtime:{params:{eventsPerSecond:10}},global:{headers:{"X-Client-Info":"@autamedica/auth-app"}}}),window.addEventListener("beforeunload",()=>{null==i||i.removeAllChannels(),i=null})}return i}}}]);