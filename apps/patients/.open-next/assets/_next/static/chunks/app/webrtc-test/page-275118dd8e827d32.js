(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[517],{2672:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>s});var n=r(3919),a=r(1111),c=r(5129);let o="patient",i=()=>{try{let e=(0,c.fi)("NEXT_PUBLIC_ICE_SERVERS"),t=JSON.parse(e);if(Array.isArray(t))return t;console.warn("[webrtc-test] NEXT_PUBLIC_ICE_SERVERS must be a JSON array; falling back to []")}catch(e){console.error("[webrtc-test] Failed to parse NEXT_PUBLIC_ICE_SERVERS or variable not set",e)}return[]};function s(){let e=(0,a.useRef)(null),t=(0,a.useRef)(null),r=(0,a.useRef)(null),s=(0,a.useRef)(null),l=(0,a.useMemo)(i,[]);(0,a.useEffect)(()=>{if(s.current)return;let n=new RTCPeerConnection({iceServers:l});s.current=n,n.onicecandidate=e=>{var t;e.candidate&&(null==(t=r.current)?void 0:t.readyState)===WebSocket.OPEN&&r.current.send(JSON.stringify({type:"ice",candidate:e.candidate}))},n.onconnectionstatechange=()=>{},n.ontrack=e=>{let r=t.current;if(!r)return;let n=r.srcObject;n||(r.srcObject=n=new MediaStream);let a=e.streams[0];if(a)for(let e of a.getTracks())n.getTracks().some(t=>t.id===e.id)||n.addTrack(e)};let a=window,c={role:o,pc:n,get ws(){return r.current},get localVideo(){return e.current},get remoteVideo(){return t.current},get pcState(){return{connection:n.connectionState,iceConnection:n.iceConnectionState,signaling:n.signalingState}},async getSelectedCandidatePair(){let e=await n.getStats(),t=null;return e.forEach(e=>{"candidate-pair"===e.type&&"succeeded"===e.state&&(t=e)}),t}};return a.__webrtcTest=c,a.__pc=n,()=>{a.__webrtcTest===c&&delete a.__webrtcTest,a.__pc===n&&delete a.__pc,n.getSenders().forEach(e=>{var t;return null==(t=e.track)?void 0:t.stop()}),n.close(),s.current=null}},[l]),(0,a.useEffect)(()=>{try{let e=(0,c.fi)("NEXT_PUBLIC_SIGNALING_URL"),t="".concat(o,"-").concat(Date.now()),n="".concat(e,"?roomId=").concat("test123","&userId=").concat(t,"&userType=").concat(o),a=new WebSocket(n);return r.current=a,a.onopen=()=>{},a.onclose=e=>{},a.onerror=e=>{console.error("[webrtc-test] WebSocket error",{type:e.type,readyState:a.readyState})},a.onmessage=async e=>{let t=s.current;if(!t)return void console.warn("[webrtc-test] Received signaling message but RTCPeerConnection is not ready");try{let r=JSON.parse(e.data);if("offer"===r.type){await t.setRemoteDescription({type:"offer",sdp:r.sdp});let e=await t.createAnswer();await t.setLocalDescription(e),a.send(JSON.stringify({type:"answer",sdp:e.sdp}))}if(r.type,"ice"===r.type&&r.candidate)try{await t.addIceCandidate(r.candidate)}catch(e){console.error("[webrtc-test] Failed to add ICE candidate",e)}}catch(e){console.error("[webrtc-test] Failed to parse signaling message",e)}},()=>{r.current===a&&(r.current=null),a.close()}}catch(e){console.error("[webrtc-test] Failed to initialize WebSocket:",e)}},[]);let d=async()=>{let t=s.current,n=r.current;if(!t)return void console.error("[webrtc-test] Cannot start call: RTCPeerConnection not ready");if(!n||n.readyState!==WebSocket.OPEN)return void console.warn("[webrtc-test] WebSocket not open yet; wait for connection before starting call");try{let r=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0},video:{width:{ideal:1280},height:{ideal:720},frameRate:{ideal:30}}});e.current&&(e.current.srcObject=r),r.getTracks().forEach(e=>{t.addTrack(e,r)})}catch(e){console.error("[webrtc-test] Failed to start media",e),alert("Could not start camera/microphone. Check permissions and console logs.")}};return(0,n.jsxs)("main",{style:{padding:16,display:"grid",gap:12},children:[(0,n.jsxs)("h1",{children:["WebRTC Test (",o,")"]}),(0,n.jsx)("button",{onClick:d,type:"button",children:"Start"}),(0,n.jsx)("video",{ref:e,autoPlay:!0,muted:!0,playsInline:!0,style:{width:"33%"}}),(0,n.jsx)("video",{ref:t,autoPlay:!0,playsInline:!0,style:{width:"66%"}})]})}},8127:(e,t,r)=>{Promise.resolve().then(r.bind(r,2672))}},e=>{e.O(0,[613,129,554,829,358],()=>e(e.s=8127)),_N_E=e.O()}]);