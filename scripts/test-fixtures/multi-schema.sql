-- Test fixture: multi-schema para verificar filtrado
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Schema público (debe procesarse)
CREATE TABLE public.main_table (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR NOT NULL,
    status VARCHAR CHECK (status IN ('active', 'inactive')) DEFAULT 'active',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Schema de auditoría (debe filtrarse)
CREATE SCHEMA IF NOT EXISTS audit;

CREATE TABLE audit.logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    action VARCHAR NOT NULL,
    resource_table VARCHAR NOT NULL,
    resource_id UUID,
    changes JSONB,
    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL
);

CREATE TABLE audit.sessions (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID NOT NULL,
    ip_address INET,
    user_agent TEXT,
    started_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    ended_at TIMESTAMP WITH TIME ZONE
);

-- Más tablas públicas (deben procesarse)
CREATE TABLE public.settings (
    id SERIAL PRIMARY KEY,
    key VARCHAR UNIQUE NOT NULL,
    value JSONB,
    description TEXT,
    is_public BOOLEAN DEFAULT FALSE
);

-- Schema privado (debe filtrarse)
CREATE SCHEMA IF NOT EXISTS private;

CREATE TABLE private.secrets (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    key_name VARCHAR NOT NULL,
    encrypted_value TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);