#!/bin/bash
#
# Git Watcher - Auto-commit and push changes
# Runs continuously in background, detecting changes every 5 minutes
#

set -e

REPO_ROOT="/root/altamedica-reboot-fresh"
LOG_FILE="$REPO_ROOT/git-watcher.log"
INTERVAL=300  # 5 minutes in seconds
MAX_FILES=500 # Skip auto-commit if more than this (probably bulk operation)

cd "$REPO_ROOT"

echo "üîç Git Watcher iniciado en: $(date)" | tee -a "$LOG_FILE"
echo "üìÇ Repositorio: $REPO_ROOT" | tee -a "$LOG_FILE"
echo "‚è±Ô∏è  Intervalo: ${INTERVAL}s ($(($INTERVAL / 60)) minutos)" | tee -a "$LOG_FILE"
echo "üõë Detener con: pkill -f git-watcher.sh" | tee -a "$LOG_FILE"
echo "----------------------------------------" | tee -a "$LOG_FILE"

while true; do
  # Sleep primero para dar tiempo inicial
  sleep $INTERVAL

  # Verificar que estamos en un repo git
  if [ ! -d .git ]; then
    echo "‚ùå $(date): No es un repositorio git" | tee -a "$LOG_FILE"
    continue
  fi

  # Detectar cambios
  CHANGED_FILES=$(git status --porcelain 2>/dev/null | wc -l)

  if [ "$CHANGED_FILES" -eq 0 ]; then
    echo "‚úÖ $(date): Sin cambios detectados" | tee -a "$LOG_FILE"
    continue
  fi

  # Safety check - no commitear si hay demasiados archivos (probable bulk operation)
  if [ "$CHANGED_FILES" -gt "$MAX_FILES" ]; then
    echo "‚ö†Ô∏è  $(date): Demasiados archivos modificados ($CHANGED_FILES > $MAX_FILES), saltando auto-commit" | tee -a "$LOG_FILE"
    continue
  fi

  echo "üìù $(date): $CHANGED_FILES archivos modificados" | tee -a "$LOG_FILE"

  # Obtener branch actual
  BRANCH=$(git branch --show-current 2>/dev/null || echo "unknown")

  # No auto-commit en main/master/develop por seguridad
  if [[ "$BRANCH" == "main" ]] || [[ "$BRANCH" == "master" ]] || [[ "$BRANCH" == "develop" ]]; then
    echo "üîí $(date): Branch protegida ($BRANCH), saltando auto-commit" | tee -a "$LOG_FILE"
    continue
  fi

  # Generar resumen de cambios
  SUMMARY=$(git status --short | head -10)
  TIMESTAMP=$(date +%Y-%m-%d_%H:%M:%S)

  # Crear commit message inteligente
  COMMIT_MSG=$(cat <<EOF
chore: auto-commit $TIMESTAMP ü§ñ

Changes detected: $CHANGED_FILES files

Modified files:
$SUMMARY

Auto-generated by git-watcher.sh
EOF
)

  # Intentar commit y push
  {
    echo "üîÑ $(date): Agregando cambios..." | tee -a "$LOG_FILE"
    git add -A

    echo "üíæ $(date): Creando commit..." | tee -a "$LOG_FILE"
    git commit --no-verify -m "$COMMIT_MSG" 2>&1 | tee -a "$LOG_FILE"

    echo "‚¨ÜÔ∏è  $(date): Pushing a $BRANCH..." | tee -a "$LOG_FILE"
    git push origin "$BRANCH" 2>&1 | tee -a "$LOG_FILE"

    echo "‚úÖ $(date): Auto-commit y push completados exitosamente" | tee -a "$LOG_FILE"
    echo "----------------------------------------" | tee -a "$LOG_FILE"
  } || {
    echo "‚ùå $(date): Error durante auto-commit/push" | tee -a "$LOG_FILE"
    echo "----------------------------------------" | tee -a "$LOG_FILE"
  }
done
