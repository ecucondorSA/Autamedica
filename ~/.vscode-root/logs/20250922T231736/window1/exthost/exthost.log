2025-09-22 23:17:41.401 [info] Extension host with pid 2806945 started
2025-09-22 23:17:41.412 [trace] initData {"commit":"f220831ea2d946c0dcb0f3eaa480eb435a2c1260","version":"1.104.0","quality":"stable","date":"2025-09-10T06:46:18.035Z","parentPid":0,"environment":{"isExtensionDevelopmentDebug":false,"appRoot":{"$mid":1,"path":"/snap/code/206/usr/share/code/resources/app","scheme":"file"},"appName":"Visual Studio Code","appHost":"desktop","appUriScheme":"vscode","isExtensionTelemetryLoggingOnly":false,"appLanguage":"en","globalStorageHome":{"$mid":1,"path":"/root/altamedica-reboot/~/.vscode-root/User/globalStorage","scheme":"vscode-userdata"},"workspaceStorageHome":{"$mid":1,"path":"/root/altamedica-reboot/~/.vscode-root/User/workspaceStorage","scheme":"file"},"skipWorkspaceStorageLock":true},"workspace":{"id":"602e01651a858412530e82445468fb37","name":"altamedica-reboot","isUntitled":false,"transient":false},"remote":{"connectionData":null,"isRemote":false},"consoleForward":{"includeStack":true,"logNative":false},"extensions":{"versionId":0,"allExtensions":[{"id":"vscode.bat","identifier":{"value":"vscode.bat","_lower":"vscode.bat"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/bat","path":"/snap/code/206/usr/share/code/resources/app/extensions/bat","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"bat","displayName":"Windows Bat Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Windows batch files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.52.0"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin mmims/language-batchfile grammars/batchfile.cson ./syntaxes/batchfile.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"bat","extensions":[".bat",".cmd"],"aliases":["Batch","bat"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"bat","scopeName":"source.batchfile","path":"./syntaxes/batchfile.tmLanguage.json"}],"snippets":[{"language":"bat","path":"./snippets/batchfile.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.clojure","identifier":{"value":"vscode.clojure","_lower":"vscode.clojure"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/clojure","path":"/snap/code/206/usr/share/code/resources/app/extensions/clojure","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"clojure","displayName":"Clojure Language Basics","description":"Provides syntax highlighting and bracket matching in Clojure files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-clojure grammars/clojure.cson ./syntaxes/clojure.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"clojure","aliases":["Clojure","clojure"],"extensions":[".clj",".cljs",".cljc",".cljx",".clojure",".edn"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"clojure","scopeName":"source.clojure","path":"./syntaxes/clojure.tmLanguage.json"}],"configurationDefaults":{"[clojure]":{"diffEditor.ignoreTrimWhitespace":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.coffeescript","identifier":{"value":"vscode.coffeescript","_lower":"vscode.coffeescript"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/coffeescript","path":"/snap/code/206/usr/share/code/resources/app/extensions/coffeescript","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"coffeescript","displayName":"CoffeeScript Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in CoffeeScript files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-coffee-script grammars/coffeescript.cson ./syntaxes/coffeescript.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"coffeescript","extensions":[".coffee",".cson",".iced"],"aliases":["CoffeeScript","coffeescript","coffee"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"coffeescript","scopeName":"source.coffee","path":"./syntaxes/coffeescript.tmLanguage.json"}],"breakpoints":[{"language":"coffeescript"}],"snippets":[{"language":"coffeescript","path":"./snippets/coffeescript.code-snippets"}],"configurationDefaults":{"[coffeescript]":{"diffEditor.ignoreTrimWhitespace":false,"editor.defaultColorDecorators":"never"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.configuration-editing","identifier":{"value":"vscode.configuration-editing","_lower":"vscode.configuration-editing"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/configuration-editing","path":"/snap/code/206/usr/share/code/resources/app/extensions/configuration-editing","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"configuration-editing","displayName":"Configuration Editing","description":"Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.0.0"},"icon":"images/icon.png","activationEvents":["onProfile","onProfile:github","onLanguage:json","onLanguage:jsonc"],"enabledApiProposals":["profileContentHandlers"],"main":"./dist/configurationEditingMain","browser":"./dist/browser/configurationEditingMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"languages":[{"id":"jsonc","extensions":[".code-workspace","language-configuration.json","icon-theme.json","color-theme.json"],"filenames":["settings.json","launch.json","tasks.json","mcp.json","keybindings.json","extensions.json","argv.json","profiles.json","devcontainer.json",".devcontainer.json"]},{"id":"json","extensions":[".code-profile"]}],"jsonValidation":[{"fileMatch":"vscode://defaultsettings/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"%APP_SETTINGS_HOME%/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"%APP_SETTINGS_HOME%/profiles/*/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"vscode://defaultsettings/*.json","url":"vscode://schemas/settings/default"},{"fileMatch":"%APP_SETTINGS_HOME%/settings.json","url":"vscode://schemas/settings/user"},{"fileMatch":"%APP_SETTINGS_HOME%/profiles/*/settings.json","url":"vscode://schemas/settings/profile"},{"fileMatch":"%MACHINE_SETTINGS_HOME%/settings.json","url":"vscode://schemas/settings/machine"},{"fileMatch":"%APP_WORKSPACES_HOME%/*/workspace.json","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"**/*.code-workspace","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"**/argv.json","url":"vscode://schemas/argv"},{"fileMatch":"/.vscode/settings.json","url":"vscode://schemas/settings/folder"},{"fileMatch":"/.vscode/launch.json","url":"vscode://schemas/launch"},{"fileMatch":"/.vscode/tasks.json","url":"vscode://schemas/tasks"},{"fileMatch":"/.vscode/mcp.json","url":"vscode://schemas/mcp"},{"fileMatch":"%APP_SETTINGS_HOME%/tasks.json","url":"vscode://schemas/tasks"},{"fileMatch":"%APP_SETTINGS_HOME%/snippets/*.json","url":"vscode://schemas/snippets"},{"fileMatch":"%APP_SETTINGS_HOME%/prompts/*.toolsets.jsonc","url":"vscode://schemas/toolsets"},{"fileMatch":"%APP_SETTINGS_HOME%/profiles/*/snippets/.json","url":"vscode://schemas/snippets"},{"fileMatch":"%APP_SETTINGS_HOME%/sync/snippets/preview/*.json","url":"vscode://schemas/snippets"},{"fileMatch":"**/*.code-snippets","url":"vscode://schemas/global-snippets"},{"fileMatch":"/.vscode/extensions.json","url":"vscode://schemas/extensions"},{"fileMatch":"devcontainer.json","url":"https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json"},{"fileMatch":".devcontainer.json","url":"https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json"},{"fileMatch":"%APP_SETTINGS_HOME%/globalStorage/ms-vscode-remote.remote-containers/nameConfigs/*.json","url":"./schemas/attachContainer.schema.json"},{"fileMatch":"%APP_SETTINGS_HOME%/globalStorage/ms-vscode-remote.remote-containers/imageConfigs/*.json","url":"./schemas/attachContainer.schema.json"},{"fileMatch":"**/quality/*/product.json","url":"vscode://schemas/vscode-product"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.cpp","identifier":{"value":"vscode.cpp","_lower":"vscode.cpp"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/cpp","path":"/snap/code/206/usr/share/code/resources/app/extensions/cpp","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"cpp","displayName":"C/C++ Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in C/C++ files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"c","extensions":[".c",".i"],"aliases":["C","c"],"configuration":"./language-configuration.json"},{"id":"cpp","extensions":[".cpp",".cppm",".cc",".ccm",".cxx",".cxxm",".c++",".c++m",".hpp",".hh",".hxx",".h++",".h",".ii",".ino",".inl",".ipp",".ixx",".tpp",".txx",".hpp.in",".h.in"],"aliases":["C++","Cpp","cpp"],"configuration":"./language-configuration.json"},{"id":"cuda-cpp","extensions":[".cu",".cuh"],"aliases":["CUDA C++"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"c","scopeName":"source.c","path":"./syntaxes/c.tmLanguage.json"},{"language":"cpp","scopeName":"source.cpp.embedded.macro","path":"./syntaxes/cpp.embedded.macro.tmLanguage.json"},{"language":"cpp","scopeName":"source.cpp","path":"./syntaxes/cpp.tmLanguage.json"},{"scopeName":"source.c.platform","path":"./syntaxes/platform.tmLanguage.json"},{"language":"cuda-cpp","scopeName":"source.cuda-cpp","path":"./syntaxes/cuda-cpp.tmLanguage.json"}],"problemPatterns":[{"name":"nvcc-location","regexp":"^(.*)\\((\\d+)\\):\\s+(warning|error):\\s+(.*)","kind":"location","file":1,"location":2,"severity":3,"message":4}],"problemMatchers":[{"name":"nvcc","owner":"cuda-cpp","fileLocation":["relative","${workspaceFolder}"],"pattern":"$nvcc-location"}],"snippets":[{"language":"c","path":"./snippets/c.code-snippets"},{"language":"cpp","path":"./snippets/cpp.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.csharp","identifier":{"value":"vscode.csharp","_lower":"vscode.csharp"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/csharp","path":"/snap/code/206/usr/share/code/resources/app/extensions/csharp","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"csharp","displayName":"C# Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in C# files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin dotnet/csharp-tmLanguage grammars/csharp.tmLanguage ./syntaxes/csharp.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"configurationDefaults":{"[csharp]":{"editor.maxTokenizationLineLength":2500}},"languages":[{"id":"csharp","extensions":[".cs",".csx",".cake"],"aliases":["C#","csharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"csharp","scopeName":"source.cs","path":"./syntaxes/csharp.tmLanguage.json","tokenTypes":{"meta.interpolation":"other"},"unbalancedBracketScopes":["keyword.operator.relational.cs","keyword.operator.arrow.cs","punctuation.accessor.pointer.cs","keyword.operator.bitwise.shift.cs","keyword.operator.assignment.compound.bitwise.cs"]}],"snippets":[{"language":"csharp","path":"./snippets/csharp.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.css","identifier":{"value":"vscode.css","_lower":"vscode.css"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/css","path":"/snap/code/206/usr/share/code/resources/app/extensions/css","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"css","displayName":"CSS Language Basics","description":"Provides syntax highlighting and bracket matching for CSS, LESS and SCSS files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin microsoft/vscode-css grammars/css.cson ./syntaxes/css.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"css","aliases":["CSS","css"],"extensions":[".css"],"mimetypes":["text/css"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"css","scopeName":"source.css","path":"./syntaxes/css.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.css-language-features","identifier":{"value":"vscode.css-language-features","_lower":"vscode.css-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/css-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/css-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"css-language-features","displayName":"CSS Language Features","description":"Provides rich language support for CSS, LESS and SCSS files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.77.0"},"icon":"icons/css.png","activationEvents":["onLanguage:css","onLanguage:less","onLanguage:scss","onCommand:_css.applyCodeAction"],"main":"./client/dist/node/cssClientMain","browser":"./client/dist/browser/cssClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"categories":["Programming Languages"],"contributes":{"configuration":[{"order":22,"id":"css","title":"CSS","properties":{"css.customData":{"type":"array","markdownDescription":"A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for CSS custom properties (variables), at-rules, pseudo-classes, and pseudo-elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.","default":[],"items":{"type":"string"},"scope":"resource"},"css.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."},"css.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insert semicolon at end of line when completing CSS properties."},"css.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"css.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Show property and value documentation in CSS hovers."},"css.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Show references to MDN in CSS hovers."},"css.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"css.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"css.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"css.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"css.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"css.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"css.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"css.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"css.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"css.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of 3, 4, 6 or 8 hex numbers."},"css.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"css.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"css.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"css.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"css.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"css.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"css.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"css.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"css.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."},"css.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown at-rule."},"css.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the CSS language server."},"css.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default CSS formatter."},"css.format.newlineBetweenSelectors":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate selectors with a new line."},"css.format.newlineBetweenRules":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate rulesets by a blank line."},"css.format.spaceAroundSelectorSeparator":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`)."},"css.format.braceStyle":{"type":"string","scope":"resource","default":"collapse","enum":["collapse","expand"],"markdownDescription":"Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`)."},"css.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Whether existing line breaks before rules and declarations should be preserved."},"css.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled."}}},{"id":"scss","order":24,"title":"SCSS (Sass)","properties":{"scss.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."},"scss.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insert semicolon at end of line when completing CSS properties."},"scss.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"scss.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Show property and value documentation in SCSS hovers."},"scss.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Show references to MDN in SCSS hovers."},"scss.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"scss.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"scss.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"scss.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"scss.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"scss.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"scss.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"scss.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"scss.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"scss.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of 3, 4, 6 or 8 hex numbers."},"scss.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"scss.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"scss.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"scss.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"scss.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"scss.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"scss.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"scss.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"scss.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."},"scss.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown at-rule."},"scss.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default SCSS formatter."},"scss.format.newlineBetweenSelectors":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate selectors with a new line."},"scss.format.newlineBetweenRules":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate rulesets by a blank line."},"scss.format.spaceAroundSelectorSeparator":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`)."},"scss.format.braceStyle":{"type":"string","scope":"resource","default":"collapse","enum":["collapse","expand"],"markdownDescription":"Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`)."},"scss.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Whether existing line breaks before rules and declarations should be preserved."},"scss.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled."}}},{"id":"less","order":23,"type":"object","title":"LESS","properties":{"less.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."},"less.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insert semicolon at end of line when completing CSS properties."},"less.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"less.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Show property and value documentation in LESS hovers."},"less.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Show references to MDN in LESS hovers."},"less.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"less.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"less.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"less.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"less.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"less.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"less.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"less.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"less.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"less.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of 3, 4, 6 or 8 hex numbers."},"less.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"less.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"less.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"less.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"less.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"less.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"less.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"less.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"less.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."},"less.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown at-rule."},"less.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default LESS formatter."},"less.format.newlineBetweenSelectors":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate selectors with a new line."},"less.format.newlineBetweenRules":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Separate rulesets by a blank line."},"less.format.spaceAroundSelectorSeparator":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`)."},"less.format.braceStyle":{"type":"string","scope":"resource","default":"collapse","enum":["collapse","expand"],"markdownDescription":"Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`)."},"less.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Whether existing line breaks before rules and declarations should be preserved."},"less.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled."}}}],"configurationDefaults":{"[css]":{"editor.suggest.insertMode":"replace"},"[scss]":{"editor.suggest.insertMode":"replace"},"[less]":{"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.css-data.json","url":"https://raw.githubusercontent.com/microsoft/vscode-css-languageservice/master/docs/customData.schema.json"},{"fileMatch":"package.json","url":"./schemas/package.schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.dart","identifier":{"value":"vscode.dart","_lower":"vscode.dart"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/dart","path":"/snap/code/206/usr/share/code/resources/app/extensions/dart","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"dart","displayName":"Dart Language Basics","description":"Provides syntax highlighting & bracket matching in Dart files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin dart-lang/dart-syntax-highlight grammars/dart.json ./syntaxes/dart.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"dart","extensions":[".dart"],"aliases":["Dart"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dart","scopeName":"source.dart","path":"./syntaxes/dart.tmLanguage.json"}]}},{"id":"vscode.debug-auto-launch","identifier":{"value":"vscode.debug-auto-launch","_lower":"vscode.debug-auto-launch"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/debug-auto-launch","path":"/snap/code/206/usr/share/code/resources/app/extensions/debug-auto-launch","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"debug-auto-launch","displayName":"Node Debug Auto-attach","description":"Helper for auto-attach feature when node-debug extensions are not active.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.5.0"},"icon":"media/icon.png","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onStartupFinished"],"main":"./dist/extension","contributes":{"commands":[{"command":"extension.node-debug.toggleAutoAttach","title":"Toggle Auto Attach","category":"Debug"}]},"prettier":{"printWidth":100,"trailingComma":"all","singleQuote":true,"arrowParens":"avoid"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.debug-server-ready","identifier":{"value":"vscode.debug-server-ready","_lower":"vscode.debug-server-ready"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/debug-server-ready","path":"/snap/code/206/usr/share/code/resources/app/extensions/debug-server-ready","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"debug-server-ready","displayName":"Server Ready Action","description":"Open URI in browser if server under debugging is ready.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.32.0"},"icon":"media/icon.png","activationEvents":["onDebugResolve"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["terminalDataWriteEvent"],"main":"./dist/extension","contributes":{"debuggers":[{"type":"*","configurationAttributes":{"launch":{"properties":{"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}}}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.diff","identifier":{"value":"vscode.diff","_lower":"vscode.diff"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/diff","path":"/snap/code/206/usr/share/code/resources/app/extensions/diff","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"diff","displayName":"Diff Language Basics","description":"Provides syntax highlighting & bracket matching in Diff files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/diff.tmbundle Syntaxes/Diff.plist ./syntaxes/diff.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"diff","aliases":["Diff","diff"],"extensions":[".diff",".patch",".rej"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"diff","scopeName":"source.diff","path":"./syntaxes/diff.tmLanguage.json"}]}},{"id":"vscode.docker","identifier":{"value":"vscode.docker","_lower":"vscode.docker"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/docker","path":"/snap/code/206/usr/share/code/resources/app/extensions/docker","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"docker","displayName":"Docker Language Basics","description":"Provides syntax highlighting and bracket matching in Docker files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"dockerfile","extensions":[".dockerfile",".containerfile"],"filenames":["Dockerfile","Containerfile"],"filenamePatterns":["Dockerfile.*","Containerfile.*"],"aliases":["Docker","Dockerfile","Containerfile"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dockerfile","scopeName":"source.dockerfile","path":"./syntaxes/docker.tmLanguage.json"}],"configurationDefaults":{"[dockerfile]":{"editor.quickSuggestions":{"strings":true}}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.emmet","identifier":{"value":"vscode.emmet","_lower":"vscode.emmet"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/emmet","path":"/snap/code/206/usr/share/code/resources/app/extensions/emmet","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"emmet","displayName":"Emmet","description":"Emmet support for VS Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.13.0"},"icon":"images/icon.png","categories":["Other"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"activationEvents":["onCommand:emmet.expandAbbreviation","onLanguage"],"main":"./dist/node/emmetNodeMain","browser":"./dist/browser/emmetBrowserMain","contributes":{"configuration":{"type":"object","title":"Emmet","properties":{"emmet.showExpandedAbbreviation":{"type":["string"],"enum":["never","always","inMarkupAndStylesheetFilesOnly"],"default":"always","markdownDescription":"Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css."},"emmet.showAbbreviationSuggestions":{"type":"boolean","default":true,"scope":"language-overridable","markdownDescription":"Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`."},"emmet.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`"},"emmet.variables":{"type":"object","properties":{"lang":{"type":"string","default":"en"},"charset":{"type":"string","default":"UTF-8"}},"additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Variables to be used in Emmet snippets."},"emmet.syntaxProfiles":{"type":"object","default":{},"markdownDescription":"Define profile for specified syntax or use your own profile with specific rules."},"emmet.excludeLanguages":{"type":"array","items":{"type":"string"},"default":["markdown"],"markdownDescription":"An array of languages where Emmet abbreviations should not be expanded."},"emmet.extensionsPath":{"type":"array","items":{"type":"string","markdownDescription":"A path containing Emmet syntaxProfiles and/or snippets."},"default":[],"scope":"machine-overridable","markdownDescription":"An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.\nIn case of conflicts, the profiles/snippets of later paths will override those of earlier paths.\nSee https://code.visualstudio.com/docs/editor/emmet for more information and an example snippet file."},"emmet.triggerExpansionOnTab":{"type":"boolean","default":false,"scope":"language-overridable","markdownDescription":"When enabled, Emmet abbreviations are expanded when pressing TAB, even when completions do not show up. When disabled, completions that show up can still be accepted by pressing TAB."},"emmet.useInlineCompletions":{"type":"boolean","default":false,"markdownDescription":"If `true`, Emmet will use inline completions to suggest expansions. To prevent the non-inline completion item provider from showing up as often while this setting is `true`, turn `#editor.quickSuggestions#` to `inline` or `off` for the `other` item."},"emmet.preferences":{"type":"object","default":{},"markdownDescription":"Preferences used to modify behavior of some actions and resolvers of Emmet.","properties":{"css.intUnit":{"type":"string","default":"px","markdownDescription":"Default unit for integer values."},"css.floatUnit":{"type":"string","default":"em","markdownDescription":"Default unit for float values."},"css.propertyEnd":{"type":"string","default":";","markdownDescription":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations."},"sass.propertyEnd":{"type":"string","default":"","markdownDescription":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files."},"stylus.propertyEnd":{"type":"string","default":"","markdownDescription":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files."},"css.valueSeparator":{"type":"string","default":": ","markdownDescription":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations."},"sass.valueSeparator":{"type":"string","default":": ","markdownDescription":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files."},"stylus.valueSeparator":{"type":"string","default":" ","markdownDescription":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files."},"bem.elementSeparator":{"type":"string","default":"__","markdownDescription":"Element separator used for classes when using the BEM filter."},"bem.modifierSeparator":{"type":"string","default":"_","markdownDescription":"Modifier separator used for classes when using the BEM filter."},"filter.commentBefore":{"type":"string","default":"","markdownDescription":"A definition of comment that should be placed before matched element when comment filter is applied."},"filter.commentAfter":{"type":"string","default":"\n<!-- /[#ID][.CLASS] -->","markdownDescription":"A definition of comment that should be placed after matched element when comment filter is applied."},"filter.commentTrigger":{"type":"array","default":["id","class"],"markdownDescription":"A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied."},"format.noIndentTags":{"type":"array","default":["html"],"markdownDescription":"An array of tag names that should never get inner indentation."},"format.forceIndentationForTags":{"type":"array","default":["body"],"markdownDescription":"An array of tag names that should always get inner indentation."},"profile.allowCompactBoolean":{"type":"boolean","default":false,"markdownDescription":"If `true`, compact notation of boolean attributes are produced."},"css.webkitProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."},"css.mozProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."},"css.oProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."},"css.msProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."},"css.fuzzySearchMinScore":{"type":"number","default":0.3,"markdownDescription":"The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."},"output.inlineBreak":{"type":"number","default":0,"markdownDescription":"The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line."},"output.reverseAttributes":{"type":"boolean","default":false,"markdownDescription":"If `true`, reverses attribute merging directions when resolving snippets."},"output.selfClosingStyle":{"type":"string","enum":["html","xhtml","xml"],"default":"html","markdownDescription":"Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`)."},"css.color.short":{"type":"boolean","default":true,"markdownDescription":"If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`."}}},"emmet.showSuggestionsAsSnippets":{"type":"boolean","default":false,"markdownDescription":"If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting."},"emmet.optimizeStylesheetParsing":{"type":"boolean","default":true,"markdownDescription":"When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed."}}},"commands":[{"command":"editor.emmet.action.wrapWithAbbreviation","title":"Wrap with Abbreviation","category":"Emmet"},{"command":"editor.emmet.action.removeTag","title":"Remove Tag","category":"Emmet"},{"command":"editor.emmet.action.updateTag","title":"Update Tag","category":"Emmet"},{"command":"editor.emmet.action.matchTag","title":"Go to Matching Pair","category":"Emmet"},{"command":"editor.emmet.action.balanceIn","title":"Balance (inward)","category":"Emmet"},{"command":"editor.emmet.action.balanceOut","title":"Balance (outward)","category":"Emmet"},{"command":"editor.emmet.action.prevEditPoint","title":"Go to Previous Edit Point","category":"Emmet"},{"command":"editor.emmet.action.nextEditPoint","title":"Go to Next Edit Point","category":"Emmet"},{"command":"editor.emmet.action.mergeLines","title":"Merge Lines","category":"Emmet"},{"command":"editor.emmet.action.selectPrevItem","title":"Select Previous Item","category":"Emmet"},{"command":"editor.emmet.action.selectNextItem","title":"Select Next Item","category":"Emmet"},{"command":"editor.emmet.action.splitJoinTag","title":"Split/Join Tag","category":"Emmet"},{"command":"editor.emmet.action.toggleComment","title":"Toggle Comment","category":"Emmet"},{"command":"editor.emmet.action.evaluateMathExpression","title":"Evaluate Math Expression","category":"Emmet"},{"command":"editor.emmet.action.updateImageSize","title":"Update Image Size","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOneTenth","title":"Increment by 0.1","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOne","title":"Increment by 1","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByTen","title":"Increment by 10","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOneTenth","title":"Decrement by 0.1","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOne","title":"Decrement by 1","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByTen","title":"Decrement by 10","category":"Emmet"},{"command":"editor.emmet.action.reflectCSSValue","title":"Reflect CSS Value","category":"Emmet"},{"command":"workbench.action.showEmmetCommands","title":"Show Emmet Commands","category":""}],"menus":{"commandPalette":[{"command":"editor.emmet.action.wrapWithAbbreviation","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.removeTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.updateTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.matchTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.balanceIn","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.balanceOut","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.prevEditPoint","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.nextEditPoint","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.mergeLines","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.selectPrevItem","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.selectNextItem","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.splitJoinTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.toggleComment","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.evaluateMathExpression","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.updateImageSize","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByOneTenth","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByOne","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByTen","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByOneTenth","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByOne","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByTen","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.reflectCSSValue","when":"!activeEditorIsReadonly"}]}},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}}},{"id":"vscode.extension-editing","identifier":{"value":"vscode.extension-editing","_lower":"vscode.extension-editing"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/extension-editing","path":"/snap/code/206/usr/share/code/resources/app/extensions/extension-editing","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"extension-editing","displayName":"Extension Authoring","description":"Provides linting capabilities for authoring extensions.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.4.0"},"icon":"images/icon.png","activationEvents":["onLanguage:json","onLanguage:markdown"],"main":"./dist/extensionEditingMain","browser":"./dist/browser/extensionEditingBrowserMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"vscode://schemas/vscode-extensions"},{"fileMatch":"*language-configuration.json","url":"vscode://schemas/language-configuration"},{"fileMatch":["*icon-theme.json","!*product-icon-theme.json"],"url":"vscode://schemas/icon-theme"},{"fileMatch":"*product-icon-theme.json","url":"vscode://schemas/product-icon-theme"},{"fileMatch":"*color-theme.json","url":"vscode://schemas/color-theme"}],"languages":[{"id":"ignore","filenames":[".vscodeignore"]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.fsharp","identifier":{"value":"vscode.fsharp","_lower":"vscode.fsharp"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/fsharp","path":"/snap/code/206/usr/share/code/resources/app/extensions/fsharp","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"fsharp","displayName":"F# Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in F# files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin ionide/ionide-fsgrammar grammars/fsharp.json ./syntaxes/fsharp.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"fsharp","extensions":[".fs",".fsi",".fsx",".fsscript"],"aliases":["F#","FSharp","fsharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"fsharp","scopeName":"source.fsharp","path":"./syntaxes/fsharp.tmLanguage.json"}],"snippets":[{"language":"fsharp","path":"./snippets/fsharp.code-snippets"}],"configurationDefaults":{"[fsharp]":{"diffEditor.ignoreTrimWhitespace":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.git","identifier":{"value":"vscode.git","_lower":"vscode.git"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/git","path":"/snap/code/206/usr/share/code/resources/app/extensions/git","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"git","displayName":"Git","description":"Git SCM Integration","publisher":"vscode","license":"MIT","version":"1.0.0","engines":{"vscode":"^1.5.0"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","enabledApiProposals":["canonicalUriProvider","contribEditSessions","contribEditorContentMenu","contribMergeEditorMenus","contribMultiDiffEditorMenus","contribDiffEditorGutterToolBarMenus","contribSourceControlHistoryItemMenu","contribSourceControlHistoryTitleMenu","contribSourceControlInputBoxMenu","contribSourceControlTitleMenu","contribViewsWelcome","editSessionIdentityProvider","quickDiffProvider","quickInputButtonLocation","quickPickSortByLabel","scmActionButton","scmHistoryProvider","scmMultiDiffEditor","scmProviderOptions","scmSelectedProvider","scmTextDocument","scmValidation","statusBarItemTooltip","tabInputMultiDiff","tabInputTextMerge","textEditorDiffInformation","timeline"],"categories":["Other"],"activationEvents":["*","onEditSession:file","onFileSystem:git","onFileSystem:git-show"],"extensionDependencies":["vscode.git-base"],"main":"./dist/main","icon":"resources/icons/git.png","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":false}},"contributes":{"commands":[{"command":"git.continueInLocalClone","title":"Clone Repository Locally and Open on Desktop...","category":"Git","icon":"$(repo-clone)","enablement":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && remoteName"},{"command":"git.clone","title":"Clone","category":"Git","enablement":"!operationInProgress"},{"command":"git.cloneRecursive","title":"Clone (Recursive)","category":"Git","enablement":"!operationInProgress"},{"command":"git.init","title":"Initialize Repository","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.openRepository","title":"Open Repository","category":"Git","enablement":"!operationInProgress"},{"command":"git.reopenClosedRepositories","title":"Reopen Closed Repositories...","icon":"$(repo)","category":"Git","enablement":"!operationInProgress && git.closedRepositoryCount != 0"},{"command":"git.close","title":"Close Repository","category":"Git","enablement":"!operationInProgress"},{"command":"git.closeOtherRepositories","title":"Close Other Repositories","category":"Git","enablement":"!operationInProgress"},{"command":"git.openWorktree","title":"Open Worktree in Current Window","category":"Git","enablement":"!operationInProgress"},{"command":"git.openWorktreeInNewWindow","title":"Open Worktree in New Window","category":"Git","enablement":"!operationInProgress"},{"command":"git.refresh","title":"Refresh","category":"Git","icon":"$(refresh)","enablement":"!operationInProgress"},{"command":"git.compareWithWorkspace","title":"Compare with Workspace","category":"Git"},{"command":"git.openChange","title":"Open Changes","category":"Git","icon":"$(compare-changes)"},{"command":"git.openAllChanges","title":"Open All Changes","category":"Git"},{"command":"git.openFile","title":"Open File","category":"Git","icon":"$(go-to-file)"},{"command":"git.openFile2","title":"Open File","category":"Git","icon":"$(go-to-file)"},{"command":"git.openHEADFile","title":"Open File (HEAD)","category":"Git"},{"command":"git.stage","title":"Stage Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageAll","title":"Stage All Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageAllTracked","title":"Stage All Tracked Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageAllUntracked","title":"Stage All Untracked Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageAllMerge","title":"Stage All Merge Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageSelectedRanges","title":"Stage Selected Ranges","category":"Git","enablement":"!operationInProgress"},{"command":"git.diff.stageHunk","title":"Stage Block","category":"Git","icon":"$(plus)"},{"command":"git.diff.stageSelection","title":"Stage Selection","category":"Git","icon":"$(plus)"},{"command":"git.revertSelectedRanges","title":"Revert Selected Ranges","category":"Git","enablement":"!operationInProgress"},{"command":"git.stageChange","title":"Stage Change","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.stageFile","title":"Stage Changes","category":"Git","icon":"$(add)","enablement":"!operationInProgress"},{"command":"git.revertChange","title":"Revert Change","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.unstage","title":"Unstage Changes","category":"Git","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"git.unstageAll","title":"Unstage All Changes","category":"Git","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"git.unstageSelectedRanges","title":"Unstage Selected Ranges","category":"Git","enablement":"!operationInProgress"},{"command":"git.unstageChange","title":"Unstage Change","category":"Git","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"git.unstageFile","title":"Unstage Changes","category":"Git","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"git.clean","title":"Discard Changes","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.cleanAll","title":"Discard All Changes","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.cleanAllTracked","title":"Discard All Tracked Changes","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.cleanAllUntracked","title":"Discard All Untracked Changes","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.rename","title":"Rename","category":"Git","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"git.commit","title":"Commit","category":"Git","icon":"$(check)","enablement":"!operationInProgress"},{"command":"git.commitAmend","title":"Commit (Amend)","category":"Git","icon":"$(check)","enablement":"!operationInProgress"},{"command":"git.commitSigned","title":"Commit (Signed Off)","category":"Git","icon":"$(check)","enablement":"!operationInProgress"},{"command":"git.commitStaged","title":"Commit Staged","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitEmpty","title":"Commit Empty","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitStagedSigned","title":"Commit Staged (Signed Off)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitStagedAmend","title":"Commit Staged (Amend)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAll","title":"Commit All","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAllSigned","title":"Commit All (Signed Off)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAllAmend","title":"Commit All (Amend)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitNoVerify","title":"Commit (No Verify)","category":"Git","icon":"$(check)","enablement":"!operationInProgress"},{"command":"git.commitStagedNoVerify","title":"Commit Staged (No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitEmptyNoVerify","title":"Commit Empty (No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitStagedSignedNoVerify","title":"Commit Staged (Signed Off, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAmendNoVerify","title":"Commit (Amend, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitSignedNoVerify","title":"Commit (Signed Off, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitStagedAmendNoVerify","title":"Commit Staged (Amend, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAllNoVerify","title":"Commit All (No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAllSignedNoVerify","title":"Commit All (Signed Off, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitAllAmendNoVerify","title":"Commit All (Amend, No Verify)","category":"Git","enablement":"!operationInProgress"},{"command":"git.commitMessageAccept","title":"Accept Commit Message","icon":"$(check)","category":"Git"},{"command":"git.commitMessageDiscard","title":"Discard Commit Message","icon":"$(discard)","category":"Git"},{"command":"git.restoreCommitTemplate","title":"Restore Commit Template","category":"Git","enablement":"!operationInProgress"},{"command":"git.undoCommit","title":"Undo Last Commit","category":"Git","enablement":"!operationInProgress"},{"command":"git.checkout","title":"Checkout to...","category":"Git","enablement":"!operationInProgress"},{"command":"git.graph.checkout","title":"Checkout","category":"Git","enablement":"!operationInProgress"},{"command":"git.checkoutDetached","title":"Checkout to (Detached)...","category":"Git","enablement":"!operationInProgress"},{"command":"git.graph.checkoutDetached","title":"Checkout (Detached)","category":"Git","enablement":"!operationInProgress"},{"command":"git.branch","title":"Create Branch...","category":"Git","enablement":"!operationInProgress"},{"command":"git.branchFrom","title":"Create Branch From...","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteBranch","title":"Delete Branch...","category":"Git","enablement":"!operationInProgress"},{"command":"git.graph.deleteBranch","title":"Delete Branch","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteRemoteBranch","title":"Delete Remote Branch...","category":"Git","enablement":"!operationInProgress"},{"command":"git.renameBranch","title":"Rename Branch...","category":"Git","enablement":"!operationInProgress"},{"command":"git.merge","title":"Merge...","category":"Git","enablement":"!operationInProgress"},{"command":"git.mergeAbort","title":"Abort Merge","category":"Git","enablement":"gitMergeInProgress"},{"command":"git.rebase","title":"Rebase Branch...","category":"Git","enablement":"!operationInProgress"},{"command":"git.createTag","title":"Create Tag...","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteTag","title":"Delete Tag...","category":"Git","enablement":"!operationInProgress"},{"command":"git.migrateWorktreeChanges","title":"Migrate Worktree Changes...","category":"Git","enablement":"!operationInProgress"},{"command":"git.createWorktree","title":"Create Worktree...","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteWorktree","title":"Delete Worktree","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteWorktreeFromPalette","title":"Delete Worktree...","category":"Git","enablement":"!operationInProgress"},{"command":"git.graph.deleteTag","title":"Delete Tag","category":"Git","enablement":"!operationInProgress"},{"command":"git.deleteRemoteTag","title":"Delete Remote Tag...","category":"Git","enablement":"!operationInProgress"},{"command":"git.fetch","title":"Fetch","category":"Git","enablement":"!operationInProgress"},{"command":"git.fetchPrune","title":"Fetch (Prune)","category":"Git","enablement":"!operationInProgress"},{"command":"git.fetchAll","title":"Fetch From All Remotes","icon":"$(git-fetch)","category":"Git","enablement":"!operationInProgress"},{"command":"git.fetchRef","title":"Fetch","icon":"$(git-fetch)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pull","title":"Pull","category":"Git","enablement":"!operationInProgress"},{"command":"git.pullRebase","title":"Pull (Rebase)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pullFrom","title":"Pull from...","category":"Git","enablement":"!operationInProgress"},{"command":"git.pullRef","title":"Pull","icon":"$(repo-pull)","category":"Git","enablement":"!operationInProgress && scmCurrentHistoryItemRefInFilter && scmCurrentHistoryItemRefHasRemote"},{"command":"git.push","title":"Push","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushForce","title":"Push (Force)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushTo","title":"Push to...","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushToForce","title":"Push to... (Force)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushTags","title":"Push Tags","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushWithTags","title":"Push (Follow Tags)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushWithTagsForce","title":"Push (Follow Tags, Force)","category":"Git","enablement":"!operationInProgress"},{"command":"git.pushRef","title":"Push","icon":"$(repo-push)","category":"Git","enablement":"!operationInProgress && scmCurrentHistoryItemRefInFilter && scmCurrentHistoryItemRefHasRemote"},{"command":"git.cherryPick","title":"Cherry Pick...","category":"Git","enablement":"!operationInProgress"},{"command":"git.graph.cherryPick","title":"Cherry Pick","category":"Git","enablement":"!operationInProgress"},{"command":"git.cherryPickAbort","title":"Abort Cherry Pick","category":"Git","enablement":"!operationInProgress"},{"command":"git.addRemote","title":"Add Remote...","category":"Git","enablement":"!operationInProgress"},{"command":"git.removeRemote","title":"Remove Remote","category":"Git","enablement":"!operationInProgress"},{"command":"git.sync","title":"Sync","category":"Git","enablement":"!operationInProgress"},{"command":"git.syncRebase","title":"Sync (Rebase)","category":"Git","enablement":"!operationInProgress"},{"command":"git.publish","title":"Publish Branch...","category":"Git","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"git.showOutput","title":"Show Git Output","category":"Git"},{"command":"git.ignore","title":"Add to .gitignore","category":"Git","enablement":"!operationInProgress"},{"command":"git.revealInExplorer","title":"Reveal in Explorer View","category":"Git"},{"command":"git.revealFileInOS.linux","title":"Open Containing Folder","category":"Git"},{"command":"git.revealFileInOS.mac","title":"Reveal in Finder","category":"Git"},{"command":"git.revealFileInOS.windows","title":"Reveal in File Explorer","category":"Git"},{"command":"git.stashIncludeUntracked","title":"Stash (Include Untracked)","category":"Git","enablement":"!operationInProgress"},{"command":"git.stash","title":"Stash","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashStaged","title":"Stash Staged","category":"Git","enablement":"!operationInProgress && gitVersion2.35"},{"command":"git.stashPop","title":"Pop Stash...","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashPopLatest","title":"Pop Latest Stash","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashPopEditor","title":"Pop Stash","icon":"$(git-stash-pop)","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashApply","title":"Apply Stash...","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashApplyLatest","title":"Apply Latest Stash","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashApplyEditor","title":"Apply Stash","icon":"$(git-stash-apply)","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashDrop","title":"Drop Stash...","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashDropAll","title":"Drop All Stashes...","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashDropEditor","title":"Drop Stash","icon":"$(trash)","category":"Git","enablement":"!operationInProgress"},{"command":"git.stashView","title":"View Stash...","category":"Git","enablement":"!operationInProgress"},{"command":"git.timeline.openDiff","title":"Open Changes","icon":"$(compare-changes)","category":"Git"},{"command":"git.timeline.copyCommitId","title":"Copy Commit ID","category":"Git"},{"command":"git.timeline.copyCommitMessage","title":"Copy Commit Message","category":"Git"},{"command":"git.timeline.selectForCompare","title":"Select for Compare","category":"Git"},{"command":"git.timeline.compareWithSelected","title":"Compare with Selected","category":"Git"},{"command":"git.timeline.viewCommit","title":"Open Commit","icon":"$(diff-multiple)","category":"Git"},{"command":"git.rebaseAbort","title":"Abort Rebase","category":"Git","enablement":"gitRebaseInProgress"},{"command":"git.closeAllDiffEditors","title":"Close All Diff Editors","category":"Git","enablement":"!operationInProgress"},{"command":"git.closeAllUnmodifiedEditors","title":"Close All Unmodified Editors","category":"Git","enablement":"!operationInProgress"},{"command":"git.api.getRepositories","title":"Get Repositories","category":"Git API"},{"command":"git.api.getRepositoryState","title":"Get Repository State","category":"Git API"},{"command":"git.api.getRemoteSources","title":"Get Remote Sources","category":"Git API"},{"command":"git.acceptMerge","title":"Complete Merge","category":"Git","enablement":"isMergeEditor && mergeEditorResultUri in git.mergeChanges"},{"command":"git.openMergeEditor","title":"Resolve in Merge Editor","category":"Git"},{"command":"git.runGitMerge","title":"Compute Conflicts With Git","category":"Git","enablement":"isMergeEditor"},{"command":"git.runGitMergeDiff3","title":"Compute Conflicts With Git (Diff3)","category":"Git","enablement":"isMergeEditor"},{"command":"git.manageUnsafeRepositories","title":"Manage Unsafe Repositories","category":"Git"},{"command":"git.openRepositoriesInParentFolders","title":"Open Repositories In Parent Folders","category":"Git"},{"command":"git.viewChanges","title":"Open Changes","icon":"$(diff-multiple)","category":"Git","enablement":"!operationInProgress"},{"command":"git.viewStagedChanges","title":"Open Staged Changes","icon":"$(diff-multiple)","category":"Git","enablement":"!operationInProgress"},{"command":"git.viewUntrackedChanges","title":"Open Untracked Changes","icon":"$(diff-multiple)","category":"Git","enablement":"!operationInProgress"},{"command":"git.viewCommit","title":"Open Commit","icon":"$(diff-multiple)","category":"Git","enablement":"!operationInProgress"},{"command":"git.copyCommitId","title":"Copy Commit ID","category":"Git"},{"command":"git.copyCommitMessage","title":"Copy Commit Message","category":"Git"},{"command":"git.blame.toggleEditorDecoration","title":"Toggle Git Blame Editor Decoration","category":"Git"},{"command":"git.blame.toggleStatusBarItem","title":"Toggle Git Blame Status Bar Item","category":"Git"}],"continueEditSession":[{"command":"git.continueInLocalClone","qualifiedName":"Continue Working in New Local Clone","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && remoteName","remoteGroup":"remote_42_git_0_local@0"}],"keybindings":[{"command":"git.stageSelectedRanges","key":"ctrl+k ctrl+alt+s","mac":"cmd+k cmd+alt+s","when":"editorTextFocus && resourceScheme == file"},{"command":"git.unstageSelectedRanges","key":"ctrl+k ctrl+n","mac":"cmd+k cmd+n","when":"editorTextFocus && isInDiffEditor && isInDiffRightEditor && resourceScheme == git"},{"command":"git.revertSelectedRanges","key":"ctrl+k ctrl+r","mac":"cmd+k cmd+r","when":"editorTextFocus && resourceScheme == file"}],"menus":{"commandPalette":[{"command":"git.continueInLocalClone","when":"false"},{"command":"git.clone","when":"config.git.enabled && !git.missing"},{"command":"git.cloneRecursive","when":"config.git.enabled && !git.missing"},{"command":"git.init","when":"config.git.enabled && !git.missing && remoteName != 'codespaces'"},{"command":"git.openRepository","when":"config.git.enabled && !git.missing"},{"command":"git.close","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.closeOtherRepositories","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount > 1"},{"command":"git.openWorktree","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount > 1"},{"command":"git.openWorktreeInNewWindow","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount > 1"},{"command":"git.refresh","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.openFile","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file && scmActiveResourceHasChanges"},{"command":"git.openHEADFile","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file && scmActiveResourceHasChanges"},{"command":"git.openChange","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stage","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllTracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllMerge","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file"},{"command":"git.stageChange","when":"false"},{"command":"git.revertSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file"},{"command":"git.revertChange","when":"false"},{"command":"git.openFile2","when":"false"},{"command":"git.unstage","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.unstageAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.unstageSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == git"},{"command":"git.unstageChange","when":"false"},{"command":"git.clean","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAllTracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAllUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.rename","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file && scmActiveResourceRepository"},{"command":"git.commit","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAmend","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitSigned","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStaged","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitEmpty","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedSigned","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedAmend","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAllSigned","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAllAmend","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.rebaseAbort","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && gitRebaseInProgress"},{"command":"git.commitNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitEmptyNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedSignedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAmendNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitSignedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedAmendNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllSignedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllAmendNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.restoreCommitTemplate","when":"false"},{"command":"git.commitMessageAccept","when":"false"},{"command":"git.commitMessageDiscard","when":"false"},{"command":"git.revealInExplorer","when":"false"},{"command":"git.revealFileInOS.linux","when":"false"},{"command":"git.revealFileInOS.mac","when":"false"},{"command":"git.revealFileInOS.windows","when":"false"},{"command":"git.undoCommit","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.checkout","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.branch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.branchFrom","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteBranch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteRemoteBranch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.renameBranch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cherryPick","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cherryPickAbort","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && gitCherryPickInProgress"},{"command":"git.pull","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pullFrom","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pullRebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.merge","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.mergeAbort","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && gitMergeInProgress"},{"command":"git.rebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.createTag","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteTag","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.migrateWorktreeChanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.createWorktree","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteWorktree","when":"false"},{"command":"git.openWorktree","when":"false"},{"command":"git.openWorktreeInNewWindow","when":"false"},{"command":"git.deleteWorktreeFromPalette","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteRemoteTag","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetchPrune","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetchAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.push","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushTo","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushToForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTags","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTagsForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushTags","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.addRemote","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.removeRemote","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.sync","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.syncRebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.publish","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.showOutput","when":"config.git.enabled"},{"command":"git.ignore","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file && scmActiveResourceRepository"},{"command":"git.stashIncludeUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stash","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashStaged","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && gitVersion2.35"},{"command":"git.stashPop","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashPopLatest","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashPopEditor","when":"false"},{"command":"git.stashApply","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashApplyLatest","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashApplyEditor","when":"false"},{"command":"git.stashDrop","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashDropAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashDropEditor","when":"false"},{"command":"git.timeline.openDiff","when":"false"},{"command":"git.timeline.copyCommitId","when":"false"},{"command":"git.timeline.copyCommitMessage","when":"false"},{"command":"git.timeline.selectForCompare","when":"false"},{"command":"git.timeline.compareWithSelected","when":"false"},{"command":"git.timeline.viewCommit","when":"false"},{"command":"git.closeAllDiffEditors","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.api.getRepositories","when":"false"},{"command":"git.api.getRepositoryState","when":"false"},{"command":"git.api.getRemoteSources","when":"false"},{"command":"git.openMergeEditor","when":"false"},{"command":"git.manageUnsafeRepositories","when":"config.git.enabled && !git.missing && git.unsafeRepositoryCount != 0"},{"command":"git.openRepositoriesInParentFolders","when":"config.git.enabled && !git.missing && git.parentRepositoryCount != 0"},{"command":"git.stashView","when":"config.git.enabled && !git.missing && config.multiDiffEditor.experimental.enabled"},{"command":"git.viewChanges","when":"config.git.enabled && !git.missing && config.multiDiffEditor.experimental.enabled"},{"command":"git.viewStagedChanges","when":"config.git.enabled && !git.missing && config.multiDiffEditor.experimental.enabled"},{"command":"git.viewUntrackedChanges","when":"config.git.enabled && !git.missing && config.multiDiffEditor.experimental.enabled && config.git.untrackedChanges == separate"},{"command":"git.viewCommit","when":"false"},{"command":"git.stageFile","when":"false"},{"command":"git.unstageFile","when":"false"},{"command":"git.fetchRef","when":"false"},{"command":"git.pullRef","when":"false"},{"command":"git.pushRef","when":"false"},{"command":"git.copyCommitId","when":"false"},{"command":"git.copyCommitMessage","when":"false"},{"command":"git.graph.checkout","when":"false"},{"command":"git.graph.checkoutDetached","when":"false"},{"command":"git.graph.deleteBranch","when":"false"},{"command":"git.graph.deleteTag","when":"false"},{"command":"git.graph.cherryPick","when":"false"},{"command":"git.diff.stageHunk","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && diffEditorOriginalUri =~ /^git\\:.*%22ref%22%3A%22~%22%7D$/"},{"command":"git.diff.stageSelection","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && diffEditorOriginalUri =~ /^git\\:.*%22ref%22%3A%22~%22%7D$/"}],"scm/title":[{"command":"git.commit","group":"navigation","when":"scmProvider == git"},{"command":"git.refresh","group":"navigation","when":"scmProvider == git"},{"command":"git.pull","group":"1_header@1","when":"scmProvider == git"},{"command":"git.push","group":"1_header@2","when":"scmProvider == git"},{"command":"git.clone","group":"1_header@3","when":"scmProvider == git"},{"command":"git.checkout","group":"1_header@4","when":"scmProvider == git"},{"command":"git.fetch","group":"1_header@5","when":"scmProvider == git"},{"submenu":"git.commit","group":"2_main@1","when":"scmProvider == git"},{"submenu":"git.changes","group":"2_main@2","when":"scmProvider == git"},{"submenu":"git.pullpush","group":"2_main@3","when":"scmProvider == git"},{"submenu":"git.branch","group":"2_main@4","when":"scmProvider == git"},{"submenu":"git.remotes","group":"2_main@5","when":"scmProvider == git"},{"submenu":"git.stash","group":"2_main@6","when":"scmProvider == git"},{"submenu":"git.tags","group":"2_main@7","when":"scmProvider == git"},{"submenu":"git.worktrees","group":"2_main@8","when":"scmProvider == git"},{"command":"git.showOutput","group":"3_footer","when":"scmProvider == git"}],"scm/sourceControl/title":[{"command":"git.reopenClosedRepositories","group":"navigation@1","when":"git.closedRepositoryCount > 0"}],"scm/sourceControl":[{"command":"git.close","group":"navigation@1","when":"scmProvider == git"},{"command":"git.closeOtherRepositories","group":"navigation@2","when":"scmProvider == git && gitOpenRepositoryCount > 1"},{"command":"git.openWorktree","group":"1_worktree@1","when":"scmProvider == git && scmProviderContext == worktree"},{"command":"git.openWorktreeInNewWindow","group":"1_worktree@2","when":"scmProvider == git && scmProviderContext == worktree"},{"command":"git.deleteWorktree","group":"2_worktree@1","when":"scmProvider == git && scmProviderContext == worktree"}],"scm/resourceGroup/context":[{"command":"git.stageAllMerge","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.stageAllMerge","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.viewStagedChanges","when":"scmProvider == git && scmResourceGroup == index && config.multiDiffEditor.experimental.enabled","group":"inline@1"},{"command":"git.viewChanges","when":"scmProvider == git && scmResourceGroup == workingTree && config.multiDiffEditor.experimental.enabled","group":"inline@1"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"1_modification"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"1_modification"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"inline@2"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"inline@2"},{"command":"git.cleanAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"1_modification"},{"command":"git.stageAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"1_modification"},{"command":"git.cleanAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"inline@2"},{"command":"git.stageAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"inline@2"},{"command":"git.cleanAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.stageAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.viewUntrackedChanges","when":"scmProvider == git && scmResourceGroup == untracked && config.multiDiffEditor.experimental.enabled","group":"inline@1"},{"command":"git.cleanAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.stageAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"}],"scm/resourceFolder/context":[{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification@3"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification@3"}],"scm/resourceState/context":[{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == merge","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.revealFileInOS.linux","when":"scmProvider == git && scmResourceGroup == merge && remoteName == '' && isLinux","group":"2_view@1"},{"command":"git.revealFileInOS.mac","when":"scmProvider == git && scmResourceGroup == merge && remoteName == '' && isMac","group":"2_view@1"},{"command":"git.revealFileInOS.windows","when":"scmProvider == git && scmResourceGroup == merge && remoteName == '' && isWindows","group":"2_view@1"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == merge","group":"2_view@2"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.revealFileInOS.linux","when":"scmProvider == git && scmResourceGroup == index && remoteName == '' && isLinux","group":"2_view@1"},{"command":"git.revealFileInOS.mac","when":"scmProvider == git && scmResourceGroup == index && remoteName == '' && isMac","group":"2_view@1"},{"command":"git.revealFileInOS.windows","when":"scmProvider == git && scmResourceGroup == index && remoteName == '' && isWindows","group":"2_view@1"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == index","group":"2_view@2"},{"command":"git.compareWithWorkspace","when":"scmProvider == git && scmResourceGroup == index && scmResourceState == worktree","group":"worktree_diff"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.compareWithWorkspace","when":"scmProvider == git && scmResourceGroup == workingTree && scmResourceState == worktree","group":"worktree_diff"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification@3"},{"command":"git.revealFileInOS.linux","when":"scmProvider == git && scmResourceGroup == workingTree && remoteName == '' && isLinux","group":"2_view@1"},{"command":"git.revealFileInOS.mac","when":"scmProvider == git && scmResourceGroup == workingTree && remoteName == '' && isMac","group":"2_view@1"},{"command":"git.revealFileInOS.windows","when":"scmProvider == git && scmResourceGroup == workingTree && remoteName == '' && isWindows","group":"2_view@1"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == workingTree","group":"2_view@2"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification@3"}],"scm/history/title":[{"command":"git.fetchAll","group":"navigation@900","when":"scmProvider == git"},{"command":"git.pullRef","group":"navigation@901","when":"scmProvider == git"},{"command":"git.pushRef","when":"scmProvider == git && scmCurrentHistoryItemRefHasRemote","group":"navigation@902"},{"command":"git.publish","when":"scmProvider == git && !scmCurrentHistoryItemRefHasRemote","group":"navigation@903"}],"scm/historyItem/context":[{"command":"git.graph.checkoutDetached","when":"scmProvider == git","group":"1_checkout@2"},{"command":"git.branch","when":"scmProvider == git","group":"2_branch@2"},{"command":"git.createTag","when":"scmProvider == git","group":"3_tag@1"},{"command":"git.graph.cherryPick","when":"scmProvider == git","group":"4_modify@1"},{"command":"git.copyCommitId","when":"scmProvider == git && !listMultiSelection","group":"9_copy@1"},{"command":"git.copyCommitMessage","when":"scmProvider == git && !listMultiSelection","group":"9_copy@2"}],"scm/historyItemRef/context":[{"command":"git.graph.checkout","when":"scmProvider == git","group":"1_checkout@1"},{"command":"git.graph.deleteBranch","when":"scmProvider == git && scmHistoryItemRef =~ /^refs\\/heads\\/|^refs\\/remotes\\//","group":"2_branch@2"},{"command":"git.graph.deleteTag","when":"scmProvider == git && scmHistoryItemRef =~ /^refs\\/tags\\//","group":"3_tag@2"}],"editor/title":[{"command":"git.openFile","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.openFile","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInNotebookTextDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.openChange","group":"navigation@2","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && !isInDiffEditor && !isMergeEditor && resourceScheme == file && scmActiveResourceHasChanges"},{"command":"git.commitMessageAccept","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && editorLangId == git-commit"},{"command":"git.commitMessageDiscard","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && editorLangId == git-commit"},{"command":"git.stashApplyEditor","alt":"git.stashPopEditor","group":"navigation@1","when":"config.git.enabled && !git.missing && resourceScheme == git-stash"},{"command":"git.stashDropEditor","group":"navigation@2","when":"config.git.enabled && !git.missing && resourceScheme == git-stash"},{"command":"git.stage","group":"2_git@1","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && !isInDiffEditor && !isMergeEditor && resourceScheme == file && git.activeResourceHasUnstagedChanges"},{"command":"git.unstage","group":"2_git@2","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && !isInDiffEditor && !isMergeEditor && resourceScheme == file && git.activeResourceHasStagedChanges"},{"command":"git.stage","group":"2_git@1","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == file"},{"command":"git.stageSelectedRanges","group":"2_git@2","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == file"},{"command":"git.unstage","group":"2_git@3","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == git"},{"command":"git.unstageSelectedRanges","group":"2_git@4","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == git"},{"command":"git.revertSelectedRanges","group":"2_git@5","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == file"}],"editor/context":[{"command":"git.stageSelectedRanges","group":"2_git@1","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == file"},{"command":"git.unstageSelectedRanges","group":"2_git@2","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == git"},{"command":"git.revertSelectedRanges","group":"2_git@3","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && isInDiffRightEditor && !isEmbeddedDiffEditor && resourceScheme == file"}],"editor/content":[{"command":"git.acceptMerge","when":"isMergeResultEditor && mergeEditorBaseUri =~ /^(git|file):/ && mergeEditorResultUri in git.mergeChanges"},{"command":"git.openMergeEditor","group":"navigation@-10","when":"config.git.enabled && !git.missing && !isInDiffEditor && !isMergeEditor && resource in git.mergeChanges"}],"multiDiffEditor/resource/title":[{"command":"git.stageFile","group":"navigation","when":"scmProvider == git && scmResourceGroup == workingTree"},{"command":"git.stageFile","group":"navigation","when":"scmProvider == git && scmResourceGroup == untracked"},{"command":"git.unstageFile","group":"navigation","when":"scmProvider == git && scmResourceGroup == index"}],"diffEditor/gutter/hunk":[{"command":"git.diff.stageHunk","group":"primary@10","when":"diffEditorOriginalUri =~ /^git\\:.*%22ref%22%3A%22~%22%7D$/"}],"diffEditor/gutter/selection":[{"command":"git.diff.stageSelection","group":"primary@10","when":"diffEditorOriginalUri =~ /^git\\:.*%22ref%22%3A%22~%22%7D$/"}],"scm/change/title":[{"command":"git.stageChange","when":"config.git.enabled && !git.missing && originalResource =~ /^git\\:.*%22ref%22%3A%22%22%7D$/"},{"command":"git.revertChange","when":"config.git.enabled && !git.missing && originalResource =~ /^git\\:.*%22ref%22%3A%22%22%7D$/"},{"command":"git.unstageChange","when":"false"}],"timeline/item/context":[{"command":"git.timeline.viewCommit","group":"inline","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection && config.multiDiffEditor.experimental.enabled"},{"command":"git.timeline.openDiff","group":"1_actions@1","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.viewCommit","group":"1_actions@2","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection && config.multiDiffEditor.experimental.enabled"},{"command":"git.timeline.compareWithSelected","group":"3_compare@1","when":"config.git.enabled && !git.missing && git.timeline.selectedForCompare && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.selectForCompare","group":"3_compare@2","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.copyCommitId","group":"5_copy@1","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection"},{"command":"git.timeline.copyCommitMessage","group":"5_copy@2","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection"}],"git.commit":[{"command":"git.commit","group":"1_commit@1"},{"command":"git.commitStaged","group":"1_commit@2"},{"command":"git.commitAll","group":"1_commit@3"},{"command":"git.undoCommit","group":"1_commit@4"},{"command":"git.rebaseAbort","group":"1_commit@5"},{"command":"git.commitNoVerify","group":"2_commit_noverify@1","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedNoVerify","group":"2_commit_noverify@2","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllNoVerify","group":"2_commit_noverify@3","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAmend","group":"3_amend@1"},{"command":"git.commitStagedAmend","group":"3_amend@2"},{"command":"git.commitAllAmend","group":"3_amend@3"},{"command":"git.commitAmendNoVerify","group":"4_amend_noverify@1","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedAmendNoVerify","group":"4_amend_noverify@2","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllAmendNoVerify","group":"4_amend_noverify@3","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitSigned","group":"5_signoff@1"},{"command":"git.commitStagedSigned","group":"5_signoff@2"},{"command":"git.commitAllSigned","group":"5_signoff@3"},{"command":"git.commitSignedNoVerify","group":"6_signoff_noverify@1","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedSignedNoVerify","group":"6_signoff_noverify@2","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllSignedNoVerify","group":"6_signoff_noverify@3","when":"config.git.allowNoVerifyCommit"}],"git.changes":[{"command":"git.stageAll","group":"changes@1"},{"command":"git.unstageAll","group":"changes@2"},{"command":"git.cleanAll","group":"changes@3"}],"git.pullpush":[{"command":"git.sync","group":"1_sync@1"},{"command":"git.syncRebase","when":"gitState == idle","group":"1_sync@2"},{"command":"git.pull","group":"2_pull@1"},{"command":"git.pullRebase","group":"2_pull@2"},{"command":"git.pullFrom","group":"2_pull@3"},{"command":"git.push","group":"3_push@1"},{"command":"git.pushForce","when":"config.git.allowForcePush","group":"3_push@2"},{"command":"git.pushTo","group":"3_push@3"},{"command":"git.pushToForce","when":"config.git.allowForcePush","group":"3_push@4"},{"command":"git.fetch","group":"4_fetch@1"},{"command":"git.fetchPrune","group":"4_fetch@2"},{"command":"git.fetchAll","group":"4_fetch@3"}],"git.branch":[{"command":"git.merge","group":"1_merge@1"},{"command":"git.rebase","group":"1_merge@2"},{"command":"git.branch","group":"2_branch@1"},{"command":"git.branchFrom","group":"2_branch@2"},{"command":"git.renameBranch","group":"3_modify@1"},{"command":"git.deleteBranch","group":"3_modify@2"},{"command":"git.deleteRemoteBranch","group":"3_modify@3"},{"command":"git.publish","group":"4_publish@1"}],"git.remotes":[{"command":"git.addRemote","group":"remote@1"},{"command":"git.removeRemote","group":"remote@2"}],"git.stash":[{"command":"git.stash","group":"1_stash@1"},{"command":"git.stashIncludeUntracked","group":"1_stash@2"},{"command":"git.stashStaged","when":"gitVersion2.35","group":"1_stash@3"},{"command":"git.stashApplyLatest","group":"2_apply@1"},{"command":"git.stashApply","group":"2_apply@2"},{"command":"git.stashPopLatest","group":"3_pop@1"},{"command":"git.stashPop","group":"3_pop@2"},{"command":"git.stashDrop","group":"4_drop@1"},{"command":"git.stashDropAll","group":"4_drop@2"},{"command":"git.stashView","when":"config.multiDiffEditor.experimental.enabled","group":"5_preview@1"}],"git.tags":[{"command":"git.createTag","group":"tags@1"},{"command":"git.deleteTag","group":"tags@2"},{"command":"git.deleteRemoteTag","group":"tags@3"}],"git.worktrees":[{"when":"scmProviderContext == worktree","command":"git.openWorktree","group":"openWorktrees@1"},{"when":"scmProviderContext == worktree","command":"git.openWorktreeInNewWindow","group":"openWorktrees@2"},{"when":"scmProviderContext == repository","command":"git.createWorktree","group":"worktrees@1"},{"when":"scmProviderContext == worktree","command":"git.deleteWorktree","group":"worktrees@2"}]},"submenus":[{"id":"git.commit","label":"Commit"},{"id":"git.changes","label":"Changes"},{"id":"git.pullpush","label":"Pull, Push"},{"id":"git.branch","label":"Branch"},{"id":"git.remotes","label":"Remote"},{"id":"git.stash","label":"Stash"},{"id":"git.tags","label":"Tags"},{"id":"git.worktrees","label":"Worktrees"}],"configuration":{"title":"Git","properties":{"git.enabled":{"type":"boolean","scope":"resource","description":"Whether Git is enabled.","default":true},"git.path":{"type":["string","null","array"],"markdownDescription":"Path and filename of the git executable, e.g. `C:\\Program Files\\Git\\bin\\git.exe` (Windows). This can also be an array of string values containing multiple paths to look up.","default":null,"scope":"machine"},"git.autoRepositoryDetection":{"type":["boolean","string"],"enum":[true,false,"subFolders","openEditors"],"enumDescriptions":["Scan for both subfolders of the current opened folder and parent folders of open files.","Disable automatic repository scanning.","Scan for subfolders of the currently opened folder.","Scan for parent folders of open files."],"description":"Configures when repositories should be automatically detected.","default":true},"git.autorefresh":{"type":"boolean","description":"Whether auto refreshing is enabled.","default":true},"git.autofetch":{"type":["boolean","string"],"enum":[true,false,"all"],"scope":"resource","markdownDescription":"When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.","default":false,"tags":["usesOnlineServices"]},"git.autofetchPeriod":{"type":"number","scope":"resource","markdownDescription":"Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.","default":180},"git.defaultBranchName":{"type":"string","markdownDescription":"The name of the default branch (example: main, trunk, development) when initializing a new Git repository. When set to empty, the default branch name configured in Git will be used. **Note:** Requires Git version `2.28.0` or later.","default":"main","scope":"resource"},"git.branchPrefix":{"type":"string","description":"Prefix used when creating a new branch.","default":"","scope":"resource"},"git.branchProtection":{"type":"array","markdownDescription":"List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.","items":{"type":"string"},"default":[],"scope":"resource"},"git.branchProtectionPrompt":{"type":"string","description":"Controls whether a prompt is being shown before changes are committed to a protected branch.","enum":["alwaysCommit","alwaysCommitToNewBranch","alwaysPrompt"],"enumDescriptions":["Always commit changes to the protected branch.","Always commit changes to a new branch.","Always prompt before changes are committed to a protected branch."],"default":"alwaysPrompt","scope":"resource"},"git.branchValidationRegex":{"type":"string","description":"A regular expression to validate new branch names.","default":""},"git.branchWhitespaceChar":{"type":"string","description":"The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.","default":"-"},"git.branchRandomName.enable":{"type":"boolean","description":"Controls whether a random name is generated when creating a new branch.","default":false,"scope":"resource"},"git.branchRandomName.dictionary":{"type":"array","markdownDescription":"List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.","items":{"type":"string","enum":["adjectives","animals","colors","numbers"],"enumDescriptions":["A random adjective","A random animal name","A random color name","A random number between 100 and 999"]},"minItems":1,"maxItems":5,"default":["adjectives","animals"],"scope":"resource"},"git.confirmSync":{"type":"boolean","description":"Confirm before synchronizing Git repositories.","default":true},"git.countBadge":{"type":"string","enum":["all","tracked","off"],"enumDescriptions":["Count all changes.","Count only tracked changes.","Turn off counter."],"description":"Controls the Git count badge.","default":"all","scope":"resource"},"git.checkoutType":{"type":"array","items":{"type":"string","enum":["local","tags","remote"],"enumDescriptions":["Local branches","Tags","Remote branches"]},"uniqueItems":true,"markdownDescription":"Controls what type of Git refs are listed when running `Checkout to...`.","default":["local","remote","tags"]},"git.ignoreLegacyWarning":{"type":"boolean","description":"Ignores the legacy Git warning.","default":false},"git.ignoreMissingGitWarning":{"type":"boolean","description":"Ignores the warning when Git is missing.","default":false},"git.ignoreWindowsGit27Warning":{"type":"boolean","description":"Ignores the warning when Git 2.25 - 2.26 is installed on Windows.","default":false},"git.ignoreLimitWarning":{"type":"boolean","description":"Ignores the warning when there are too many changes in a repository.","default":false},"git.ignoreRebaseWarning":{"type":"boolean","description":"Ignores the warning when it looks like the branch might have been rebased when pulling.","default":false},"git.defaultCloneDirectory":{"type":["string","null"],"default":null,"scope":"machine","description":"The default location to clone a Git repository."},"git.useEditorAsCommitInput":{"type":"boolean","description":"Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.","default":true},"git.verboseCommit":{"type":"boolean","scope":"resource","markdownDescription":"Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.","default":false},"git.enableSmartCommit":{"type":"boolean","scope":"resource","description":"Commit all changes when there are no staged changes.","default":false},"git.smartCommitChanges":{"type":"string","enum":["all","tracked"],"enumDescriptions":["Automatically stage all changes.","Automatically stage tracked changes only."],"scope":"resource","description":"Control which changes are automatically staged by Smart Commit.","default":"all"},"git.suggestSmartCommit":{"type":"boolean","scope":"resource","description":"Suggests to enable smart commit (commit all changes when there are no staged changes).","default":true},"git.enableCommitSigning":{"type":"boolean","scope":"resource","description":"Enables commit signing with GPG, X.509, or SSH.","default":false},"git.confirmEmptyCommits":{"type":"boolean","scope":"resource","description":"Always confirm the creation of empty commits for the 'Git: Commit Empty' command.","default":true},"git.decorations.enabled":{"type":"boolean","default":true,"description":"Controls whether Git contributes colors and badges to the Explorer and the Open Editors view."},"git.enableStatusBarSync":{"type":"boolean","default":true,"description":"Controls whether the Git Sync command appears in the status bar.","scope":"resource"},"git.followTagsWhenSync":{"type":"boolean","scope":"resource","default":false,"description":"Push all annotated tags when running the sync command."},"git.replaceTagsWhenPull":{"type":"boolean","scope":"resource","default":false,"description":"Automatically replace the local tags with the remote tags in case of a conflict when running the pull command."},"git.promptToSaveFilesBeforeStash":{"type":"string","enum":["always","staged","never"],"enumDescriptions":["Check for any unsaved files.","Check only for unsaved staged files.","Disable this check."],"scope":"resource","default":"always","description":"Controls whether Git should check for unsaved files before stashing changes."},"git.promptToSaveFilesBeforeCommit":{"type":"string","enum":["always","staged","never"],"enumDescriptions":["Check for any unsaved files.","Check only for unsaved staged files.","Disable this check."],"scope":"resource","default":"always","description":"Controls whether Git should check for unsaved files before committing."},"git.postCommitCommand":{"type":"string","enum":["none","push","sync"],"enumDescriptions":["Don't run any command after a commit.","Run 'git push' after a successful commit.","Run 'git pull' and 'git push' after a successful commit."],"markdownDescription":"Run a git command after a successful commit.","scope":"resource","default":"none"},"git.rememberPostCommitCommand":{"type":"boolean","description":"Remember the last git command that ran after a commit.","scope":"resource","default":false},"git.openAfterClone":{"type":"string","enum":["always","alwaysNewWindow","whenNoFolderOpen","prompt"],"enumDescriptions":["Always open in current window.","Always open in a new window.","Only open in current window when no folder is opened.","Always prompt for action."],"default":"prompt","description":"Controls whether to open a repository automatically after cloning."},"git.showInlineOpenFileAction":{"type":"boolean","default":true,"description":"Controls whether to show an inline Open File action in the Git changes view."},"git.showPushSuccessNotification":{"type":"boolean","description":"Controls whether to show a notification when a push is successful.","default":false},"git.inputValidation":{"type":"boolean","default":false,"description":"Controls whether to show commit message input validation diagnostics."},"git.inputValidationLength":{"type":"number","default":72,"description":"Controls the commit message length threshold for showing a warning."},"git.inputValidationSubjectLength":{"type":["number","null"],"default":50,"markdownDescription":"Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `#git.inputValidationLength#`."},"git.detectSubmodules":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to automatically detect Git submodules."},"git.detectSubmodulesLimit":{"type":"number","scope":"resource","default":10,"description":"Controls the limit of Git submodules detected."},"git.detectWorktrees":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to automatically detect Git worktrees."},"git.detectWorktreesLimit":{"type":"number","scope":"resource","default":10,"description":"Controls the limit of Git worktrees detected."},"git.alwaysShowStagedChangesResourceGroup":{"type":"boolean","scope":"resource","default":false,"description":"Always show the Staged Changes resource group."},"git.alwaysSignOff":{"type":"boolean","scope":"resource","default":false,"description":"Controls the signoff flag for all commits."},"git.ignoreSubmodules":{"type":"boolean","scope":"resource","default":false,"description":"Ignore modifications to submodules in the file tree."},"git.ignoredRepositories":{"type":"array","items":{"type":"string"},"default":[],"scope":"window","description":"List of Git repositories to ignore."},"git.scanRepositories":{"type":"array","items":{"type":"string"},"default":[],"scope":"resource","description":"List of paths to search for Git repositories in."},"git.showProgress":{"type":"boolean","description":"Controls whether Git actions should show progress.","default":true,"scope":"resource"},"git.rebaseWhenSync":{"type":"boolean","scope":"resource","default":false,"description":"Force Git to use rebase when running the sync command."},"git.pullBeforeCheckout":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out."},"git.fetchOnPull":{"type":"boolean","scope":"resource","default":false,"description":"When enabled, fetch all branches when pulling. Otherwise, fetch just the current one."},"git.pruneOnFetch":{"type":"boolean","scope":"resource","default":false,"description":"Prune when fetching."},"git.pullTags":{"type":"boolean","scope":"resource","default":true,"description":"Fetch all tags when pulling."},"git.autoStash":{"type":"boolean","scope":"resource","default":false,"description":"Stash any changes before pulling and restore them after successful pull."},"git.allowForcePush":{"type":"boolean","default":false,"description":"Controls whether force push (with or without lease) is enabled."},"git.useForcePushWithLease":{"type":"boolean","default":true,"description":"Controls whether force pushing uses the safer force-with-lease variant."},"git.useForcePushIfIncludes":{"type":"boolean","default":true,"markdownDescription":"Controls whether force pushing uses the safer force-if-includes variant. Note: This setting requires the `#git.useForcePushWithLease#` setting to be enabled, and Git version `2.30.0` or later."},"git.confirmForcePush":{"type":"boolean","default":true,"description":"Controls whether to ask for confirmation before force-pushing."},"git.allowNoVerifyCommit":{"type":"boolean","default":false,"description":"Controls whether commits without running pre-commit and commit-msg hooks are allowed."},"git.confirmNoVerifyCommit":{"type":"boolean","default":true,"description":"Controls whether to ask for confirmation before committing without verification."},"git.closeDiffOnOperation":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged."},"git.openDiffOnClick":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened."},"git.supportCancellation":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation."},"git.branchSortOrder":{"type":"string","enum":["committerdate","alphabetically"],"default":"committerdate","description":"Controls the sort order for branches."},"git.untrackedChanges":{"type":"string","enum":["mixed","separate","hidden"],"enumDescriptions":["All changes, tracked and untracked, appear together and behave equally.","Untracked changes appear separately in the Source Control view. They are also excluded from several actions.","Untracked changes are hidden and excluded from several actions."],"default":"mixed","description":"Controls how untracked changes behave.","scope":"resource"},"git.requireGitUserConfig":{"type":"boolean","description":"Controls whether to require explicit Git user configuration or allow Git to guess if missing.","default":true,"scope":"resource"},"git.showCommitInput":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to show the commit input in the Git source control panel."},"git.terminalAuthentication":{"type":"boolean","default":true,"description":"Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting."},"git.terminalGitEditor":{"type":"boolean","default":false,"description":"Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting."},"git.useCommitInputAsStashMessage":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether to use the message from the commit input box as the default stash message."},"git.useIntegratedAskPass":{"type":"boolean","default":true,"description":"Controls whether GIT_ASKPASS should be overwritten to use the integrated version."},"git.githubAuthentication":{"markdownDeprecationMessage":"This setting is now deprecated, please use `#github.gitAuthentication#` instead."},"git.timeline.date":{"type":"string","enum":["committed","authored"],"enumDescriptions":["Use the committed date","Use the authored date"],"default":"committed","description":"Controls which date to use for items in the Timeline view.","scope":"window"},"git.timeline.showAuthor":{"type":"boolean","default":true,"description":"Controls whether to show the commit author in the Timeline view.","scope":"window"},"git.timeline.showUncommitted":{"type":"boolean","default":false,"description":"Controls whether to show uncommitted changes in the Timeline view.","scope":"window"},"git.showActionButton":{"type":"object","additionalProperties":false,"description":"Controls whether an action button is shown in the Source Control view.","properties":{"commit":{"type":"boolean","description":"Show an action button to commit changes when the local branch has modified files ready to be committed."},"publish":{"type":"boolean","description":"Show an action button to publish the local branch when it does not have a tracking remote branch."},"sync":{"type":"boolean","description":"Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch."}},"default":{"commit":true,"publish":true,"sync":true},"scope":"resource"},"git.statusLimit":{"type":"number","scope":"resource","default":10000,"description":"Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit."},"git.repositoryScanIgnoredFolders":{"type":"array","items":{"type":"string"},"default":["node_modules"],"scope":"resource","markdownDescription":"List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`."},"git.repositoryScanMaxDepth":{"type":"number","scope":"resource","default":1,"markdownDescription":"Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit."},"git.commandsToLog":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"List of git commands (ex: commit, push) that would have their `stdout` logged to the [git output](command:git.showOutput). If the git command has a client-side hook configured, the client-side hook's `stdout` will also be logged to the [git output](command:git.showOutput)."},"git.mergeEditor":{"type":"boolean","default":false,"markdownDescription":"Open the merge editor for files that are currently under conflict.","scope":"window"},"git.optimisticUpdate":{"type":"boolean","default":true,"markdownDescription":"Controls whether to optimistically update the state of the Source Control view after running git commands.","scope":"resource","tags":["experimental"]},"git.openRepositoryInParentFolders":{"type":"string","enum":["always","never","prompt"],"enumDescriptions":["Always open a repository in parent folders of workspaces or open files.","Never open a repository in parent folders of workspaces or open files.","Prompt before opening a repository the parent folders of workspaces or open files."],"default":"prompt","markdownDescription":"Control whether a repository in parent folders of workspaces or open files should be opened.","scope":"resource"},"git.similarityThreshold":{"type":"number","default":50,"minimum":0,"maximum":100,"markdownDescription":"Controls the threshold of the similarity index (the amount of additions/deletions compared to the file's size) for changes in a pair of added/deleted files to be considered a rename. **Note:** Requires Git version `2.18.0` or later.","scope":"resource"},"git.blame.editorDecoration.enabled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to show blame information in the editor using editor decorations."},"git.blame.editorDecoration.template":{"type":"string","default":"${subject}, ${authorName} (${authorDateAgo})","markdownDescription":"Template for the blame information editor decoration. Supported variables:\n\n* `hash`: Commit hash\n\n* `hashShort`: First N characters of the commit hash according to `#git.commitShortHashLength#`\n\n* `subject`: First line of the commit message\n\n* `authorName`: Author name\n\n* `authorEmail`: Author email\n\n* `authorDate`: Author date\n\n* `authorDateAgo`: Time difference between now and the author date\n\n"},"git.blame.statusBarItem.enabled":{"type":"boolean","default":true,"markdownDescription":"Controls whether to show blame information in the status bar."},"git.blame.statusBarItem.template":{"type":"string","default":"${authorName} (${authorDateAgo})","markdownDescription":"Template for the blame information status bar item. Supported variables:\n\n* `hash`: Commit hash\n\n* `hashShort`: First N characters of the commit hash according to `#git.commitShortHashLength#`\n\n* `subject`: First line of the commit message\n\n* `authorName`: Author name\n\n* `authorEmail`: Author email\n\n* `authorDate`: Author date\n\n* `authorDateAgo`: Time difference between now and the author date\n\n"},"git.commitShortHashLength":{"type":"number","default":7,"minimum":7,"maximum":40,"markdownDescription":"Controls the length of the commit short hash.","scope":"resource"},"git.diagnosticsCommitHook.enabled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to check for unresolved diagnostics before committing.","scope":"resource"},"git.diagnosticsCommitHook.sources":{"type":"object","additionalProperties":{"type":"string","enum":["error","warning","information","hint","none"]},"default":{"*":"error"},"markdownDescription":"Controls the list of sources (**Item**) and the minimum severity (**Value**) to be considered before committing. **Note:** To ignore diagnostics from a particular source, add the source to the list and set the minimum severity to `none`.","scope":"resource"},"git.discardUntrackedChangesToTrash":{"type":"boolean","default":true,"markdownDescription":"Controls whether discarding untracked changes moves the file(s) to the Recycle Bin (Windows), Trash (macOS, Linux) instead of deleting them permanently. **Note:** This setting has no effect when connected to a remote or when running in Linux as a snap package."},"git.showReferenceDetails":{"type":"boolean","default":true,"markdownDescription":"Controls whether to show the details of the last commit for Git refs in the checkout, branch, and tag pickers."}}},"colors":[{"id":"gitDecoration.addedResourceForeground","description":"Color for added resources.","defaults":{"light":"#587c0c","dark":"#81b88b","highContrast":"#a1e3ad","highContrastLight":"#374e06"}},{"id":"gitDecoration.modifiedResourceForeground","description":"Color for modified resources.","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D","highContrastLight":"#895503"}},{"id":"gitDecoration.deletedResourceForeground","description":"Color for deleted resources.","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39","highContrastLight":"#ad0707"}},{"id":"gitDecoration.renamedResourceForeground","description":"Color for renamed or copied resources.","defaults":{"light":"#007100","dark":"#73C991","highContrast":"#73C991","highContrastLight":"#007100"}},{"id":"gitDecoration.untrackedResourceForeground","description":"Color for untracked resources.","defaults":{"light":"#007100","dark":"#73C991","highContrast":"#73C991","highContrastLight":"#007100"}},{"id":"gitDecoration.ignoredResourceForeground","description":"Color for ignored resources.","defaults":{"light":"#8E8E90","dark":"#8C8C8C","highContrast":"#A7A8A9","highContrastLight":"#8e8e90"}},{"id":"gitDecoration.stageModifiedResourceForeground","description":"Color for modified resources which have been staged.","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D","highContrastLight":"#895503"}},{"id":"gitDecoration.stageDeletedResourceForeground","description":"Color for deleted resources which have been staged.","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39","highContrastLight":"#ad0707"}},{"id":"gitDecoration.conflictingResourceForeground","description":"Color for resources with conflicts.","defaults":{"light":"#ad0707","dark":"#e4676b","highContrast":"#c74e39","highContrastLight":"#ad0707"}},{"id":"gitDecoration.submoduleResourceForeground","description":"Color for submodule resources.","defaults":{"light":"#1258a7","dark":"#8db9e2","highContrast":"#8db9e2","highContrastLight":"#1258a7"}},{"id":"git.blame.editorDecorationForeground","description":"Color for the blame editor decoration.","defaults":{"dark":"editorInlayHint.foreground","light":"editorInlayHint.foreground","highContrast":"editorInlayHint.foreground","highContrastLight":"editorInlayHint.foreground"}}],"configurationDefaults":{"[git-commit]":{"editor.rulers":[50,72],"editor.wordWrap":"off","workbench.editor.restoreViewState":false},"[git-rebase]":{"workbench.editor.restoreViewState":false}},"viewsWelcome":[{"view":"scm","contents":"If you would like to use Git features, please enable Git in your [settings](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"!config.git.enabled"},{"view":"scm","contents":"Install Git, a popular source control system, to track code changes and collaborate with others. Learn more in our [Git guides](https://aka.ms/vscode-scm).","when":"config.git.enabled && git.missing && remoteName != ''"},{"view":"scm","contents":"[Download Git for macOS](https://git-scm.com/download/mac)\nAfter installing, please [reload](command:workbench.action.reloadWindow) (or [troubleshoot](command:git.showOutput)). Additional source control providers can be installed [from the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22).","when":"config.git.enabled && git.missing && remoteName == '' && isMac"},{"view":"scm","contents":"[Download Git for Windows](https://git-scm.com/download/win)\nAfter installing, please [reload](command:workbench.action.reloadWindow) (or [troubleshoot](command:git.showOutput)). Additional source control providers can be installed [from the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22).","when":"config.git.enabled && git.missing && remoteName == '' && isWindows"},{"view":"scm","contents":"Source control depends on Git being installed.\n[Download Git for Linux](https://git-scm.com/download/linux)\nAfter installing, please [reload](command:workbench.action.reloadWindow) (or [troubleshoot](command:git.showOutput)). Additional source control providers can be installed [from the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22).","when":"config.git.enabled && git.missing && remoteName == '' && isLinux"},{"view":"scm","contents":"In order to use Git features, you can open a folder containing a Git repository or clone from a URL.\n[Open Folder](command:vscode.openFolder)\n[Clone Repository](command:git.cloneRecursive)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && workbenchState == empty && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0","enablement":"git.state == initialized","group":"2_open@1"},{"view":"scm","contents":"The workspace currently open doesn't have any folders containing Git repositories.\n[Add Folder to Workspace](command:workbench.action.addRootFolder)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && workbenchState == workspace && workspaceFolderCount == 0 && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0","enablement":"git.state == initialized","group":"2_open@1"},{"view":"scm","contents":"Scanning folder for Git repositories...","when":"config.git.enabled && !git.missing && workbenchState == folder && workspaceFolderCount != 0 && git.state != initialized"},{"view":"scm","contents":"Scanning workspace for Git repositories...","when":"config.git.enabled && !git.missing && workbenchState == workspace && workspaceFolderCount != 0 && git.state != initialized"},{"view":"scm","contents":"The folder currently open doesn't have a Git repository. You can initialize a repository which will enable source control features powered by Git.\n[Initialize Repository](command:git.init?%5Btrue%5D)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && git.state == initialized && workbenchState == folder && scm.providerCount == 0 && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0 && remoteName != 'codespaces'","group":"5_scm@1"},{"view":"scm","contents":"The workspace currently open doesn't have any folders containing Git repositories. You can initialize a repository on a folder which will enable source control features powered by Git.\n[Initialize Repository](command:git.init)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && git.state == initialized && workbenchState == workspace && workspaceFolderCount != 0 && scm.providerCount == 0 && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0 && remoteName != 'codespaces'","group":"5_scm@1"},{"view":"scm","contents":"A Git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether Git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders).","when":"config.git.enabled && !git.missing && git.state == initialized && git.parentRepositoryCount == 1"},{"view":"scm","contents":"Git repositories were found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether Git repositories in parent folders of workspace or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders).","when":"config.git.enabled && !git.missing && git.state == initialized && git.parentRepositoryCount > 1"},{"view":"scm","contents":"The detected Git repository is potentially unsafe as the folder is owned by someone other than the current user.\n[Manage Unsafe Repositories](command:git.manageUnsafeRepositories)\nTo learn more about unsafe repositories [read our docs](https://aka.ms/vscode-git-unsafe-repository).","when":"config.git.enabled && !git.missing && git.state == initialized && git.unsafeRepositoryCount == 1"},{"view":"scm","contents":"The detected Git repositories are potentially unsafe as the folders are owned by someone other than the current user.\n[Manage Unsafe Repositories](command:git.manageUnsafeRepositories)\nTo learn more about unsafe repositories [read our docs](https://aka.ms/vscode-git-unsafe-repository).","when":"config.git.enabled && !git.missing && git.state == initialized && git.unsafeRepositoryCount > 1"},{"view":"scm","contents":"A Git repository was found that was previously closed.\n[Reopen Closed Repository](command:git.reopenClosedRepositories)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && git.state == initialized && git.closedRepositoryCount == 1"},{"view":"scm","contents":"Git repositories were found that were previously closed.\n[Reopen Closed Repositories](command:git.reopenClosedRepositories)\nTo learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && !git.missing && git.state == initialized && git.closedRepositoryCount > 1"},{"view":"explorer","contents":"You can clone a repository locally.\n[Clone Repository](command:git.clone 'Clone a repository once the Git extension has activated')","when":"config.git.enabled && git.state == initialized && scm.providerCount == 0","group":"5_scm@1"},{"view":"explorer","contents":"To learn more about how to use Git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).","when":"config.git.enabled && git.state == initialized && scm.providerCount == 0","group":"5_scm@10"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.git-base","identifier":{"value":"vscode.git-base","_lower":"vscode.git-base"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/git-base","path":"/snap/code/206/usr/share/code/resources/app/extensions/git-base","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"git-base","displayName":"Git Base","description":"Git static contributions and pickers.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"categories":["Other"],"activationEvents":["*"],"main":"./dist/extension.js","browser":"./dist/browser/extension.js","icon":"resources/icons/git.png","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"git-base.api.getRemoteSources","title":"Get Remote Sources","category":"Git Base API"}],"menus":{"commandPalette":[{"command":"git-base.api.getRemoteSources","when":"false"}]},"languages":[{"id":"git-commit","aliases":["Git Commit Message","git-commit"],"filenames":["COMMIT_EDITMSG","MERGE_MSG"],"configuration":"./languages/git-commit.language-configuration.json"},{"id":"git-rebase","aliases":["Git Rebase Message","git-rebase"],"filenames":["git-rebase-todo"],"filenamePatterns":["**/rebase-merge/done"],"configuration":"./languages/git-rebase.language-configuration.json"},{"id":"ignore","aliases":["Ignore","ignore"],"extensions":[".gitignore_global",".gitignore",".git-blame-ignore-revs"],"configuration":"./languages/ignore.language-configuration.json"}],"grammars":[{"language":"git-commit","scopeName":"text.git-commit","path":"./syntaxes/git-commit.tmLanguage.json"},{"language":"git-rebase","scopeName":"text.git-rebase","path":"./syntaxes/git-rebase.tmLanguage.json"},{"language":"ignore","scopeName":"source.ignore","path":"./syntaxes/ignore.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.github","identifier":{"value":"vscode.github","_lower":"vscode.github"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/github","path":"/snap/code/206/usr/share/code/resources/app/extensions/github","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"github","displayName":"GitHub","description":"GitHub features for VS Code","publisher":"vscode","license":"MIT","version":"0.0.1","engines":{"vscode":"^1.41.0"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"extensionDependencies":["vscode.git-base"],"main":"./dist/extension.js","type":"module","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["canonicalUriProvider","contribEditSessions","contribShareMenu","contribSourceControlHistoryItemMenu","scmHistoryProvider","shareProvider","timeline"],"contributes":{"commands":[{"command":"github.publish","title":"Publish to GitHub"},{"command":"github.copyVscodeDevLink","title":"Copy vscode.dev Link"},{"command":"github.copyVscodeDevLinkFile","title":"Copy vscode.dev Link"},{"command":"github.copyVscodeDevLinkWithoutRange","title":"Copy vscode.dev Link"},{"command":"github.openOnVscodeDev","title":"Open in vscode.dev","icon":"$(globe)"},{"command":"github.graph.openOnGitHub","title":"Open on GitHub","icon":"$(github)"},{"command":"github.timeline.openOnGitHub","title":"Open on GitHub","icon":"$(github)"}],"continueEditSession":[{"command":"github.openOnVscodeDev","when":"github.hasGitHubRepo","qualifiedName":"Continue Working in vscode.dev","category":"Remote Repositories","remoteGroup":"virtualfs_44_vscode-vfs_2_web@2"}],"menus":{"commandPalette":[{"command":"github.publish","when":"git-base.gitEnabled && workspaceFolderCount != 0 && remoteName != 'codespaces'"},{"command":"github.graph.openOnGitHub","when":"false"},{"command":"github.copyVscodeDevLink","when":"false"},{"command":"github.copyVscodeDevLinkFile","when":"false"},{"command":"github.copyVscodeDevLinkWithoutRange","when":"false"},{"command":"github.openOnVscodeDev","when":"false"},{"command":"github.timeline.openOnGitHub","when":"false"}],"file/share":[{"command":"github.copyVscodeDevLinkFile","when":"github.hasGitHubRepo && remoteName != 'codespaces'","group":"0_vscode@0"}],"editor/context/share":[{"command":"github.copyVscodeDevLink","when":"github.hasGitHubRepo && resourceScheme != untitled && !isInEmbeddedEditor && remoteName != 'codespaces'","group":"0_vscode@0"}],"explorer/context/share":[{"command":"github.copyVscodeDevLinkWithoutRange","when":"github.hasGitHubRepo && resourceScheme != untitled && !isInEmbeddedEditor && remoteName != 'codespaces'","group":"0_vscode@0"}],"editor/lineNumber/context":[{"command":"github.copyVscodeDevLink","when":"github.hasGitHubRepo && resourceScheme != untitled && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on && remoteName != 'codespaces'","group":"1_cutcopypaste@2"},{"command":"github.copyVscodeDevLink","when":"github.hasGitHubRepo && resourceScheme != untitled && activeEditor == workbench.editor.notebook && remoteName != 'codespaces'","group":"1_cutcopypaste@2"}],"editor/title/context/share":[{"command":"github.copyVscodeDevLinkWithoutRange","when":"github.hasGitHubRepo && resourceScheme != untitled && remoteName != 'codespaces'","group":"0_vscode@0"}],"scm/historyItem/context":[{"command":"github.graph.openOnGitHub","when":"github.hasGitHubRepo","group":"0_view@2"}],"scm/historyItem/hover":[{"command":"github.graph.openOnGitHub","when":"github.hasGitHubRepo","group":"1_open@1"}],"timeline/item/context":[{"command":"github.timeline.openOnGitHub","group":"1_actions@3","when":"github.hasGitHubRepo && timelineItem =~ /git:file:commit\\b/"}]},"configuration":[{"title":"GitHub","properties":{"github.branchProtection":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to query repository rules for GitHub repositories"},"github.gitAuthentication":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to enable automatic GitHub authentication for git commands within VS Code."},"github.gitProtocol":{"type":"string","enum":["https","ssh"],"default":"https","description":"Controls which protocol is used to clone a GitHub repository"},"github.showAvatar":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to show the GitHub avatar of the commit author in various hovers (ex: Git blame, Timeline, Source Control Graph, etc.)"}}}],"viewsWelcome":[{"view":"scm","contents":"You can directly publish this folder to a GitHub repository. Once published, you'll have access to source control features powered by Git and GitHub.\n[$(github) Publish to GitHub](command:github.publish)","when":"config.git.enabled && git.state == initialized && workbenchState == folder && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0"},{"view":"scm","contents":"You can directly publish a workspace folder to a GitHub repository. Once published, you'll have access to source control features powered by Git and GitHub.\n[$(github) Publish to GitHub](command:github.publish)","when":"config.git.enabled && git.state == initialized && workbenchState == workspace && workspaceFolderCount != 0 && git.parentRepositoryCount == 0 && git.unsafeRepositoryCount == 0 && git.closedRepositoryCount == 0"}],"markdown.previewStyles":["./markdown.css"]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.github-authentication","identifier":{"value":"vscode.github-authentication","_lower":"vscode.github-authentication"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/github-authentication","path":"/snap/code/206/usr/share/code/resources/app/extensions/github-authentication","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"github-authentication","displayName":"GitHub Authentication","description":"GitHub Authentication Provider","publisher":"vscode","license":"MIT","version":"0.0.2","engines":{"vscode":"^1.41.0"},"icon":"images/icon.png","categories":["Other"],"api":"none","extensionKind":["ui","workspace"],"enabledApiProposals":["authIssuers","authProviderSpecific"],"activationEvents":[],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["github-enterprise.uri"]}},"contributes":{"authentication":[{"label":"GitHub","id":"github","authorizationServerGlobs":["https://github.com/login/oauth"]},{"label":"GitHub Enterprise Server","id":"github-enterprise","authorizationServerGlobs":["*"]}],"configuration":[{"title":"GHE.com & GitHub Enterprise Server Authentication","properties":{"github-enterprise.uri":{"type":"string","markdownDescription":"The URI for your GHE.com or GitHub Enterprise Server instance.\n\nExamples:\n* GHE.com: `https://octocat.ghe.com`\n* GitHub Enterprise Server: `https://github.octocat.com`\n\n> **Note:** This should _not_ be set to a GitHub.com URI. If your account exists on GitHub.com or is a GitHub Enterprise Managed User, you do not need any additional configuration and can simply log in to GitHub.","pattern":"^(?:$|(https?)://(?!github\\.com).*)"},"github-authentication.useElectronFetch":{"type":"boolean","default":true,"scope":"application","markdownDescription":"When true, uses Electron's built-in fetch function for HTTP requests. When false, uses the Node.js global fetch function. This setting only applies when running in the Electron environment. **Note:** A restart is required for this setting to take effect."}}}]},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","main":"./dist/extension.js","browser":"./dist/browser/extension.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.go","identifier":{"value":"vscode.go","_lower":"vscode.go"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/go","path":"/snap/code/206/usr/share/code/resources/app/extensions/go","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"go","displayName":"Go Language Basics","description":"Provides syntax highlighting and bracket matching in Go files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin worlpaker/go-syntax syntaxes/go.tmLanguage.json ./syntaxes/go.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"go","extensions":[".go"],"aliases":["Go"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"go","scopeName":"source.go","path":"./syntaxes/go.tmLanguage.json"}],"configurationDefaults":{"[go]":{"editor.insertSpaces":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.groovy","identifier":{"value":"vscode.groovy","_lower":"vscode.groovy"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/groovy","path":"/snap/code/206/usr/share/code/resources/app/extensions/groovy","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"groovy","displayName":"Groovy Language Basics","description":"Provides snippets, syntax highlighting and bracket matching in Groovy files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/groovy.tmbundle Syntaxes/Groovy.tmLanguage ./syntaxes/groovy.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"groovy","aliases":["Groovy","groovy"],"extensions":[".groovy",".gvy",".gradle",".jenkinsfile",".nf"],"filenames":["Jenkinsfile"],"filenamePatterns":["Jenkinsfile*"],"firstLine":"^#!.*\\bgroovy\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"groovy","scopeName":"source.groovy","path":"./syntaxes/groovy.tmLanguage.json"}],"snippets":[{"language":"groovy","path":"./snippets/groovy.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.grunt","identifier":{"value":"vscode.grunt","_lower":"vscode.grunt"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/grunt","path":"/snap/code/206/usr/share/code/resources/app/extensions/grunt","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"grunt","publisher":"vscode","description":"Extension to add Grunt capabilities to VS Code.","displayName":"Grunt support for VS Code","version":"1.0.0","private":true,"icon":"images/grunt.png","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onTaskType:grunt"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"grunt","type":"object","title":"Grunt","properties":{"grunt.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Controls enablement of Grunt task detection. Grunt task detection can cause files in any open workspace to be executed."}}},"taskDefinitions":[{"type":"grunt","required":["task"],"properties":{"task":{"type":"string","description":"The Grunt task to customize."},"args":{"type":"array","description":"Command line arguments to pass to the grunt task"},"file":{"type":"string","description":"The Grunt file that provides the task. Can be omitted."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.gulp","identifier":{"value":"vscode.gulp","_lower":"vscode.gulp"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/gulp","path":"/snap/code/206/usr/share/code/resources/app/extensions/gulp","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"gulp","publisher":"vscode","description":"Extension to add Gulp capabilities to VSCode.","displayName":"Gulp support for VSCode","version":"1.0.0","icon":"images/gulp.png","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onTaskType:gulp"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"gulp","type":"object","title":"Gulp","properties":{"gulp.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Controls enablement of Gulp task detection. Gulp task detection can cause files in any open workspace to be executed."}}},"taskDefinitions":[{"type":"gulp","required":["task"],"properties":{"task":{"type":"string","description":"The Gulp task to customize."},"file":{"type":"string","description":"The Gulp file that provides the task. Can be omitted."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.handlebars","identifier":{"value":"vscode.handlebars","_lower":"vscode.handlebars"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/handlebars","path":"/snap/code/206/usr/share/code/resources/app/extensions/handlebars","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"handlebars","displayName":"Handlebars Language Basics","description":"Provides syntax highlighting and bracket matching in Handlebars files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin daaain/Handlebars grammars/Handlebars.json ./syntaxes/Handlebars.tmLanguage.json"},"categories":["Programming Languages"],"extensionKind":["ui","workspace"],"contributes":{"languages":[{"id":"handlebars","extensions":[".handlebars",".hbs",".hjs"],"aliases":["Handlebars","handlebars"],"mimetypes":["text/x-handlebars-template"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"handlebars","scopeName":"text.html.handlebars","path":"./syntaxes/Handlebars.tmLanguage.json"}],"htmlLanguageParticipants":[{"languageId":"handlebars","autoInsert":true}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.hlsl","identifier":{"value":"vscode.hlsl","_lower":"vscode.hlsl"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/hlsl","path":"/snap/code/206/usr/share/code/resources/app/extensions/hlsl","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"hlsl","displayName":"HLSL Language Basics","description":"Provides syntax highlighting and bracket matching in HLSL files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin tgjones/shaders-tmLanguage grammars/hlsl.json ./syntaxes/hlsl.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"hlsl","extensions":[".hlsl",".hlsli",".fx",".fxh",".vsh",".psh",".cginc",".compute"],"aliases":["HLSL","hlsl"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"hlsl","path":"./syntaxes/hlsl.tmLanguage.json","scopeName":"source.hlsl"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.html","identifier":{"value":"vscode.html","_lower":"vscode.html"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/html","path":"/snap/code/206/usr/share/code/resources/app/extensions/html","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"html","displayName":"HTML Language Basics","description":"Provides syntax highlighting, bracket matching & snippets in HTML files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammar.mjs"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"html","extensions":[".html",".htm",".shtml",".xhtml",".xht",".mdoc",".jsp",".asp",".aspx",".jshtm",".volt",".ejs",".rhtml"],"aliases":["HTML","htm","html","xhtml"],"mimetypes":["text/html","text/x-jshtm","text/template","text/ng-template","application/xhtml+xml"],"configuration":"./language-configuration.json"}],"grammars":[{"scopeName":"text.html.basic","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}},{"language":"html","scopeName":"text.html.derivative","path":"./syntaxes/html-derivative.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}}],"snippets":[{"language":"html","path":"./snippets/html.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.html-language-features","identifier":{"value":"vscode.html-language-features","_lower":"vscode.html-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/html-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/html-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"html-language-features","displayName":"HTML Language Features","description":"Provides rich language support for HTML and Handlebar files","version":"1.0.0","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.77.0"},"icon":"icons/html.png","activationEvents":["onLanguage:html","onLanguage:handlebars"],"enabledApiProposals":["extensionsAny"],"main":"./client/dist/node/htmlClientMain","browser":"./client/dist/browser/htmlClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"categories":["Programming Languages"],"contributes":{"configuration":{"id":"html","order":20,"type":"object","title":"HTML","properties":{"html.completion.attributeDefaultValue":{"type":"string","scope":"resource","enum":["doublequotes","singlequotes","empty"],"enumDescriptions":["Attribute value is set to \"\".","Attribute value is set to ''.","Attribute value is not set."],"default":"doublequotes","markdownDescription":"Controls the default value for attributes when completion is accepted."},"html.customData":{"type":"array","markdownDescription":"A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.","default":[],"items":{"type":"string"},"scope":"resource"},"html.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default HTML formatter."},"html.format.wrapLineLength":{"type":"integer","scope":"resource","default":120,"description":"Maximum amount of characters per line (0 = disable)."},"html.format.unformatted":{"type":["string","null"],"scope":"resource","default":"wbr","markdownDescription":"List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content."},"html.format.contentUnformatted":{"type":["string","null"],"scope":"resource","default":"pre,code,textarea","markdownDescription":"List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag."},"html.format.indentInnerHtml":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Indent `<head>` and `<body>` sections."},"html.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text."},"html.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited."},"html.format.indentHandlebars":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Format and indent `{{#foo}}` and `{{/foo}}`."},"html.format.extraLiners":{"type":["string","null"],"scope":"resource","default":"head, body, /html","markdownDescription":"List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`."},"html.format.wrapAttributes":{"type":"string","scope":"resource","default":"auto","enum":["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"],"enumDescriptions":["Wrap attributes only when line length is exceeded.","Wrap each attribute except first.","Wrap each attribute except first and keep aligned.","Wrap each attribute.","Wrap when line length is exceeded, align attributes vertically.","Preserve wrapping of attributes.","Preserve wrapping of attributes but align."],"description":"Wrap attributes."},"html.format.wrapAttributesIndentSize":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to `aligned`."},"html.format.templating":{"type":"boolean","scope":"resource","default":false,"description":"Honor django, erb, handlebars and php templating language tags."},"html.format.unformattedContentDelimiter":{"type":"string","scope":"resource","default":"","markdownDescription":"Keep text content together between this string."},"html.suggest.html5":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support suggests HTML5 tags, properties and values."},"html.validate.scripts":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support validates embedded scripts."},"html.validate.styles":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support validates embedded styles."},"html.autoCreateQuotes":{"type":"boolean","scope":"resource","default":true,"markdownDescription":"Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`."},"html.autoClosingTags":{"type":"boolean","scope":"resource","default":true,"description":"Enable/disable autoclosing of HTML tags."},"html.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Show tag and attribute documentation in hover."},"html.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Show references to MDN in hover."},"html.mirrorCursorOnMatchingTag":{"type":"boolean","scope":"resource","default":false,"description":"Enable/disable mirroring cursor on matching HTML tag.","deprecationMessage":"Deprecated in favor of `editor.linkedEditing`"},"html.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the HTML language server."}}},"configurationDefaults":{"[html]":{"editor.suggest.insertMode":"replace"},"[handlebars]":{"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.html-data.json","url":"https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/master/docs/customData.schema.json"},{"fileMatch":"package.json","url":"./schemas/package.schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.ini","identifier":{"value":"vscode.ini","_lower":"vscode.ini"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ini","path":"/snap/code/206/usr/share/code/resources/app/extensions/ini","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"ini","displayName":"Ini Language Basics","description":"Provides syntax highlighting and bracket matching in Ini files.","version":"1.0.0","private":true,"publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/ini.tmbundle Syntaxes/Ini.plist ./syntaxes/ini.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"ini","extensions":[".ini"],"aliases":["Ini","ini"],"configuration":"./ini.language-configuration.json"},{"id":"properties","extensions":[".conf",".properties",".cfg",".directory",".gitattributes",".gitconfig",".gitmodules",".editorconfig",".repo"],"filenames":["gitconfig",".env"],"filenamePatterns":["**/.config/git/config","**/.git/config",".*.env"],"aliases":["Properties","properties"],"configuration":"./properties.language-configuration.json"}],"grammars":[{"language":"ini","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"},{"language":"properties","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.ipynb","identifier":{"value":"vscode.ipynb","_lower":"vscode.ipynb"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ipynb","path":"/snap/code/206/usr/share/code/resources/app/extensions/ipynb","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"ipynb","displayName":".ipynb Support","description":"Provides basic support for opening and reading Jupyter's .ipynb notebook files","publisher":"vscode","version":"1.0.0","license":"MIT","icon":"media/icon.png","engines":{"vscode":"^1.57.0"},"enabledApiProposals":["diffContentOptions"],"activationEvents":["onNotebook:jupyter-notebook","onNotebookSerializer:interactive","onNotebookSerializer:repl"],"extensionKind":["workspace","ui"],"main":"./dist/ipynbMain.node.js","browser":"./dist/browser/ipynbMain.browser.js","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":[{"properties":{"ipynb.pasteImagesAsAttachments.enabled":{"type":"boolean","scope":"resource","markdownDescription":"Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.","default":true},"ipynb.experimental.serialization":{"type":"boolean","scope":"resource","markdownDescription":"Experimental feature to serialize the Jupyter notebook in a worker thread.","default":true,"tags":["experimental"]}}}],"commands":[{"command":"ipynb.newUntitledIpynb","title":"New Jupyter Notebook","shortTitle":"Jupyter Notebook","category":"Create"},{"command":"ipynb.openIpynbInNotebookEditor","title":"Open IPYNB File In Notebook Editor"},{"command":"ipynb.cleanInvalidImageAttachment","title":"Clean Invalid Image Attachment Reference"},{"command":"notebook.cellOutput.copy","title":"Copy Cell Output","category":"Notebook"},{"command":"notebook.cellOutput.addToChat","title":"Add Cell Output to Chat","category":"Notebook","enablement":"chatIsEnabled"},{"command":"notebook.cellOutput.openInTextEditor","title":"Open Cell Output in Text Editor","category":"Notebook"}],"notebooks":[{"type":"jupyter-notebook","displayName":"Jupyter Notebook","selector":[{"filenamePattern":"*.ipynb"}],"priority":"default"}],"notebookRenderer":[{"id":"vscode.markdown-it-cell-attachment-renderer","displayName":"Markdown-It ipynb Cell Attachment renderer","entrypoint":{"extends":"vscode.markdown-it-renderer","path":"./notebook-out/cellAttachmentRenderer.js"}}],"menus":{"file/newFile":[{"command":"ipynb.newUntitledIpynb","group":"notebook"}],"commandPalette":[{"command":"ipynb.newUntitledIpynb"},{"command":"ipynb.openIpynbInNotebookEditor","when":"false"},{"command":"ipynb.cleanInvalidImageAttachment","when":"false"},{"command":"notebook.cellOutput.copy","when":"notebookCellHasOutputs"},{"command":"notebook.cellOutput.openInTextEditor","when":"false"}],"webview/context":[{"command":"notebook.cellOutput.copy","when":"webviewId == 'notebook.output' && webviewSection == 'image'","group":"context@1"},{"command":"notebook.cellOutput.copy","when":"webviewId == 'notebook.output' && webviewSection == 'text'"},{"command":"notebook.cellOutput.addToChat","when":"webviewId == 'notebook.output' && (webviewSection == 'text' || webviewSection == 'image')","group":"context@2"},{"command":"notebook.cellOutput.openInTextEditor","when":"webviewId == 'notebook.output' && webviewSection == 'text'"}]}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.jake","identifier":{"value":"vscode.jake","_lower":"vscode.jake"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/jake","path":"/snap/code/206/usr/share/code/resources/app/extensions/jake","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"jake","publisher":"vscode","description":"Extension to add Jake capabilities to VS Code.","displayName":"Jake support for VS Code","icon":"images/cowboy_hat.png","version":"1.0.0","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onTaskType:jake"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"jake","type":"object","title":"Jake","properties":{"jake.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Controls enablement of Jake task detection. Jake task detection can cause files in any open workspace to be executed."}}},"taskDefinitions":[{"type":"jake","required":["task"],"properties":{"task":{"type":"string","description":"The Jake task to customize."},"file":{"type":"string","description":"The Jake file that provides the task. Can be omitted."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.java","identifier":{"value":"vscode.java","_lower":"vscode.java"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/java","path":"/snap/code/206/usr/share/code/resources/app/extensions/java","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"java","displayName":"Java Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Java files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin redhat-developer/vscode-java language-support/java/java.tmLanguage.json ./syntaxes/java.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"java","extensions":[".java",".jav"],"aliases":["Java","java"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"java","scopeName":"source.java","path":"./syntaxes/java.tmLanguage.json"}],"snippets":[{"language":"java","path":"./snippets/java.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.javascript","identifier":{"value":"vscode.javascript","_lower":"vscode.javascript"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/javascript","path":"/snap/code/206/usr/share/code/resources/app/extensions/javascript","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"javascript","displayName":"JavaScript Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in JavaScript files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"categories":["Programming Languages"],"contributes":{"configurationDefaults":{"[javascript]":{"editor.maxTokenizationLineLength":2500}},"languages":[{"id":"javascriptreact","aliases":["JavaScript JSX","JavaScript React","jsx"],"extensions":[".jsx"],"configuration":"./javascript-language-configuration.json"},{"id":"javascript","aliases":["JavaScript","javascript","js"],"extensions":[".js",".es6",".mjs",".cjs",".pac"],"filenames":["jakefile"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"],"configuration":"./javascript-language-configuration.json"},{"id":"jsx-tags","aliases":[],"configuration":"./tags-language-configuration.json"}],"grammars":[{"language":"javascriptreact","scopeName":"source.js.jsx","path":"./syntaxes/JavaScriptReact.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js.jsx":"javascriptreact","meta.embedded.expression.js":"javascriptreact"},"tokenTypes":{"punctuation.definition.template-expression":"other","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"javascript","scopeName":"source.js","path":"./syntaxes/JavaScript.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js":"javascript","meta.embedded.expression.js":"javascript"},"tokenTypes":{"punctuation.definition.template-expression":"other","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"scopeName":"source.js.regexp","path":"./syntaxes/Regular Expressions (JavaScript).tmLanguage"}],"semanticTokenScopes":[{"language":"javascript","scopes":{"property":["variable.other.property.js"],"property.readonly":["variable.other.constant.property.js"],"variable":["variable.other.readwrite.js"],"variable.readonly":["variable.other.constant.object.js"],"function":["entity.name.function.js"],"namespace":["entity.name.type.module.js"],"variable.defaultLibrary":["support.variable.js"],"function.defaultLibrary":["support.function.js"]}},{"language":"javascriptreact","scopes":{"property":["variable.other.property.jsx"],"property.readonly":["variable.other.constant.property.jsx"],"variable":["variable.other.readwrite.jsx"],"variable.readonly":["variable.other.constant.object.jsx"],"function":["entity.name.function.jsx"],"namespace":["entity.name.type.module.jsx"],"variable.defaultLibrary":["support.variable.js"],"function.defaultLibrary":["support.function.js"]}}],"snippets":[{"language":"javascript","path":"./snippets/javascript.code-snippets"},{"language":"javascriptreact","path":"./snippets/javascript.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.json","identifier":{"value":"vscode.json","_lower":"vscode.json"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/json","path":"/snap/code/206/usr/share/code/resources/app/extensions/json","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"json","displayName":"JSON Language Basics","description":"Provides syntax highlighting & bracket matching in JSON files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"json","aliases":["JSON","json"],"extensions":[".json",".bowerrc",".jscsrc",".webmanifest",".js.map",".css.map",".ts.map",".har",".jslintrc",".jsonld",".geojson",".ipynb",".vuerc"],"filenames":["composer.lock",".watchmanconfig"],"mimetypes":["application/json","application/manifest+json"],"configuration":"./language-configuration.json"},{"id":"jsonc","aliases":["JSON with Comments"],"extensions":[".jsonc",".eslintrc",".eslintrc.json",".jsfmtrc",".jshintrc",".swcrc",".hintrc",".babelrc",".toolset.jsonc"],"filenames":["babel.config.json","bun.lock",".babelrc.json",".ember-cli","typedoc.json"],"configuration":"./language-configuration.json"},{"id":"jsonl","aliases":["JSON Lines"],"extensions":[".jsonl",".ndjson"],"filenames":[],"configuration":"./language-configuration.json"},{"id":"snippets","aliases":["Code Snippets"],"extensions":[".code-snippets"],"filenamePatterns":["**/User/snippets/*.json","**/User/profiles/*/snippets/*.json","**/snippets*.json"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"json","scopeName":"source.json","path":"./syntaxes/JSON.tmLanguage.json"},{"language":"jsonc","scopeName":"source.json.comments","path":"./syntaxes/JSONC.tmLanguage.json"},{"language":"jsonl","scopeName":"source.json.lines","path":"./syntaxes/JSONL.tmLanguage.json"},{"language":"snippets","scopeName":"source.json.comments.snippets","path":"./syntaxes/snippets.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.json-language-features","identifier":{"value":"vscode.json-language-features","_lower":"vscode.json-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/json-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/json-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"json-language-features","displayName":"JSON Language Features","description":"Provides rich language support for JSON files.","version":"1.0.0","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.77.0"},"enabledApiProposals":["extensionsAny"],"icon":"icons/json.png","activationEvents":["onLanguage:json","onLanguage:jsonc","onLanguage:snippets","onCommand:json.validate"],"main":"./client/dist/node/jsonClientMain","browser":"./client/dist/browser/jsonClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"The extension requires workspace trust to load schemas from http and https."}},"categories":["Programming Languages"],"contributes":{"configuration":{"id":"json","order":20,"type":"object","title":"JSON","properties":{"json.schemas":{"type":"array","scope":"resource","description":"Associate schemas to JSON files in the current project.","items":{"type":"object","default":{"fileMatch":["/myfile"],"url":"schemaURL"},"properties":{"url":{"type":"string","default":"/user.schema.json","description":"A URL or absolute file path to a schema. Can be a relative path (starting with './') in workspace and workspace folder settings."},"fileMatch":{"type":"array","items":{"type":"string","default":"MyFile.json","description":"A file pattern that can contain '*' and '**' to match against when resolving JSON files to schemas. When beginning with '!', it defines an exclusion pattern."},"minItems":1,"description":"An array of file patterns to match against when resolving JSON files to schemas. `*` and '**' can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."},"schema":{"$ref":"http://json-schema.org/draft-07/schema#","description":"The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."}}}},"json.validate.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable JSON validation."},"json.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default JSON formatter"},"json.format.keepLines":{"type":"boolean","scope":"window","default":false,"description":"Keep all existing new lines when formatting."},"json.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the JSON language server."},"json.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Enables or disables color decorators","deprecationMessage":"The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."},"json.maxItemsComputed":{"type":"number","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"json.schemaDownload.enable":{"type":"boolean","default":true,"description":"When enabled, JSON schemas can be fetched from http and https locations.","tags":["usesOnlineServices"]}}},"configurationDefaults":{"[json]":{"editor.quickSuggestions":{"strings":true},"editor.suggest.insertMode":"replace"},"[jsonc]":{"editor.quickSuggestions":{"strings":true},"editor.suggest.insertMode":"replace"},"[snippets]":{"editor.quickSuggestions":{"strings":true},"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.schema.json","url":"http://json-schema.org/draft-07/schema#"}],"commands":[{"command":"json.clearCache","title":"Clear Schema Cache","category":"JSON"},{"command":"json.sort","title":"Sort Document","category":"JSON"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.julia","identifier":{"value":"vscode.julia","_lower":"vscode.julia"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/julia","path":"/snap/code/206/usr/share/code/resources/app/extensions/julia","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"julia","displayName":"Julia Language Basics","description":"Provides syntax highlighting & bracket matching in Julia files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin JuliaEditorSupport/atom-language-julia grammars/julia_vscode.json ./syntaxes/julia.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"],"firstLine":"^#!\\s*/.*\\bjulia[0-9.-]*\\b","configuration":"./language-configuration.json"},{"id":"juliamarkdown","aliases":["Julia Markdown","juliamarkdown"],"extensions":[".jmd"]}],"grammars":[{"language":"julia","scopeName":"source.julia","path":"./syntaxes/julia.tmLanguage.json","embeddedLanguages":{"meta.embedded.inline.cpp":"cpp","meta.embedded.inline.javascript":"javascript","meta.embedded.inline.python":"python","meta.embedded.inline.r":"r","meta.embedded.inline.sql":"sql"}}],"configurationDefaults":{"[julia]":{"editor.defaultColorDecorators":"never"}}}},{"id":"vscode.latex","identifier":{"value":"vscode.latex","_lower":"vscode.latex"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/latex","path":"/snap/code/206/usr/share/code/resources/app/extensions/latex","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"latex","displayName":"LaTeX Language Basics","description":"Provides syntax highlighting and bracket matching for TeX, LaTeX and BibTeX.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"tex","aliases":["TeX","tex"],"extensions":[".sty",".cls",".bbx",".cbx"],"configuration":"latex-language-configuration.json"},{"id":"latex","aliases":["LaTeX","latex"],"extensions":[".tex",".ltx",".ctx"],"configuration":"latex-language-configuration.json"},{"id":"bibtex","aliases":["BibTeX","bibtex"],"extensions":[".bib"]},{"id":"cpp_embedded_latex","configuration":"latex-cpp-embedded-language-configuration.json","aliases":[]},{"id":"markdown_latex_combined","configuration":"markdown-latex-combined-language-configuration.json","aliases":[]}],"grammars":[{"language":"tex","scopeName":"text.tex","path":"./syntaxes/TeX.tmLanguage.json"},{"language":"latex","scopeName":"text.tex.latex","path":"./syntaxes/LaTeX.tmLanguage.json","embeddedLanguages":{"source.cpp":"cpp_embedded_latex","source.css":"css","text.html":"html","source.java":"java","source.js":"javascript","source.julia":"julia","source.lua":"lua","source.python":"python","source.ruby":"ruby","source.ts":"typescript","text.xml":"xml","source.yaml":"yaml","meta.embedded.markdown_latex_combined":"markdown_latex_combined"}},{"language":"bibtex","scopeName":"text.bibtex","path":"./syntaxes/Bibtex.tmLanguage.json"},{"language":"markdown_latex_combined","scopeName":"text.tex.markdown_latex_combined","path":"./syntaxes/markdown-latex-combined.tmLanguage.json"},{"language":"cpp_embedded_latex","scopeName":"source.cpp.embedded.latex","path":"./syntaxes/cpp-grammar-bailout.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.less","identifier":{"value":"vscode.less","_lower":"vscode.less"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/less","path":"/snap/code/206/usr/share/code/resources/app/extensions/less","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"less","displayName":"Less Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Less files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"less","aliases":["Less","less"],"extensions":[".less"],"mimetypes":["text/x-less","text/less"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"less","scopeName":"source.css.less","path":"./syntaxes/less.tmLanguage.json"}],"problemMatchers":[{"name":"lessc","label":"Lessc compiler","owner":"lessc","source":"less","fileLocation":"absolute","pattern":{"regexp":"(.*)\\sin\\s(.*)\\son line\\s(\\d+),\\scolumn\\s(\\d+)","message":1,"file":2,"line":3,"column":4}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.log","identifier":{"value":"vscode.log","_lower":"vscode.log"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/log","path":"/snap/code/206/usr/share/code/resources/app/extensions/log","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"log","displayName":"Log","description":"Provides syntax highlighting for files with .log extension.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin emilast/vscode-logfile-highlighter syntaxes/log.tmLanguage ./syntaxes/log.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"log","extensions":[".log","*.log.?"],"aliases":["Log"]}],"grammars":[{"language":"log","scopeName":"text.log","path":"./syntaxes/log.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.lua","identifier":{"value":"vscode.lua","_lower":"vscode.lua"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/lua","path":"/snap/code/206/usr/share/code/resources/app/extensions/lua","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"lua","displayName":"Lua Language Basics","description":"Provides syntax highlighting and bracket matching in Lua files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin sumneko/lua.tmbundle Syntaxes/Lua.plist ./syntaxes/lua.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"lua","extensions":[".lua"],"aliases":["Lua","lua"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"lua","scopeName":"source.lua","path":"./syntaxes/lua.tmLanguage.json","tokenTypes":{"comment.line.double-dash.doc.lua":"other"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.make","identifier":{"value":"vscode.make","_lower":"vscode.make"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/make","path":"/snap/code/206/usr/share/code/resources/app/extensions/make","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"make","displayName":"Make Language Basics","description":"Provides syntax highlighting and bracket matching in Make files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin fadeevab/make.tmbundle Syntaxes/Makefile.plist ./syntaxes/make.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"makefile","aliases":["Makefile","makefile"],"extensions":[".mak",".mk"],"filenames":["Makefile","makefile","GNUmakefile","OCamlMakefile"],"firstLine":"^#!\\s*/usr/bin/make","configuration":"./language-configuration.json"}],"grammars":[{"language":"makefile","scopeName":"source.makefile","path":"./syntaxes/make.tmLanguage.json","tokenTypes":{"string.interpolated":"other"}}],"configurationDefaults":{"[makefile]":{"editor.insertSpaces":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.markdown","identifier":{"value":"vscode.markdown","_lower":"vscode.markdown"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-basics","path":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-basics","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"markdown","displayName":"Markdown Language Basics","description":"Provides snippets and syntax highlighting for Markdown.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.20.0"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"markdown","aliases":["Markdown","markdown"],"extensions":[".md",".mkd",".mdwn",".mdown",".markdown",".markdn",".mdtxt",".mdtext",".workbook"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"markdown","scopeName":"text.html.markdown","path":"./syntaxes/markdown.tmLanguage.json","embeddedLanguages":{"meta.embedded.block.html":"html","source.js":"javascript","source.css":"css","meta.embedded.block.frontmatter":"yaml","meta.embedded.block.css":"css","meta.embedded.block.ini":"ini","meta.embedded.block.java":"java","meta.embedded.block.lua":"lua","meta.embedded.block.makefile":"makefile","meta.embedded.block.perl":"perl","meta.embedded.block.r":"r","meta.embedded.block.ruby":"ruby","meta.embedded.block.php":"php","meta.embedded.block.sql":"sql","meta.embedded.block.vs_net":"vs_net","meta.embedded.block.xml":"xml","meta.embedded.block.xsl":"xsl","meta.embedded.block.yaml":"yaml","meta.embedded.block.dosbatch":"dosbatch","meta.embedded.block.clojure":"clojure","meta.embedded.block.coffee":"coffee","meta.embedded.block.c":"c","meta.embedded.block.cpp":"cpp","meta.embedded.block.diff":"diff","meta.embedded.block.dockerfile":"dockerfile","meta.embedded.block.go":"go","meta.embedded.block.groovy":"groovy","meta.embedded.block.pug":"jade","meta.embedded.block.ignore":"ignore","meta.embedded.block.javascript":"javascript","meta.embedded.block.json":"json","meta.embedded.block.jsonc":"jsonc","meta.embedded.block.jsonl":"jsonl","meta.embedded.block.latex":"latex","meta.embedded.block.less":"less","meta.embedded.block.objc":"objc","meta.embedded.block.scss":"scss","meta.embedded.block.perl6":"perl6","meta.embedded.block.powershell":"powershell","meta.embedded.block.python":"python","meta.embedded.block.restructuredtext":"restructuredtext","meta.embedded.block.rust":"rust","meta.embedded.block.scala":"scala","meta.embedded.block.shellscript":"shellscript","meta.embedded.block.typescript":"typescript","meta.embedded.block.typescriptreact":"typescriptreact","meta.embedded.block.csharp":"csharp","meta.embedded.block.fsharp":"fsharp"},"unbalancedBracketScopes":["markup.underline.link.markdown","punctuation.definition.list.begin.markdown"]}],"snippets":[{"language":"markdown","path":"./snippets/markdown.code-snippets"}],"configurationDefaults":{"[markdown]":{"editor.unicodeHighlight.ambiguousCharacters":false,"editor.unicodeHighlight.invisibleCharacters":false,"diffEditor.ignoreTrimWhitespace":false}}},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin microsoft/vscode-markdown-tm-grammar syntaxes/markdown.tmLanguage ./syntaxes/markdown.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.markdown-language-features","identifier":{"value":"vscode.markdown-language-features","_lower":"vscode.markdown-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"markdown-language-features","displayName":"Markdown Language Features","description":"Provides rich language support for Markdown.","version":"1.0.0","icon":"icon.png","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.70.0"},"main":"./dist/extension","browser":"./dist/browser/extension","categories":["Programming Languages"],"activationEvents":["onLanguage:markdown","onLanguage:prompt","onLanguage:instructions","onLanguage:chatmode","onCommand:markdown.api.render","onCommand:markdown.api.reloadPlugins","onWebviewPanel:markdown.preview"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Required for loading styles configured in the workspace.","restrictedConfigurations":["markdown.styles"]}},"contributes":{"notebookRenderer":[{"id":"vscode.markdown-it-renderer","displayName":"Markdown it renderer","entrypoint":"./notebook-out/index.js","mimeTypes":["text/markdown","text/latex","text/x-css","text/x-html","text/x-json","text/x-typescript","text/x-abap","text/x-apex","text/x-azcli","text/x-bat","text/x-cameligo","text/x-clojure","text/x-coffee","text/x-cpp","text/x-csharp","text/x-csp","text/x-css","text/x-dart","text/x-dockerfile","text/x-ecl","text/x-fsharp","text/x-go","text/x-graphql","text/x-handlebars","text/x-hcl","text/x-html","text/x-ini","text/x-java","text/x-javascript","text/x-julia","text/x-kotlin","text/x-less","text/x-lexon","text/x-lua","text/x-m3","text/x-markdown","text/x-mips","text/x-msdax","text/x-mysql","text/x-objective-c/objective","text/x-pascal","text/x-pascaligo","text/x-perl","text/x-pgsql","text/x-php","text/x-postiats","text/x-powerquery","text/x-powershell","text/x-pug","text/x-python","text/x-r","text/x-razor","text/x-redis","text/x-redshift","text/x-restructuredtext","text/x-ruby","text/x-rust","text/x-sb","text/x-scala","text/x-scheme","text/x-scss","text/x-shell","text/x-solidity","text/x-sophia","text/x-sql","text/x-st","text/x-swift","text/x-systemverilog","text/x-tcl","text/x-twig","text/x-typescript","text/x-vb","text/x-xml","text/x-yaml","application/json"]}],"commands":[{"command":"_markdown.copyImage","title":"Copy Image","category":"Markdown"},{"command":"_markdown.openImage","title":"Open Image","category":"Markdown"},{"command":"markdown.showPreview","title":"Open Preview","category":"Markdown","icon":{"light":"./media/preview-light.svg","dark":"./media/preview-dark.svg"}},{"command":"markdown.showPreviewToSide","title":"Open Preview to the Side","category":"Markdown","icon":"$(open-preview)"},{"command":"markdown.showLockedPreviewToSide","title":"Open Locked Preview to the Side","category":"Markdown","icon":"$(open-preview)"},{"command":"markdown.showSource","title":"Show Source","category":"Markdown","icon":"$(go-to-file)"},{"command":"markdown.showPreviewSecuritySelector","title":"Change Preview Security Settings","category":"Markdown"},{"command":"markdown.preview.refresh","title":"Refresh Preview","category":"Markdown"},{"command":"markdown.preview.toggleLock","title":"Toggle Preview Locking","category":"Markdown"},{"command":"markdown.findAllFileReferences","title":"Find File References","category":"Markdown"},{"command":"markdown.editor.insertLinkFromWorkspace","title":"Insert Link to File in Workspace","category":"Markdown","enablement":"editorLangId == markdown && !activeEditorIsReadonly"},{"command":"markdown.editor.insertImageFromWorkspace","title":"Insert Image from Workspace","category":"Markdown","enablement":"editorLangId == markdown && !activeEditorIsReadonly"}],"menus":{"webview/context":[{"command":"_markdown.copyImage","when":"webviewId == 'markdown.preview' && (webviewSection == 'image' || webviewSection == 'localImage')"},{"command":"_markdown.openImage","when":"webviewId == 'markdown.preview' && webviewSection == 'localImage'"}],"editor/title":[{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused && !hasCustomMarkdownPreview","alt":"markdown.showPreview","group":"navigation"},{"command":"markdown.showSource","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'","group":"navigation"},{"command":"markdown.preview.refresh","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'","group":"1_markdown"},{"command":"markdown.preview.toggleLock","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'","group":"1_markdown"},{"command":"markdown.showPreviewSecuritySelector","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'","group":"1_markdown"}],"explorer/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown && !hasCustomMarkdownPreview","group":"navigation"},{"command":"markdown.findAllFileReferences","when":"resourceLangId == markdown","group":"4_search"}],"editor/title/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown && !hasCustomMarkdownPreview","group":"1_open"},{"command":"markdown.findAllFileReferences","when":"resourceLangId == markdown"}],"commandPalette":[{"command":"_markdown.openImage","when":"false"},{"command":"_markdown.copyImage","when":"false"},{"command":"markdown.showPreview","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showLockedPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showSource","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'","group":"navigation"},{"command":"markdown.showPreviewSecuritySelector","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.showPreviewSecuritySelector","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'"},{"command":"markdown.preview.toggleLock","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'"},{"command":"markdown.preview.refresh","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.preview.refresh","when":"activeWebviewPanelId == 'markdown.preview' || activeCustomEditorId == 'vscode.markdown.preview.editor'"},{"command":"markdown.findAllFileReferences","when":"editorLangId == markdown"}]},"keybindings":[{"command":"markdown.showPreview","key":"shift+ctrl+v","mac":"shift+cmd+v","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.showPreviewToSide","key":"ctrl+k v","mac":"cmd+k v","when":"editorLangId == markdown && !notebookEditorFocused"}],"configuration":{"type":"object","title":"Markdown","order":20,"properties":{"markdown.styles":{"type":"array","items":{"type":"string"},"default":[],"description":"A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.","scope":"resource"},"markdown.preview.breaks":{"type":"boolean","default":false,"markdownDescription":"Sets how line-breaks are rendered in the Markdown preview. Setting it to `true` creates a `<br>` for newlines inside paragraphs.","scope":"resource"},"markdown.preview.linkify":{"type":"boolean","default":true,"description":"Convert URL-like text to links in the Markdown preview.","scope":"resource"},"markdown.preview.typographer":{"type":"boolean","default":false,"description":"Enable some language-neutral replacement and quotes beautification in the Markdown preview.","scope":"resource"},"markdown.preview.fontFamily":{"type":"string","default":"-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif","description":"Controls the font family used in the Markdown preview.","scope":"resource"},"markdown.preview.fontSize":{"type":"number","default":14,"description":"Controls the font size in pixels used in the Markdown preview.","scope":"resource"},"markdown.preview.lineHeight":{"type":"number","default":1.6,"description":"Controls the line height used in the Markdown preview. This number is relative to the font size.","scope":"resource"},"markdown.preview.scrollPreviewWithEditor":{"type":"boolean","default":true,"description":"When a Markdown editor is scrolled, update the view of the preview.","scope":"resource"},"markdown.preview.markEditorSelection":{"type":"boolean","default":true,"description":"Mark the current editor selection in the Markdown preview.","scope":"resource"},"markdown.preview.scrollEditorWithPreview":{"type":"boolean","default":true,"description":"When a Markdown preview is scrolled, update the view of the editor.","scope":"resource"},"markdown.preview.doubleClickToSwitchToEditor":{"type":"boolean","default":true,"description":"Double-click in the Markdown preview to switch to the editor.","scope":"resource"},"markdown.preview.openMarkdownLinks":{"type":"string","default":"inPreview","description":"Controls how links to other Markdown files in the Markdown preview should be opened.","scope":"resource","enum":["inPreview","inEditor"],"enumDescriptions":["Try to open links in the Markdown preview.","Try to open links in the editor."]},"markdown.links.openLocation":{"type":"string","default":"currentGroup","description":"Controls where links in Markdown files should be opened.","scope":"resource","enum":["currentGroup","beside"],"enumDescriptions":["Open links in the active editor group.","Open links beside the active editor."]},"markdown.suggest.paths.enabled":{"type":"boolean","default":true,"description":"Enable path suggestions while writing links in Markdown files.","scope":"resource"},"markdown.suggest.paths.includeWorkspaceHeaderCompletions":{"type":"string","default":"onDoubleHash","scope":"resource","markdownDescription":"Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example: `[link text](/path/to/file.md#header)`.","enum":["never","onDoubleHash","onSingleOrDoubleHash"],"markdownEnumDescriptions":["Disable workspace header suggestions.","Enable workspace header suggestions after typing `##` in a path, for example: `[link text](##`.","Enable workspace header suggestions after typing either `##` or `#` in a path, for example: `[link text](#` or `[link text](##`."]},"markdown.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Markdown language server."},"markdown.server.log":{"type":"string","scope":"window","enum":["off","debug","trace"],"default":"off","description":"Controls the logging level of the Markdown language server."},"markdown.editor.drop.enabled":{"type":"string","scope":"resource","markdownDescription":"Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.","default":"smart","enum":["always","smart","never"],"markdownEnumDescriptions":["Always insert Markdown links.","Smartly create Markdown links by default when not dropping into a code block or other special element. Use the drop widget to switch between pasting as plain text or as Markdown links.","Never create Markdown links."]},"markdown.editor.drop.copyIntoWorkspace":{"type":"string","markdownDescription":"Controls if files outside of the workspace that are dropped into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied dropped files should be created","default":"mediaFiles","enum":["mediaFiles","never"],"markdownEnumDescriptions":["Try to copy external image and video files into the workspace.","Do not copy external files into the workspace."]},"markdown.editor.filePaste.enabled":{"type":"string","scope":"resource","markdownDescription":"Enable pasting files into a Markdown editor to create Markdown links. Requires enabling `#editor.pasteAs.enabled#`.","default":"smart","enum":["always","smart","never"],"markdownEnumDescriptions":["Always insert Markdown links.","Smartly create Markdown links by default when not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.","Never create Markdown links."]},"markdown.editor.filePaste.copyIntoWorkspace":{"type":"string","markdownDescription":"Controls if files outside of the workspace that are pasted into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied files should be created.","default":"mediaFiles","enum":["mediaFiles","never"],"markdownEnumDescriptions":["Try to copy external image and video files into the workspace.","Do not copy external files into the workspace."]},"markdown.editor.filePaste.videoSnippet":{"type":"string","markdownDescription":"Snippet used when adding videos to Markdown. This snippet can use the following variables:\n- `${src}` — The resolved path of the video file.\n- `${title}` — The title used for the video. A snippet placeholder will automatically be created for this variable.","default":"<video controls src=\"${src}\" title=\"${title}\"></video>"},"markdown.editor.filePaste.audioSnippet":{"type":"string","markdownDescription":"Snippet used when adding audio to Markdown. This snippet can use the following variables:\n- `${src}` — The resolved path of the audio  file.\n- `${title}` — The title used for the audio. A snippet placeholder will automatically be created for this variable.","default":"<audio controls src=\"${src}\" title=\"${title}\"></audio>"},"markdown.editor.pasteUrlAsFormattedLink.enabled":{"type":"string","scope":"resource","markdownDescription":"Controls if Markdown links are created when URLs are pasted into a Markdown editor. Requires enabling `#editor.pasteAs.enabled#`.","default":"smartWithSelection","enum":["always","smart","smartWithSelection","never"],"markdownEnumDescriptions":["Always insert Markdown links.","Smartly create Markdown links by default when not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.","Smartly create Markdown links by default when you have selected text and are not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.","Never create Markdown links."]},"markdown.validate.enabled":{"type":"boolean","scope":"resource","description":"Enable all error reporting in Markdown files.","default":false},"markdown.validate.referenceLinks.enabled":{"type":"string","scope":"resource","markdownDescription":"Validate reference links in Markdown files, for example: `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.","default":"warning","enum":["ignore","warning","error"]},"markdown.validate.fragmentLinks.enabled":{"type":"string","scope":"resource","markdownDescription":"Validate fragment links to headers in the current Markdown file, for example: `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.","default":"warning","enum":["ignore","warning","error"]},"markdown.validate.fileLinks.enabled":{"type":"string","scope":"resource","markdownDescription":"Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.","default":"warning","enum":["ignore","warning","error"]},"markdown.validate.fileLinks.markdownFragmentLinks":{"type":"string","scope":"resource","markdownDescription":"Validate the fragment part of links to headers in other files in Markdown files, for example: `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.","default":"inherit","enum":["inherit","ignore","warning","error"]},"markdown.validate.ignoredLinks":{"type":"array","scope":"resource","markdownDescription":"Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.","items":{"type":"string"}},"markdown.validate.unusedLinkDefinitions.enabled":{"type":"string","scope":"resource","markdownDescription":"Validate link definitions that are unused in the current file.","default":"hint","enum":["ignore","hint","warning","error"]},"markdown.validate.duplicateLinkDefinitions.enabled":{"type":"string","scope":"resource","markdownDescription":"Validate duplicated definitions in the current file.","default":"warning","enum":["ignore","warning","error"]},"markdown.updateLinksOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Prompt on each file move.","Always update links automatically.","Never try to update link and don't prompt."],"default":"never","markdownDescription":"Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.","scope":"window"},"markdown.updateLinksOnFileMove.include":{"type":"array","markdownDescription":"Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.","scope":"window","items":{"type":"string","description":"The glob pattern to match file paths against. Set to true to enable the pattern."},"default":["**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}","**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"]},"markdown.updateLinksOnFileMove.enableForDirectories":{"type":"boolean","default":true,"description":"Enable updating links when a directory is moved or renamed in the workspace.","scope":"window"},"markdown.occurrencesHighlight.enabled":{"type":"boolean","default":false,"description":"Enable highlighting link occurrences in the current document.","scope":"resource"},"markdown.copyFiles.destination":{"type":"object","markdownDescription":"Configures the path and file name of files created by copy/paste or drag and drop. This is a map of globs that match against a Markdown document path to the destination path where the new file should be created.\n\nThe destination path may use the following variables:\n\n- `${documentDirName}` — Absolute parent directory path of the Markdown document, e.g. `/Users/me/myProject/docs`.\n- `${documentRelativeDirName}` — Relative parent directory path of the Markdown document, e.g. `docs`. This is the same as `${documentDirName}` if the file is not part of a workspace.\n- `${documentFileName}` — The full filename of the Markdown document, e.g. `README.md`.\n- `${documentBaseName}` — The basename of the Markdown document, e.g. `README`.\n- `${documentExtName}` — The extension of the Markdown document, e.g. `md`.\n- `${documentFilePath}` — Absolute path of the Markdown document, e.g. `/Users/me/myProject/docs/README.md`.\n- `${documentRelativeFilePath}` — Relative path of the Markdown document, e.g. `docs/README.md`. This is the same as `${documentFilePath}` if the file is not part of a workspace.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, e.g. `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of a workspace.\n- `${fileName}` — The file name of the dropped file, e.g. `image.png`.\n- `${fileExtName}` — The extension of the dropped file, e.g. `png`.\n- `${unixTime}` — The current Unix timestamp in milliseconds.\n- `${isoTime}` — The current time in ISO 8601 format, e.g. '2025-06-06T08:40:32.123Z'.","additionalProperties":{"type":"string"}},"markdown.copyFiles.overwriteBehavior":{"type":"string","markdownDescription":"Controls if files created by drop or paste should overwrite existing files.","default":"nameIncrementally","enum":["nameIncrementally","overwrite"],"markdownEnumDescriptions":["If a file with the same name already exists, append a number to the file name, for example: `image.png` becomes `image-1.png`.","If a file with the same name already exists, overwrite it."]},"markdown.preferredMdPathExtensionStyle":{"type":"string","default":"auto","markdownDescription":"Controls if file extensions (for example `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.","enum":["auto","includeExtension","removeExtension"],"markdownEnumDescriptions":["For existing paths, try to maintain the file extension style. For new paths, add file extensions.","Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.","Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`."]},"markdown.editor.updateLinksOnPaste.enabled":{"type":"boolean","markdownDescription":"Enable/disable a paste option that updates links and reference in text that is copied and pasted between Markdown editors.\n\nTo use this feature, after pasting text that contains updatable links, just click on the Paste Widget and select `Paste and update pasted links`.","scope":"resource","default":true}}},"configurationDefaults":{"[markdown]":{"editor.wordWrap":"on","editor.quickSuggestions":{"comments":"off","strings":"off","other":"off"}}},"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"markdown.previewStyles":["./media/markdown.css","./media/highlight.css"],"markdown.previewScripts":["./media/index.js"],"customEditors":[{"viewType":"vscode.markdown.preview.editor","displayName":"Markdown Preview","priority":"option","selector":[{"filenamePattern":"*.md"}]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.markdown-math","identifier":{"value":"vscode.markdown-math","_lower":"vscode.markdown-math"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-math","path":"/snap/code/206/usr/share/code/resources/app/extensions/markdown-math","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"markdown-math","displayName":"Markdown Math","description":"Adds math support to Markdown in notebooks.","version":"1.0.0","icon":"icon.png","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.54.0"},"categories":["Other","Programming Languages"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"main":"./dist/extension","browser":"./dist/browser/extension","activationEvents":[],"contributes":{"languages":[{"id":"markdown-math","aliases":[]}],"grammars":[{"language":"markdown-math","scopeName":"text.html.markdown.math","path":"./syntaxes/md-math.tmLanguage.json"},{"scopeName":"markdown.math.block","path":"./syntaxes/md-math-block.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.math.markdown":"latex"}},{"scopeName":"markdown.math.inline","path":"./syntaxes/md-math-inline.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.math.markdown":"latex","punctuation.definition.math.end.markdown":"latex"}},{"scopeName":"markdown.math.codeblock","path":"./syntaxes/md-math-fence.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.math.markdown":"latex"}}],"notebookRenderer":[{"id":"vscode.markdown-it-katex-extension","displayName":"Markdown it KaTeX renderer","entrypoint":{"extends":"vscode.markdown-it-renderer","path":"./notebook-out/katex.js"}}],"markdown.markdownItPlugins":true,"markdown.previewStyles":["./notebook-out/katex.min.css","./preview-styles/index.css"],"configuration":[{"title":"Markdown Math","properties":{"markdown.math.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering math in the built-in Markdown preview."},"markdown.math.macros":{"type":"object","additionalProperties":{"type":"string"},"default":{},"description":"A collection of custom macros. Each macro is a key-value pair where the key is a new command name and the value is the expansion of the macro.","scope":"resource"}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.media-preview","identifier":{"value":"vscode.media-preview","_lower":"vscode.media-preview"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/media-preview","path":"/snap/code/206/usr/share/code/resources/app/extensions/media-preview","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"media-preview","displayName":"Media Preview","description":"Provides VS Code's built-in previews for images, audio, and video","extensionKind":["ui","workspace"],"version":"1.0.0","publisher":"vscode","icon":"icon.png","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.70.0"},"main":"./dist/extension","browser":"./dist/browser/extension.js","categories":["Other"],"activationEvents":[],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"Media Previewer","properties":{"mediaPreview.video.autoPlay":{"type":"boolean","default":false,"markdownDescription":"Start playing videos on mute automatically."},"mediaPreview.video.loop":{"type":"boolean","default":false,"markdownDescription":"Loop videos over again automatically."}}},"customEditors":[{"viewType":"imagePreview.previewEditor","displayName":"Image Preview","priority":"builtin","selector":[{"filenamePattern":"*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,svg}"}]},{"viewType":"vscode.audioPreview","displayName":"Audio Preview","priority":"builtin","selector":[{"filenamePattern":"*.{mp3,wav,ogg,oga}"}]},{"viewType":"vscode.videoPreview","displayName":"Video Preview","priority":"builtin","selector":[{"filenamePattern":"*.{mp4,webm}"}]}],"commands":[{"command":"imagePreview.zoomIn","title":"Zoom in","category":"Image Preview"},{"command":"imagePreview.zoomOut","title":"Zoom out","category":"Image Preview"},{"command":"imagePreview.copyImage","title":"Copy","category":"Image Preview"},{"command":"imagePreview.reopenAsPreview","title":"Reopen as image preview","category":"Image Preview","icon":"$(preview)"},{"command":"imagePreview.reopenAsText","title":"Reopen as source text","category":"Image Preview","icon":"$(go-to-file)"}],"menus":{"commandPalette":[{"command":"imagePreview.zoomIn","when":"activeCustomEditorId == 'imagePreview.previewEditor'","group":"1_imagePreview"},{"command":"imagePreview.zoomOut","when":"activeCustomEditorId == 'imagePreview.previewEditor'","group":"1_imagePreview"},{"command":"imagePreview.copyImage","when":"false"},{"command":"imagePreview.reopenAsPreview","when":"activeEditor == workbench.editors.files.textFileEditor && resourceExtname == '.svg'","group":"navigation"},{"command":"imagePreview.reopenAsText","when":"activeCustomEditorId == 'imagePreview.previewEditor' && resourceExtname == '.svg'","group":"navigation"}],"webview/context":[{"command":"imagePreview.copyImage","when":"webviewId == 'imagePreview.previewEditor'"}],"editor/title":[{"command":"imagePreview.reopenAsPreview","when":"editorFocus && resourceExtname == '.svg'","group":"navigation"},{"command":"imagePreview.reopenAsText","when":"activeCustomEditorId == 'imagePreview.previewEditor' && resourceExtname == '.svg'","group":"navigation"}]}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.merge-conflict","identifier":{"value":"vscode.merge-conflict","_lower":"vscode.merge-conflict"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/merge-conflict","path":"/snap/code/206/usr/share/code/resources/app/extensions/merge-conflict","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"merge-conflict","publisher":"vscode","displayName":"Merge Conflict","description":"Highlighting and commands for inline merge conflicts.","icon":"media/icon.png","version":"1.0.0","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.5.0"},"categories":["Other"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onStartupFinished"],"main":"./dist/mergeConflictMain","browser":"./dist/browser/mergeConflictMain","contributes":{"commands":[{"category":"Merge Conflict","title":"Accept All Current","original":"Accept All Current","command":"merge-conflict.accept.all-current","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept All Incoming","original":"Accept All Incoming","command":"merge-conflict.accept.all-incoming","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept All Both","original":"Accept All Both","command":"merge-conflict.accept.all-both","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept Current","original":"Accept Current","command":"merge-conflict.accept.current","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept Incoming","original":"Accept Incoming","command":"merge-conflict.accept.incoming","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept Selection","original":"Accept Selection","command":"merge-conflict.accept.selection","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Accept Both","original":"Accept Both","command":"merge-conflict.accept.both","enablement":"!isMergeEditor"},{"category":"Merge Conflict","title":"Next Conflict","original":"Next Conflict","command":"merge-conflict.next","enablement":"!isMergeEditor","icon":"$(arrow-down)"},{"category":"Merge Conflict","title":"Previous Conflict","original":"Previous Conflict","command":"merge-conflict.previous","enablement":"!isMergeEditor","icon":"$(arrow-up)"},{"category":"Merge Conflict","title":"Compare Current Conflict","original":"Compare Current Conflict","command":"merge-conflict.compare","enablement":"!isMergeEditor"}],"menus":{"scm/resourceState/context":[{"command":"merge-conflict.accept.all-current","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"merge-conflict.accept.all-incoming","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"}],"editor/title":[{"command":"merge-conflict.previous","group":"navigation@1","when":"!isMergeEditor && mergeConflictsCount && mergeConflictsCount != 0"},{"command":"merge-conflict.next","group":"navigation@2","when":"!isMergeEditor && mergeConflictsCount && mergeConflictsCount != 0"}]},"configuration":{"title":"Merge Conflict","properties":{"merge-conflict.codeLens.enabled":{"type":"boolean","description":"Create a CodeLens for merge conflict blocks within editor.","default":true},"merge-conflict.decorators.enabled":{"type":"boolean","description":"Create decorators for merge conflict blocks within editor.","default":true},"merge-conflict.autoNavigateNextConflict.enabled":{"type":"boolean","description":"Whether to automatically navigate to the next merge conflict after resolving a merge conflict.","default":false},"merge-conflict.diffViewPosition":{"type":"string","enum":["Current","Beside","Below"],"description":"Controls where the diff view should be opened when comparing changes in merge conflicts.","enumDescriptions":["Open the diff view in the current editor group.","Open the diff view next to the current editor group.","Open the diff view below the current editor group."],"default":"Current"}}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.microsoft-authentication","identifier":{"value":"vscode.microsoft-authentication","_lower":"vscode.microsoft-authentication"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/microsoft-authentication","path":"/snap/code/206/usr/share/code/resources/app/extensions/microsoft-authentication","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"microsoft-authentication","publisher":"vscode","license":"MIT","displayName":"Microsoft Account","description":"Microsoft authentication provider","version":"0.0.1","engines":{"vscode":"^1.42.0"},"icon":"media/icon.png","categories":["Other"],"activationEvents":[],"enabledApiProposals":["idToken","nativeWindowHandle","authIssuers","authenticationChallenges"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"extensionKind":["ui","workspace"],"contributes":{"authentication":[{"label":"Microsoft","id":"microsoft","authorizationServerGlobs":["https://login.microsoftonline.com/*","https://login.microsoftonline.com/*/v2.0"]},{"label":"Microsoft Sovereign Cloud","id":"microsoft-sovereign-cloud"}],"configuration":[{"title":"Microsoft Sovereign Cloud","properties":{"microsoft-sovereign-cloud.environment":{"type":"string","markdownDescription":"The Sovereign Cloud to use for authentication. If you select `custom`, you must also set the `#microsoft-sovereign-cloud.customEnvironment#` setting.","enum":["ChinaCloud","USGovernment","custom"],"enumDescriptions":["Azure China","Azure US Government","A custom Microsoft Sovereign Cloud"]},"microsoft-sovereign-cloud.customEnvironment":{"type":"object","additionalProperties":true,"markdownDescription":"The custom configuration for the Sovereign Cloud to use with the Microsoft Sovereign Cloud authentication provider. This along with setting `#microsoft-sovereign-cloud.environment#` to `custom` is required to use this feature.","properties":{"name":{"type":"string","description":"The name of the custom Sovereign Cloud."},"portalUrl":{"type":"string","description":"The portal URL for the custom Sovereign Cloud."},"managementEndpointUrl":{"type":"string","description":"The management endpoint for the custom Sovereign Cloud."},"resourceManagerEndpointUrl":{"type":"string","description":"The resource manager endpoint for the custom Sovereign Cloud."},"activeDirectoryEndpointUrl":{"type":"string","description":"The Active Directory endpoint for the custom Sovereign Cloud."},"activeDirectoryResourceId":{"type":"string","description":"The Active Directory resource ID for the custom Sovereign Cloud."}},"required":["name","portalUrl","managementEndpointUrl","resourceManagerEndpointUrl","activeDirectoryEndpointUrl","activeDirectoryResourceId"]}}},{"title":"Microsoft","properties":{"microsoft-authentication.implementation":{"type":"string","default":"msal","enum":["msal","msal-no-broker","classic"],"enumDescriptions":["Use the Microsoft Authentication Library (MSAL) to sign in with a Microsoft account.","Use the Microsoft Authentication Library (MSAL) to sign in with a Microsoft account using a browser. This is useful if you are having issues with the native broker.","(deprecated) Use the classic authentication flow to sign in with a Microsoft account."],"markdownDescription":"The authentication implementation to use for signing in with a Microsoft account.\n\n*NOTE: The `classic` implementation is deprecated and will be removed in a future release. If the `msal` implementation does not work for you, please [open an issue](command:workbench.action.openIssueReporter) and explain what you are trying to log in to.*","tags":["onExP"]}}}]},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","main":"./dist/extension.js","browser":"./dist/browser/extension.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"ms-vscode.js-debug","identifier":{"value":"ms-vscode.js-debug","_lower":"ms-vscode.js-debug"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.js-debug","path":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.js-debug","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"js-debug","displayName":"JavaScript Debugger","version":"1.104.0","publisher":"ms-vscode","author":{"name":"Microsoft Corporation"},"keywords":["pwa","javascript","node","chrome","debugger"],"description":"An extension for debugging Node.js programs and Chrome.","license":"MIT","engines":{"vscode":"^1.80.0","node":">=10"},"icon":"resources/logo.png","categories":["Debuggers"],"private":true,"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-pwa.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-pwa/issues"},"main":"./src/extension.js","enabledApiProposals":["portsAttributes","findTextInFiles","workspaceTrust","tunnels"],"extensionKind":["workspace"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"Trust is required to debug code in this workspace."}},"activationEvents":["onDebugDynamicConfigurations","onDebugInitialConfigurations","onFileSystem:jsDebugNetworkFs","onDebugResolve:pwa-node","onDebugResolve:node-terminal","onDebugResolve:pwa-extensionHost","onDebugResolve:pwa-chrome","onDebugResolve:pwa-msedge","onDebugResolve:node","onDebugResolve:chrome","onDebugResolve:extensionHost","onDebugResolve:msedge","onCommand:extension.js-debug.clearAutoAttachVariables","onCommand:extension.js-debug.setAutoAttachVariables","onCommand:extension.js-debug.autoAttachToProcess","onCommand:extension.js-debug.pickNodeProcess","onCommand:extension.js-debug.requestCDPProxy","onCommand:extension.js-debug.completion.nodeTool"],"contributes":{"menus":{"commandPalette":[{"command":"extension.js-debug.prettyPrint","title":"Pretty print for debugging","when":"debugType == pwa-extensionHost && debugState == stopped || debugType == node-terminal && debugState == stopped || debugType == pwa-node && debugState == stopped || debugType == pwa-chrome && debugState == stopped || debugType == pwa-msedge && debugState == stopped"},{"command":"extension.js-debug.startProfile","title":"Take Performance Profile","when":"debugType == pwa-extensionHost && inDebugMode && !jsDebugIsProfiling || debugType == node-terminal && inDebugMode && !jsDebugIsProfiling || debugType == pwa-node && inDebugMode && !jsDebugIsProfiling || debugType == pwa-chrome && inDebugMode && !jsDebugIsProfiling || debugType == pwa-msedge && inDebugMode && !jsDebugIsProfiling"},{"command":"extension.js-debug.stopProfile","title":"Stop Performance Profile","when":"debugType == pwa-extensionHost && inDebugMode && jsDebugIsProfiling || debugType == node-terminal && inDebugMode && jsDebugIsProfiling || debugType == pwa-node && inDebugMode && jsDebugIsProfiling || debugType == pwa-chrome && inDebugMode && jsDebugIsProfiling || debugType == pwa-msedge && inDebugMode && jsDebugIsProfiling"},{"command":"extension.js-debug.revealPage","when":"false"},{"command":"extension.js-debug.debugLink","title":"Open Link","when":"!isWeb"},{"command":"extension.js-debug.createDiagnostics","title":"Diagnose Breakpoint Problems","when":"debugType == pwa-extensionHost && inDebugMode || debugType == node-terminal && inDebugMode || debugType == pwa-node && inDebugMode || debugType == pwa-chrome && inDebugMode || debugType == pwa-msedge && inDebugMode"},{"command":"extension.js-debug.getDiagnosticLogs","title":"Save Diagnostic JS Debug Logs","when":"debugType == pwa-extensionHost && inDebugMode || debugType == node-terminal && inDebugMode || debugType == pwa-node && inDebugMode || debugType == pwa-chrome && inDebugMode || debugType == pwa-msedge && inDebugMode"},{"command":"extension.js-debug.openEdgeDevTools","title":"Open Browser Devtools","when":"debugType == pwa-msedge"},{"command":"extension.js-debug.callers.add","title":"Exclude caller from pausing in the current location","when":"debugType == pwa-extensionHost && debugState == \"stopped\" || debugType == node-terminal && debugState == \"stopped\" || debugType == pwa-node && debugState == \"stopped\" || debugType == pwa-chrome && debugState == \"stopped\" || debugType == pwa-msedge && debugState == \"stopped\""},{"command":"extension.js-debug.callers.goToCaller","when":"false"},{"command":"extension.js-debug.callers.gotToTarget","when":"false"},{"command":"extension.js-debug.network.copyUri","when":"false"},{"command":"extension.js-debug.network.openBody","when":"false"},{"command":"extension.js-debug.network.openBodyInHex","when":"false"},{"command":"extension.js-debug.network.replayXHR","when":"false"},{"command":"extension.js-debug.network.viewRequest","when":"false"},{"command":"extension.js-debug.network.clear","when":"false"},{"command":"extension.js-debug.enableSourceMapStepping","when":"jsDebugIsMapSteppingDisabled"},{"command":"extension.js-debug.disableSourceMapStepping","when":"!jsDebugIsMapSteppingDisabled"}],"debug/callstack/context":[{"command":"extension.js-debug.revealPage","group":"navigation","when":"debugType == pwa-chrome && callStackItemType == 'session' || debugType == pwa-msedge && callStackItemType == 'session'"},{"command":"extension.js-debug.toggleSkippingFile","group":"navigation","when":"debugType == pwa-extensionHost && callStackItemType == 'session' || debugType == node-terminal && callStackItemType == 'session' || debugType == pwa-node && callStackItemType == 'session' || debugType == pwa-chrome && callStackItemType == 'session' || debugType == pwa-msedge && callStackItemType == 'session'"},{"command":"extension.js-debug.startProfile","group":"navigation","when":"debugType == pwa-extensionHost && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == node-terminal && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-node && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-chrome && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-msedge && !jsDebugIsProfiling && callStackItemType == 'session'"},{"command":"extension.js-debug.stopProfile","group":"navigation","when":"debugType == pwa-extensionHost && jsDebugIsProfiling && callStackItemType == 'session' || debugType == node-terminal && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-node && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-chrome && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-msedge && jsDebugIsProfiling && callStackItemType == 'session'"},{"command":"extension.js-debug.startProfile","group":"inline","when":"debugType == pwa-extensionHost && !jsDebugIsProfiling || debugType == node-terminal && !jsDebugIsProfiling || debugType == pwa-node && !jsDebugIsProfiling || debugType == pwa-chrome && !jsDebugIsProfiling || debugType == pwa-msedge && !jsDebugIsProfiling"},{"command":"extension.js-debug.stopProfile","group":"inline","when":"debugType == pwa-extensionHost && jsDebugIsProfiling || debugType == node-terminal && jsDebugIsProfiling || debugType == pwa-node && jsDebugIsProfiling || debugType == pwa-chrome && jsDebugIsProfiling || debugType == pwa-msedge && jsDebugIsProfiling"},{"command":"extension.js-debug.callers.add","when":"debugType == pwa-extensionHost && callStackItemType == 'stackFrame' || debugType == node-terminal && callStackItemType == 'stackFrame' || debugType == pwa-node && callStackItemType == 'stackFrame' || debugType == pwa-chrome && callStackItemType == 'stackFrame' || debugType == pwa-msedge && callStackItemType == 'stackFrame'"}],"debug/toolBar":[{"command":"extension.js-debug.stopProfile","when":"debugType == pwa-extensionHost && jsDebugIsProfiling || debugType == node-terminal && jsDebugIsProfiling || debugType == pwa-node && jsDebugIsProfiling || debugType == pwa-chrome && jsDebugIsProfiling || debugType == pwa-msedge && jsDebugIsProfiling"},{"command":"extension.js-debug.openEdgeDevTools","when":"debugType == pwa-msedge"},{"command":"extension.js-debug.enableSourceMapStepping","when":"jsDebugIsMapSteppingDisabled"}],"view/title":[{"command":"extension.js-debug.addCustomBreakpoints","when":"view == jsBrowserBreakpoints","group":"navigation"},{"command":"extension.js-debug.removeAllCustomBreakpoints","when":"view == jsBrowserBreakpoints","group":"navigation"},{"command":"extension.js-debug.callers.removeAll","group":"navigation","when":"view == jsExcludedCallers"},{"command":"extension.js-debug.disableSourceMapStepping","group":"navigation","when":"debugType == pwa-extensionHost && view == workbench.debug.callStackView && !jsDebugIsMapSteppingDisabled || debugType == node-terminal && view == workbench.debug.callStackView && !jsDebugIsMapSteppingDisabled || debugType == pwa-node && view == workbench.debug.callStackView && !jsDebugIsMapSteppingDisabled || debugType == pwa-chrome && view == workbench.debug.callStackView && !jsDebugIsMapSteppingDisabled || debugType == pwa-msedge && view == workbench.debug.callStackView && !jsDebugIsMapSteppingDisabled"},{"command":"extension.js-debug.enableSourceMapStepping","group":"navigation","when":"debugType == pwa-extensionHost && view == workbench.debug.callStackView && jsDebugIsMapSteppingDisabled || debugType == node-terminal && view == workbench.debug.callStackView && jsDebugIsMapSteppingDisabled || debugType == pwa-node && view == workbench.debug.callStackView && jsDebugIsMapSteppingDisabled || debugType == pwa-chrome && view == workbench.debug.callStackView && jsDebugIsMapSteppingDisabled || debugType == pwa-msedge && view == workbench.debug.callStackView && jsDebugIsMapSteppingDisabled"},{"command":"extension.js-debug.network.clear","group":"navigation","when":"view == jsDebugNetworkTree"}],"view/item/context":[{"command":"extension.js-debug.addXHRBreakpoints","when":"view == jsBrowserBreakpoints && viewItem == xhrBreakpoint"},{"command":"extension.js-debug.editXHRBreakpoints","when":"view == jsBrowserBreakpoints && viewItem == xhrBreakpoint","group":"inline"},{"command":"extension.js-debug.editXHRBreakpoints","when":"view == jsBrowserBreakpoints && viewItem == xhrBreakpoint"},{"command":"extension.js-debug.removeXHRBreakpoint","when":"view == jsBrowserBreakpoints && viewItem == xhrBreakpoint","group":"inline"},{"command":"extension.js-debug.removeXHRBreakpoint","when":"view == jsBrowserBreakpoints && viewItem == xhrBreakpoint"},{"command":"extension.js-debug.addXHRBreakpoints","when":"view == jsBrowserBreakpoints && viewItem == xhrCategory","group":"inline"},{"command":"extension.js-debug.callers.goToCaller","group":"inline","when":"view == jsExcludedCallers"},{"command":"extension.js-debug.callers.gotToTarget","group":"inline","when":"view == jsExcludedCallers"},{"command":"extension.js-debug.callers.remove","group":"inline","when":"view == jsExcludedCallers"},{"command":"extension.js-debug.network.viewRequest","group":"inline@1","when":"view == jsDebugNetworkTree"},{"command":"extension.js-debug.network.openBody","group":"body@1","when":"view == jsDebugNetworkTree"},{"command":"extension.js-debug.network.openBodyInHex","group":"body@2","when":"view == jsDebugNetworkTree"},{"command":"extension.js-debug.network.copyUri","group":"other@1","when":"view == jsDebugNetworkTree"},{"command":"extension.js-debug.network.replayXHR","group":"other@2","when":"view == jsDebugNetworkTree"}],"editor/title":[{"command":"extension.js-debug.prettyPrint","group":"navigation","when":"jsDebugCanPrettyPrint"}]},"breakpoints":[{"language":"javascript"},{"language":"typescript"},{"language":"typescriptreact"},{"language":"javascriptreact"},{"language":"fsharp"},{"language":"html"},{"language":"wat"},{"language":"c"},{"language":"cpp"},{"language":"rust"},{"language":"zig"}],"debuggers":[{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"attachExistingChildren":{"default":false,"description":"Whether to attempt to attach to already-spawned child processes.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"continueOnAttach":{"default":true,"markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Debug port to attach to. Default is 9229.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"processId":{"default":"${command:PickProcess}","description":"ID of process to attach to.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteHostHeader":{"description":"Explicit Host header to use when connecting to the websocket of inspector. If unspecified, the host header will be set to 'localhost'. This is useful when the inspector is running behind a proxy that only accept particular Host header.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"websocketAddress":{"description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-node"],"enumDescriptions":["Node.js"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type node instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-node"],"enumDescriptions":["Node.js"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type node instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[],"deprecated":"Please use type node instead","label":"Node.js","languages":["javascript","typescript","javascriptreact","typescriptreact"],"strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"pwa-node","variables":{"PickProcess":"extension.js-debug.pickNodeProcess"}},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"attachExistingChildren":{"default":false,"description":"Whether to attempt to attach to already-spawned child processes.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"continueOnAttach":{"default":true,"markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Debug port to attach to. Default is 9229.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"processId":{"default":"${command:PickProcess}","description":"ID of process to attach to.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteHostHeader":{"description":"Explicit Host header to use when connecting to the websocket of inspector. If unspecified, the host header will be set to 'localhost'. This is useful when the inspector is running behind a proxy that only accept particular Host header.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"websocketAddress":{"description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node"],"enumDescriptions":["Node.js"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node"],"enumDescriptions":["Node.js"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[{"body":{"name":"${1:Attach}","port":9229,"request":"attach","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Attach to a running node program","label":"Node.js: Attach"},{"body":{"address":"${2:TCP/IP address of process to be debugged}","localRoot":"^\"\\${workspaceFolder}\"","name":"${1:Attach to Remote}","port":9229,"remoteRoot":"${3:Absolute path to the remote directory containing the program}","request":"attach","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Attach to the debug port of a remote node program","label":"Node.js: Attach to Remote Program"},{"body":{"name":"${1:Attach by Process ID}","processId":"^\"\\${command:PickProcess}\"","request":"attach","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Open process picker to select node process to attach to","label":"Node.js: Attach to Process"},{"body":{"name":"${2:Launch Program}","program":"^\"\\${workspaceFolder}/${1:app.js}\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Launch a node program in debug mode","label":"Node.js: Launch Program"},{"body":{"name":"${1:Launch via NPM}","request":"launch","runtimeArgs":["run-script","debug"],"runtimeExecutable":"npm","skipFiles":["<node_internals>/**"],"type":"node"},"label":"Node.js: Launch via npm","markdownDescription":"Launch a node program through an npm `debug` script"},{"body":{"console":"integratedTerminal","internalConsoleOptions":"neverOpen","name":"nodemon","program":"^\"\\${workspaceFolder}/${1:app.js}\"","request":"launch","restart":true,"runtimeExecutable":"nodemon","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Use nodemon to relaunch a debug session on source changes","label":"Node.js: Nodemon Setup"},{"body":{"args":["-u","tdd","--timeout","999999","--colors","^\"\\${workspaceFolder}/${1:test}\""],"internalConsoleOptions":"openOnSessionStart","name":"Mocha Tests","program":"^\"mocha\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Debug mocha tests","label":"Node.js: Mocha Tests"},{"body":{"args":["${1:generator}"],"console":"integratedTerminal","internalConsoleOptions":"neverOpen","name":"Yeoman ${1:generator}","program":"^\"\\${workspaceFolder}/node_modules/yo/lib/cli.js\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"node"},"label":"Node.js: Yeoman generator","markdownDescription":"Debug yeoman generator (install by running `npm link` in project folder)"},{"body":{"args":["${1:task}"],"name":"Gulp ${1:task}","program":"^\"\\${workspaceFolder}/node_modules/gulp/bin/gulp.js\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Debug gulp task (make sure to have a local gulp installed in your project)","label":"Node.js: Gulp task"},{"body":{"name":"Electron Main","program":"^\"\\${workspaceFolder}/main.js\"","request":"launch","runtimeExecutable":"^\"electron\"","skipFiles":["<node_internals>/**"],"type":"node"},"description":"Debug the Electron main process","label":"Node.js: Electron Main"}],"label":"Node.js","strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"node","variables":{"PickProcess":"extension.js-debug.pickNodeProcess"}},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node-terminal"],"enumDescriptions":["JavaScript Debug Terminal"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[{"body":{"command":"npm start","name":"Run npm start","request":"launch","type":"node-terminal"},"description":"Run \"npm start\" in a debug terminal","label":"Run \"npm start\" in a debug terminal"}],"label":"JavaScript Debug Terminal","languages":[],"strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"node-terminal"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"properties":{"args":{"default":["--extensionDevelopmentPath=${workspaceFolder}"],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugWebWorkerHost":{"default":true,"markdownDescription":"Configures whether we should try to attach to the web worker extension host.","type":["boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugWebviews":{"default":true,"markdownDescription":"Configures whether we should try to attach to webviews in the launched VS Code instance. This will only work in desktop VS Code.","type":["boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"rendererDebugOptions":{"default":{"webRoot":"${workspaceFolder}"},"markdownDescription":"Chrome launch options used when attaching to the renderer process, with `debugWebviews` or `debugWebWorkerHost`.","properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"]},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"node","markdownDescription":"Absolute path to VS Code.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"testConfiguration":{"default":"${workspaceFolder}/.vscode-test.js","markdownDescription":"Path to a test configuration file for the [test CLI](https://code.visualstudio.com/api/working-with-extensions/testing-extension#quick-setup-the-test-cli).","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"testConfigurationLabel":{"default":"","markdownDescription":"A single configuration to run from the file. If not specified, you may be asked to pick.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-extensionHost"],"enumDescriptions":["VS Code Extension Development"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type extensionHost instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[],"deprecated":"Please use type extensionHost instead","label":"VS Code Extension Development","languages":["javascript","typescript","javascriptreact","typescriptreact"],"strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"pwa-extensionHost"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"properties":{"args":{"default":["--extensionDevelopmentPath=${workspaceFolder}"],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugWebWorkerHost":{"default":true,"markdownDescription":"Configures whether we should try to attach to the web worker extension host.","type":["boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugWebviews":{"default":true,"markdownDescription":"Configures whether we should try to attach to webviews in the launched VS Code instance. This will only work in desktop VS Code.","type":["boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"rendererDebugOptions":{"default":{"webRoot":"${workspaceFolder}"},"markdownDescription":"Chrome launch options used when attaching to the renderer process, with `debugWebviews` or `debugWebWorkerHost`.","properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"]},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"node","markdownDescription":"Absolute path to VS Code.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"testConfiguration":{"default":"${workspaceFolder}/.vscode-test.js","markdownDescription":"Path to a test configuration file for the [test CLI](https://code.visualstudio.com/api/working-with-extensions/testing-extension#quick-setup-the-test-cli).","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"testConfigurationLabel":{"default":"","markdownDescription":"A single configuration to run from the file. If not specified, you may be asked to pick.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["extensionHost"],"enumDescriptions":["VS Code Extension Development"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[{"body":{"args":["^\"--extensionDevelopmentPath=\\${workspaceFolder}\""],"name":"Launch Extension","outFiles":["^\"\\${workspaceFolder}/out/**/*.js\""],"preLaunchTask":"npm","request":"launch","type":"extensionHost"},"description":"Launch a VS Code extension in debug mode","label":"VS Code Extension Development"}],"label":"VS Code Extension Development","strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"extensionHost"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-chrome"],"enumDescriptions":["Web App (Chrome)"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type chrome instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeLaunchArgs":{"default":true,"description":"Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how browser processes are killed when stopping the session with `cleanUp: wholeBrowser`. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":0,"description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-chrome"],"enumDescriptions":["Web App (Chrome)"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type chrome instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[],"deprecated":"Please use type chrome instead","label":"Web App (Chrome)","languages":["javascript","typescript","javascriptreact","typescriptreact","html","css","coffeescript","handlebars","vue"],"strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"pwa-chrome"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["chrome"],"enumDescriptions":["Web App (Chrome)"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeLaunchArgs":{"default":true,"description":"Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how browser processes are killed when stopping the session with `cleanUp: wholeBrowser`. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":0,"description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["chrome"],"enumDescriptions":["Web App (Chrome)"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[{"body":{"name":"Launch Chrome","request":"launch","type":"chrome","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Launch Chrome to debug a URL","label":"Chrome: Launch"},{"body":{"name":"Attach to Chrome","port":9222,"request":"attach","type":"chrome","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Attach to an instance of Chrome already in debug mode","label":"Chrome: Attach"}],"label":"Web App (Chrome)","strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"chrome"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"useWebView":{"default":{"pipeName":"MyPipeName"},"description":"An object containing the `pipeName` of a debug pipe for a UWP hosted Webview2. This is the \"MyTestSharedMemory\" when creating the pipe \"\\\\.\\pipe\\LOCAL\\MyTestSharedMemory\"","properties":{"pipeName":{"type":"string"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-msedge"],"enumDescriptions":["Web App (Edge)"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type msedge instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"address":{"default":"localhost","description":"When debugging webviews, the IP address or hostname the webview is listening on. Will be automatically discovered if not set.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeLaunchArgs":{"default":true,"description":"Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how browser processes are killed when stopping the session with `cleanUp: wholeBrowser`. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"When debugging webviews, the port the webview debugger is listening on. Will be automatically discovered if not set.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'dev', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or EDGE_PATH environment variable.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"useWebView":{"default":false,"description":"When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["pwa-msedge"],"enumDescriptions":["Web App (Edge)"],"description":"Type of configuration.","pattern":"^(?!node2)","deprecationMessage":"Please use type msedge instead","doNotSuggest":true,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[],"deprecated":"Please use type msedge instead","label":"Web App (Edge)","languages":["javascript","typescript","javascriptreact","typescriptreact","html","css","coffeescript","handlebars","vue"],"strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"pwa-msedge"},{"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}],"tags":["setup"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"useWebView":{"default":{"pipeName":"MyPipeName"},"description":"An object containing the `pipeName` of a debug pipe for a UWP hosted Webview2. This is the \"MyTestSharedMemory\" when creating the pipe \"\\\\.\\pipe\\LOCAL\\MyTestSharedMemory\"","properties":{"pipeName":{"type":"string"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["msedge"],"enumDescriptions":["Web App (Edge)"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"launch":{"properties":{"address":{"default":"localhost","description":"When debugging webviews, the IP address or hostname the webview is listening on. Will be automatically discovered if not set.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"includeLaunchArgs":{"default":true,"description":"Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how browser processes are killed when stopping the session with `cleanUp: wholeBrowser`. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"default":9229,"description":"When debugging webviews, the port the webview debugger is listening on. Will be automatically discovered if not set.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'dev', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or EDGE_PATH environment variable.","type":["string","null"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"tags":["setup"],"type":["array","string"]},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","oneOf":[{"type":"integer"},{"pattern":"^\\${.*}$","type":"string"}]},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"experimentalNetworking":{"default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"],"type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","tags":["setup"],"type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"tags":["setup"],"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","tags":["setup"],"type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"],"type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"enableDWARF":{"default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","tags":["setup"],"type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"tags":["setup"],"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}]}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"default":["${/**"],"description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"hoverEvaluation":{"default":500,"description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","type":"number"},"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"}},"type":"object"}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"useWebView":{"default":false,"description":"When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","tags":["setup"],"type":"string","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["msedge"],"enumDescriptions":["Web App (Edge)"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}},"configurationSnippets":[{"body":{"name":"Launch Edge","request":"launch","type":"msedge","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Launch Edge to debug a URL","label":"Edge: Launch"},{"body":{"name":"Attach to Edge","port":9222,"request":"attach","type":"msedge","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Attach to an instance of Edge already in debug mode","label":"Edge: Attach"}],"label":"Web App (Edge)","strings":{"unverifiedBreakpoints":"Some of your breakpoints could not be set. If you're having an issue, you can [troubleshoot your launch configuration](command:extension.js-debug.createDiagnostics)."},"type":"msedge"}],"commands":[{"command":"extension.js-debug.prettyPrint","title":"Pretty print for debugging","category":"Debug","icon":"$(json)"},{"command":"extension.js-debug.toggleSkippingFile","title":"Toggle Skipping this File","category":"Debug"},{"command":"extension.js-debug.addCustomBreakpoints","title":"Toggle Event Listener Breakpoints","icon":"$(add)"},{"command":"extension.js-debug.removeAllCustomBreakpoints","title":"Remove All Event Listener Breakpoints","icon":"$(close-all)"},{"command":"extension.js-debug.addXHRBreakpoints","title":"Add XHR/fetch Breakpoint","icon":"$(add)"},{"command":"extension.js-debug.removeXHRBreakpoint","title":"Remove XHR/fetch Breakpoint","icon":"$(remove)"},{"command":"extension.js-debug.editXHRBreakpoints","title":"Edit XHR/fetch Breakpoint","icon":"$(edit)"},{"command":"extension.pwa-node-debug.attachNodeProcess","title":"Attach to Node Process","category":"Debug"},{"command":"extension.js-debug.npmScript","title":"Debug npm Script","category":"Debug"},{"command":"extension.js-debug.createDebuggerTerminal","title":"JavaScript Debug Terminal","category":"Debug"},{"command":"extension.js-debug.startProfile","title":"Take Performance Profile","category":"Debug","icon":"$(record)"},{"command":"extension.js-debug.stopProfile","title":"Stop Performance Profile","category":"Debug","icon":"resources/dark/stop-profiling.svg"},{"command":"extension.js-debug.revealPage","title":"Focus Tab","category":"Debug"},{"command":"extension.js-debug.debugLink","title":"Open Link","category":"Debug"},{"command":"extension.js-debug.createDiagnostics","title":"Diagnose Breakpoint Problems","category":"Debug"},{"command":"extension.js-debug.getDiagnosticLogs","title":"Save Diagnostic JS Debug Logs","category":"Debug"},{"command":"extension.node-debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug"},{"command":"extension.js-debug.openEdgeDevTools","title":"Open Browser Devtools","icon":"$(inspect)","category":"Debug"},{"command":"extension.js-debug.callers.add","title":"Exclude Caller","category":"Debug"},{"command":"extension.js-debug.callers.remove","title":"Remove excluded caller","icon":"$(close)"},{"command":"extension.js-debug.callers.removeAll","title":"Remove all excluded callers","icon":"$(clear-all)"},{"command":"extension.js-debug.callers.goToCaller","title":"Go to caller location","icon":"$(call-outgoing)"},{"command":"extension.js-debug.callers.gotToTarget","title":"Go to target location","icon":"$(call-incoming)"},{"command":"extension.js-debug.enableSourceMapStepping","title":"Enable Source Mapped Stepping","icon":"$(compass-dot)"},{"command":"extension.js-debug.disableSourceMapStepping","title":"Disable Source Mapped Stepping","icon":"$(compass)"},{"command":"extension.js-debug.network.viewRequest","title":"View Request as cURL","icon":"$(arrow-right)"},{"command":"extension.js-debug.network.clear","title":"Clear Network Log","icon":"$(clear-all)"},{"command":"extension.js-debug.network.openBody","title":"Open Response Body"},{"command":"extension.js-debug.network.openBodyInHex","title":"Open Response Body in Hex Editor"},{"command":"extension.js-debug.network.replayXHR","title":"Replay Request"},{"command":"extension.js-debug.network.copyUri","title":"Copy Request URL"}],"keybindings":[{"command":"extension.node-debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"debugConfigurationType == pwa-node && !inDebugMode || debugConfigurationType == pwa-extensionHost && !inDebugMode || debugConfigurationType == node && !inDebugMode"},{"command":"extension.node-debug.startWithStopOnEntry","key":"F11","mac":"F11","when":"debugConfigurationType == pwa-node && !inDebugMode && activeViewlet == workbench.view.debug || debugConfigurationType == pwa-extensionHost && !inDebugMode && activeViewlet == workbench.view.debug || debugConfigurationType == node && !inDebugMode && activeViewlet == workbench.view.debug"}],"configuration":{"title":"JavaScript Debugger","properties":{"debug.javascript.codelens.npmScripts":{"enum":["top","all","never"],"default":"top","description":"Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\"."},"debug.javascript.terminalOptions":{"type":"object","description":"Default launch options for the JavaScript debug terminal and npm scripts.","default":{},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"items":{"type":"string"},"tags":["setup"]},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","default":["${/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000},"hoverEvaluation":{"type":"number","description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","default":500}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"stdio":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"enableDWARF":{"type":"boolean","default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"]},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"tags":["setup"]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"command":{"type":["string","null"],"description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","default":"npm start","tags":["setup"]}}},"debug.javascript.automaticallyTunnelRemoteServer":{"type":"boolean","description":"When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.","default":true},"debug.javascript.debugByLinkOptions":{"default":"on","description":"Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.","oneOf":[{"type":"string","enum":["on","off","always"]},{"type":"object","properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":null,"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"items":{"type":"string"},"tags":["setup"]},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","default":["${/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000},"hoverEvaluation":{"type":"number","description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","default":500}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"stdio":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"enableDWARF":{"type":"boolean","default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","default":{}},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}","tags":["setup"]},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"url":{"type":"string","description":"Will search for a tab with this exact url and attach to it, if found","default":"http://localhost:8080","tags":["setup"]},"inspectUri":{"type":["string","null"],"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","default":null},"vueComponentPaths":{"type":"array","description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","default":["${workspaceFolder}/**/*.vue"]},"server":{"oneOf":[{"type":"object","description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","additionalProperties":false,"default":{"program":"node my-server.js"},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"items":{"type":"string"},"tags":["setup"]},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","default":["${/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000},"hoverEvaluation":{"type":"number","description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","default":500}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"stdio":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"enableDWARF":{"type":"boolean","default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","tags":["setup"]},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"tags":["setup"]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","default":"","tags":["setup"]},"stopOnEntry":{"type":["boolean","string"],"description":"Automatically stop program after launch.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"args":{"type":["array","string"],"description":"Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.","items":{"type":"string"},"default":[],"tags":["setup"]},"restart":{"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","properties":{"delay":{"type":"number","minimum":0,"default":1000},"maxAttempts":{"type":"number","minimum":0,"default":10}}}]},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node"},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[],"tags":["setup"]},"profileStartup":{"type":"boolean","description":"If true, will start profiling as soon as the process launches","default":true},"attachSimplePort":{"oneOf":[{"type":"integer"},{"type":"string","pattern":"^\\${.*}$"}],"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","default":9229},"killBehavior":{"type":"string","enum":["forceful","polite","none"],"default":"forceful","markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."},"experimentalNetworking":{"type":"string","default":"auto","description":"Enable experimental inspection in Node.js. When set to `auto` this is enabled for versions of Node.js that support it. It can be set to `on` or `off` to enable or disable it explicitly.","enum":["auto","on","off"]}}},{"type":"object","description":"JavaScript Debug Terminal","additionalProperties":false,"default":{"program":"npm start"},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"items":{"type":"string"},"tags":["setup"]},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","default":["${/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000},"hoverEvaluation":{"type":"number","description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","default":500}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"stdio":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"enableDWARF":{"type":"boolean","default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"]},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"tags":["setup"]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"command":{"type":["string","null"],"description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","default":"npm start","tags":["setup"]}}}]},"perScriptSourcemaps":{"type":"string","default":"auto","enum":["yes","no","auto"],"description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."},"port":{"type":"number","description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","default":0},"file":{"type":"string","description":"A local html file to open in the browser","default":"${workspaceFolder}/index.html","tags":["setup"]},"userDataDir":{"type":["string","boolean"],"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","default":true},"includeDefaultArgs":{"type":"boolean","description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","default":true},"includeLaunchArgs":{"type":"boolean","description":"Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.","default":true},"runtimeExecutable":{"type":["string","null"],"description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","default":"stable"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","description":"Optional dictionary of environment key/value pairs for the browser.","default":{}},"cwd":{"type":"string","description":"Optional working directory for the runtime executable.","default":null},"profileStartup":{"type":"boolean","description":"If true, will start profiling soon as the process launches","default":true},"cleanUp":{"type":"string","enum":["wholeBrowser","onlyTab"],"description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","default":"wholeBrowser"},"killBehavior":{"type":"string","enum":["forceful","polite","none"],"default":"forceful","markdownDescription":"Configures how browser processes are killed when stopping the session with `cleanUp: wholeBrowser`. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."},"browserLaunchLocation":{"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","default":null,"oneOf":[{"type":"null"},{"type":"string","enum":["ui","workspace"]}]},"enabled":{"type":"string","enum":["on","off","always"]}}}]},"debug.javascript.pickAndAttachOptions":{"type":"object","default":{},"markdownDescription":"Default options used when debugging a process through the `Debug: Attach to Node.js Process` command","properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.(m|c|)js","!**/node_modules/**"],"items":{"type":"string"},"tags":["setup"]},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`","default":["${/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000},"hoverEvaluation":{"type":"number","description":"Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.","default":500}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"stdio":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"enableDWARF":{"type":"boolean","default":true,"markdownDescription":"Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}","tags":["setup"]},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"tags":["setup"]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"address":{"type":"string","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","default":"localhost"},"port":{"description":"Debug port to attach to. Default is 9229.","default":9229,"oneOf":[{"type":"integer"},{"type":"string","pattern":"^\\${.*}$"}],"tags":["setup"]},"websocketAddress":{"type":"string","description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."},"remoteHostHeader":{"type":"string","description":"Explicit Host header to use when connecting to the websocket of inspector. If unspecified, the host header will be set to 'localhost'. This is useful when the inspector is running behind a proxy that only accept particular Host header."},"restart":{"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","properties":{"delay":{"type":"number","minimum":0,"default":1000},"maxAttempts":{"type":"number","minimum":0,"default":10}}}]},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}"},"attachExistingChildren":{"type":"boolean","description":"Whether to attempt to attach to already-spawned child processes.","default":false},"continueOnAttach":{"type":"boolean","markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","default":true}}},"debug.javascript.autoAttachFilter":{"type":"string","default":"disabled","enum":["always","smart","onlyWithFlag","disabled"],"enumDescriptions":["Auto attach to every Node.js process launched in the terminal.","Auto attach when running scripts that aren't in a node_modules folder.","Only auto attach when the `--inspect` is given.","Auto attach is disabled and not shown in status bar."],"markdownDescription":"Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting."},"debug.javascript.autoAttachSmartPattern":{"type":"array","items":{"type":"string"},"default":["${workspaceFolder}/**","!**/node_modules/**","**/$KNOWN_TOOLS$/**"],"markdownDescription":"Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns)."},"debug.javascript.breakOnConditionalError":{"type":"boolean","default":false,"markdownDescription":"Whether to stop when conditional breakpoints throw an error."},"debug.javascript.unmapMissingSources":{"type":"boolean","default":false,"description":"Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown."},"debug.javascript.defaultRuntimeExecutable":{"type":"object","default":{"pwa-node":"node"},"markdownDescription":"The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.","properties":{"pwa-node":{"type":"string"},"pwa-chrome":{"type":"string"},"pwa-msedge":{"type":"string"}}},"debug.javascript.resourceRequestOptions":{"type":"object","default":{},"markdownDescription":"Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`."},"debug.javascript.enableNetworkView":{"type":"boolean","default":true,"description":"Enables the experimental network view for targets that support it."}}},"grammars":[{"language":"wat","scopeName":"text.wat","path":"./src/ui/basic-wat.tmLanguage.json"}],"languages":[{"id":"wat","extensions":[".wat",".wasm"],"aliases":["WebAssembly Text Format"],"firstLine":"^\\(module","mimetypes":["text/wat"],"configuration":"./src/ui/basic-wat.configuration.json"}],"terminal":{"profiles":[{"id":"extension.js-debug.debugTerminal","title":"JavaScript Debug Terminal","icon":"$(debug)"}]},"views":{"debug":[{"id":"jsBrowserBreakpoints","name":"Event Listener Breakpoints","when":"debugType == pwa-chrome || debugType == pwa-msedge"},{"id":"jsExcludedCallers","name":"Excluded Callers","when":"debugType == pwa-extensionHost && jsDebugHasExcludedCallers || debugType == node-terminal && jsDebugHasExcludedCallers || debugType == pwa-node && jsDebugHasExcludedCallers || debugType == pwa-chrome && jsDebugHasExcludedCallers || debugType == pwa-msedge && jsDebugHasExcludedCallers"},{"id":"jsDebugNetworkTree","name":"Network","when":"jsDebugNetworkAvailable"}]},"viewsWelcome":[{"view":"debug","contents":"[JavaScript Debug Terminal](command:extension.js-debug.createDebuggerTerminal)\n\nYou can use the JavaScript Debug Terminal to debug Node.js processes run on the command line.\n\n[Debug URL](command:extension.js-debug.debugLink)","when":"debugStartLanguage == javascript && !isWeb || debugStartLanguage == typescript && !isWeb || debugStartLanguage == javascriptreact && !isWeb || debugStartLanguage == typescriptreact && !isWeb"},{"view":"debug","contents":"[JavaScript Debug Terminal](command:extension.js-debug.createDebuggerTerminal)\n\nYou can use the JavaScript Debug Terminal to debug Node.js processes run on the command line.","when":"debugStartLanguage == javascript && isWeb || debugStartLanguage == typescript && isWeb || debugStartLanguage == javascriptreact && isWeb || debugStartLanguage == typescriptreact && isWeb"}]}},{"id":"ms-vscode.js-debug-companion","identifier":{"value":"ms-vscode.js-debug-companion","_lower":"ms-vscode.js-debug-companion"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.js-debug-companion","path":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.js-debug-companion","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"js-debug-companion","displayName":"JavaScript Debugger Companion Extension","description":"Companion extension to js-debug that provides capability for remote debugging","version":"1.1.3","publisher":"ms-vscode","engines":{"vscode":"^1.90.0"},"icon":"resources/logo.png","categories":["Other"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-js-debug-companion.git"},"author":"Connor Peet <connor@peet.io>","license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-js-debug-companion/issues"},"homepage":"https://github.com/microsoft/vscode-js-debug-companion#readme","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onCommand:js-debug-companion.launchAndAttach","onCommand:js-debug-companion.kill","onCommand:js-debug-companion.launch","onCommand:js-debug-companion.defaultBrowser"],"main":"./out/extension.js","contributes":{},"extensionKind":["ui"],"api":"none","prettier":{"trailingComma":"all","singleQuote":true,"printWidth":100,"tabWidth":2,"arrowParens":"avoid"}},{"id":"ms-vscode.vscode-js-profile-table","identifier":{"value":"ms-vscode.vscode-js-profile-table","_lower":"ms-vscode.vscode-js-profile-table"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.vscode-js-profile-table","path":"/snap/code/206/usr/share/code/resources/app/extensions/ms-vscode.vscode-js-profile-table","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"vscode-js-profile-table","version":"1.0.10","displayName":"Table Visualizer for JavaScript Profiles","description":"Text visualizer for profiles taken from the JavaScript debugger","author":"Connor Peet <connor@peet.io>","homepage":"https://github.com/microsoft/vscode-js-profile-visualizer#readme","license":"MIT","main":"out/extension.js","browser":"out/extension.web.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode-js-profile-visualizer.git"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"icon":"resources/icon.png","publisher":"ms-vscode","sideEffects":false,"engines":{"vscode":"^1.74.0"},"contributes":{"customEditors":[{"viewType":"jsProfileVisualizer.cpuprofile.table","displayName":"CPU Profile Table Visualizer","priority":"default","selector":[{"filenamePattern":"*.cpuprofile"}]},{"viewType":"jsProfileVisualizer.heapprofile.table","displayName":"Heap Profile Table Visualizer","priority":"default","selector":[{"filenamePattern":"*.heapprofile"}]},{"viewType":"jsProfileVisualizer.heapsnapshot.table","displayName":"Heap Snapshot Table Visualizer","priority":"default","selector":[{"filenamePattern":"*.heapsnapshot"}]}],"commands":[{"command":"extension.jsProfileVisualizer.table.clearCodeLenses","title":"Clear Profile Code Lenses"}],"menus":{"commandPalette":[{"command":"extension.jsProfileVisualizer.table.clearCodeLenses","when":"jsProfileVisualizer.hasCodeLenses == true"}]}},"bugs":{"url":"https://github.com/microsoft/vscode-js-profile-visualizer/issues"}},{"id":"vscode.builtin-notebook-renderers","identifier":{"value":"vscode.builtin-notebook-renderers","_lower":"vscode.builtin-notebook-renderers"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/notebook-renderers","path":"/snap/code/206/usr/share/code/resources/app/extensions/notebook-renderers","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"builtin-notebook-renderers","displayName":"Builtin Notebook Output Renderers","description":"Provides basic output renderers for notebooks","publisher":"vscode","version":"1.0.0","license":"MIT","icon":"media/icon.png","engines":{"vscode":"^1.57.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"notebookRenderer":[{"id":"vscode.builtin-renderer","entrypoint":"./renderer-out/index.js","displayName":"VS Code Builtin Notebook Output Renderer","requiresMessaging":"never","mimeTypes":["image/gif","image/png","image/jpeg","image/git","image/svg+xml","text/html","application/javascript","application/vnd.code.notebook.error","application/vnd.code.notebook.stdout","application/x.notebook.stdout","application/x.notebook.stream","application/vnd.code.notebook.stderr","application/x.notebook.stderr","text/plain"]}]},"scripts":{"compile":"npx gulp compile-extension:notebook-renderers && npm run build-notebook","watch":"npx gulp compile-watch:notebook-renderers","build-notebook":"node ./esbuild.mjs"},"dependencies":{},"devDependencies":{"@types/jsdom":"^21.1.0","@types/vscode-notebook-renderer":"^1.60.0","jsdom":"^21.1.1"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.npm","identifier":{"value":"vscode.npm","_lower":"vscode.npm"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/npm","path":"/snap/code/206/usr/share/code/resources/app/extensions/npm","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"npm","publisher":"vscode","displayName":"NPM support for VS Code","description":"Extension to add task support for npm scripts.","version":"1.0.1","private":true,"license":"MIT","engines":{"vscode":"0.10.x"},"icon":"images/npm_icon.png","categories":["Other"],"enabledApiProposals":["terminalQuickFixProvider"],"main":"./dist/npmMain","browser":"./dist/browser/npmBrowserMain","activationEvents":["onTaskType:npm","onLanguage:json","workspaceContains:package.json"],"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"Functionality that requires running the 'npm' command is not available in virtual workspaces."},"untrustedWorkspaces":{"supported":"limited","description":"This extension executes tasks, which require trust to run."}},"contributes":{"languages":[{"id":"ignore","extensions":[".npmignore"]},{"id":"properties","extensions":[".npmrc"]}],"views":{"explorer":[{"id":"npm","name":"NPM Scripts","when":"npm:showScriptExplorer","icon":"$(json)","visibility":"hidden","contextualTitle":"NPM Scripts"}]},"commands":[{"command":"npm.runScript","title":"Run","icon":"$(run)"},{"command":"npm.debugScript","title":"Debug","icon":"$(debug)"},{"command":"npm.openScript","title":"Open"},{"command":"npm.runInstall","title":"Run Install"},{"command":"npm.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"npm.runSelectedScript","title":"Run Script"},{"command":"npm.runScriptFromFolder","title":"Run NPM Script in Folder..."},{"command":"npm.packageManager","title":"Get Configured Package Manager"}],"menus":{"commandPalette":[{"command":"npm.refresh","when":"false"},{"command":"npm.runScript","when":"false"},{"command":"npm.debugScript","when":"false"},{"command":"npm.openScript","when":"false"},{"command":"npm.runInstall","when":"false"},{"command":"npm.runSelectedScript","when":"false"},{"command":"npm.runScriptFromFolder","when":"false"},{"command":"npm.packageManager","when":"false"}],"editor/context":[{"command":"npm.runSelectedScript","when":"resourceFilename == 'package.json' && resourceScheme == file","group":"navigation@+1"}],"view/title":[{"command":"npm.refresh","when":"view == npm","group":"navigation"}],"view/item/context":[{"command":"npm.openScript","when":"view == npm && viewItem == packageJSON","group":"navigation@1"},{"command":"npm.runInstall","when":"view == npm && viewItem == packageJSON","group":"navigation@2"},{"command":"npm.openScript","when":"view == npm && viewItem == script","group":"navigation@1"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"navigation@2"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == script","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == script","group":"navigation@3"}],"explorer/context":[{"when":"config.npm.enableRunFromFolder && explorerViewletVisible && explorerResourceIsFolder && resourceScheme == file","command":"npm.runScriptFromFolder","group":"2_workspace"}]},"configuration":{"id":"npm","type":"object","title":"Npm","properties":{"npm.autoDetect":{"type":"string","enum":["off","on"],"default":"on","scope":"resource","description":"Controls whether npm scripts should be automatically detected."},"npm.runSilent":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Run npm commands with the `--silent` option."},"npm.packageManager":{"scope":"resource","type":"string","enum":["auto","npm","yarn","pnpm","bun"],"enumDescriptions":["Auto-detect which package manager to use based on lock files and installed package managers.","Use npm as the package manager.","Use yarn as the package manager.","Use pnpm as the package manager.","Use bun as the package manager."],"default":"auto","description":"The package manager used to install dependencies."},"npm.scriptRunner":{"scope":"resource","type":"string","enum":["auto","npm","yarn","pnpm","bun","node"],"enumDescriptions":["Auto-detect which script runner to use based on lock files and installed package managers.","Use npm as the script runner.","Use yarn as the script runner.","Use pnpm as the script runner.","Use bun as the script runner.","Use Node.js as the script runner."],"default":"auto","description":"The script runner used to run scripts."},"npm.exclude":{"type":["string","array"],"items":{"type":"string"},"description":"Configure glob patterns for folders that should be excluded from automatic script detection.","scope":"resource"},"npm.enableScriptExplorer":{"type":"boolean","default":false,"scope":"resource","deprecationMessage":"The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.","description":"Enable an explorer view for npm scripts when there is no top-level 'package.json' file."},"npm.enableRunFromFolder":{"type":"boolean","default":false,"scope":"resource","description":"Enable running npm scripts contained in a folder from the Explorer context menu."},"npm.scriptExplorerAction":{"type":"string","enum":["open","run"],"markdownDescription":"The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.","scope":"window","default":"open"},"npm.scriptExplorerExclude":{"type":"array","items":{"type":"string"},"markdownDescription":"An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.","scope":"resource","default":[]},"npm.fetchOnlinePackageInfo":{"type":"boolean","description":"Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.","default":true,"scope":"window","tags":["usesOnlineServices"]},"npm.scriptHover":{"type":"boolean","description":"Display hover with 'Run' and 'Debug' commands for scripts.","default":true,"scope":"window"}}},"jsonValidation":[{"fileMatch":"package.json","url":"https://www.schemastore.org/package"},{"fileMatch":"bower.json","url":"https://www.schemastore.org/bower"}],"taskDefinitions":[{"type":"npm","required":["script"],"properties":{"script":{"type":"string","description":"The npm script to customize."},"path":{"type":"string","description":"The path to the folder of the package.json file that provides the script. Can be omitted."}},"when":"shellExecutionSupported"}],"terminalQuickFixes":[{"id":"ms-vscode.npm-command","commandLineMatcher":"npm","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":8,"lineMatcher":"Did you mean (?:this|one of these)\\?((?:\\n.+?npm .+ #.+)+)","offset":2}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.objective-c","identifier":{"value":"vscode.objective-c","_lower":"vscode.objective-c"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/objective-c","path":"/snap/code/206/usr/share/code/resources/app/extensions/objective-c","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"objective-c","displayName":"Objective-C Language Basics","description":"Provides syntax highlighting and bracket matching in Objective-C files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"objective-c","extensions":[".m"],"aliases":["Objective-C"],"configuration":"./language-configuration.json"},{"id":"objective-cpp","extensions":[".mm"],"aliases":["Objective-C++"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"objective-c","scopeName":"source.objc","path":"./syntaxes/objective-c.tmLanguage.json"},{"language":"objective-cpp","scopeName":"source.objcpp","path":"./syntaxes/objective-c++.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.perl","identifier":{"value":"vscode.perl","_lower":"vscode.perl"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/perl","path":"/snap/code/206/usr/share/code/resources/app/extensions/perl","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"perl","displayName":"Perl Language Basics","description":"Provides syntax highlighting and bracket matching in Perl files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/perl.tmbundle Syntaxes/Perl.plist ./syntaxes/perl.tmLanguage.json Syntaxes/Perl%206.tmLanguage ./syntaxes/perl6.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"perl","aliases":["Perl","perl"],"extensions":[".pl",".pm",".pod",".t",".PL",".psgi"],"firstLine":"^#!.*\\bperl\\b","configuration":"./perl.language-configuration.json"},{"id":"raku","aliases":["Raku","Perl6","perl6"],"extensions":[".raku",".rakumod",".rakutest",".rakudoc",".nqp",".p6",".pl6",".pm6"],"firstLine":"(^#!.*\\bperl6\\b)|use\\s+v6|raku|=begin\\spod|my\\sclass","configuration":"./perl6.language-configuration.json"}],"grammars":[{"language":"perl","scopeName":"source.perl","path":"./syntaxes/perl.tmLanguage.json","unbalancedBracketScopes":["variable.other.predefined.perl"]},{"language":"raku","scopeName":"source.perl.6","path":"./syntaxes/perl6.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.php","identifier":{"value":"vscode.php","_lower":"vscode.php"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/php","path":"/snap/code/206/usr/share/code/resources/app/extensions/php","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"php","displayName":"PHP Language Basics","description":"Provides syntax highlighting and bracket matching for PHP files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"php","extensions":[".php",".php4",".php5",".phtml",".ctp"],"aliases":["PHP","php"],"firstLine":"^#!\\s*/.*\\bphp\\b","mimetypes":["application/x-php"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"php","scopeName":"source.php","path":"./syntaxes/php.tmLanguage.json"},{"language":"php","scopeName":"text.html.php","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.php":"php","source.sql":"sql","text.xml":"xml","source.js":"javascript","source.json":"json","source.css":"css"}}],"snippets":[{"language":"php","path":"./snippets/php.code-snippets"}]},"scripts":{"update-grammar":"node ./build/update-grammar.mjs"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.php-language-features","identifier":{"value":"vscode.php-language-features","_lower":"vscode.php-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/php-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/php-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"php-language-features","displayName":"PHP Language Features","description":"Provides rich language support for PHP files.","version":"1.0.0","publisher":"vscode","license":"MIT","icon":"icons/logo.png","engines":{"vscode":"0.10.x"},"activationEvents":["onLanguage:php"],"main":"./dist/phpMain","categories":["Programming Languages"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"The extension requires workspace trust when the `php.validate.executablePath` setting will load a version of PHP in the workspace.","restrictedConfigurations":["php.validate.executablePath"]}},"contributes":{"configuration":{"title":"PHP","type":"object","order":20,"properties":{"php.suggest.basic":{"type":"boolean","default":true,"description":"Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables."},"php.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable built-in PHP validation."},"php.validate.executablePath":{"type":["string","null"],"default":null,"description":"Points to the PHP executable.","scope":"machine-overridable"},"php.validate.run":{"type":"string","enum":["onSave","onType"],"default":"onSave","description":"Whether the linter is run on save or on type."}}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://getcomposer.org/schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.powershell","identifier":{"value":"vscode.powershell","_lower":"vscode.powershell"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/powershell","path":"/snap/code/206/usr/share/code/resources/app/extensions/powershell","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"powershell","displayName":"Powershell Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Powershell files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"powershell","extensions":[".ps1",".psm1",".psd1",".pssc",".psrc"],"aliases":["PowerShell","powershell","ps","ps1","pwsh"],"firstLine":"^#!\\s*/.*\\bpwsh\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"powershell","scopeName":"source.powershell","path":"./syntaxes/powershell.tmLanguage.json"}]},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin PowerShell/EditorSyntax PowerShellSyntax.tmLanguage ./syntaxes/powershell.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.prompt","identifier":{"value":"vscode.prompt","_lower":"vscode.prompt"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/prompt-basics","path":"/snap/code/206/usr/share/code/resources/app/extensions/prompt-basics","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"prompt","displayName":"Prompt Language Basics","description":"Syntax highlighting for Prompt and Instructions documents.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.20.0"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"prompt","aliases":["Prompt","prompt"],"extensions":[".prompt.md","copilot-instructions.md"],"configuration":"./language-configuration.json"},{"id":"instructions","aliases":["Instructions","instructions"],"extensions":[".instructions.md","copilot-instructions.md"],"configuration":"./language-configuration.json"},{"id":"chatmode","aliases":["Chat Mode","chat mode"],"extensions":[".chatmode.md"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"prompt","path":"./syntaxes/prompt.tmLanguage.json","scopeName":"text.html.markdown.prompt","unbalancedBracketScopes":["markup.underline.link.markdown","punctuation.definition.list.begin.markdown"]},{"language":"instructions","path":"./syntaxes/prompt.tmLanguage.json","scopeName":"text.html.markdown.prompt","unbalancedBracketScopes":["markup.underline.link.markdown","punctuation.definition.list.begin.markdown"]},{"language":"chatmode","path":"./syntaxes/prompt.tmLanguage.json","scopeName":"text.html.markdown.prompt","unbalancedBracketScopes":["markup.underline.link.markdown","punctuation.definition.list.begin.markdown"]}],"configurationDefaults":{"[prompt]":{"editor.unicodeHighlight.ambiguousCharacters":false,"editor.unicodeHighlight.invisibleCharacters":false,"diffEditor.ignoreTrimWhitespace":false,"editor.wordWrap":"on","editor.quickSuggestions":{"comments":"off","strings":"off","other":"off"}},"[instructions]":{"editor.unicodeHighlight.ambiguousCharacters":false,"editor.unicodeHighlight.invisibleCharacters":false,"diffEditor.ignoreTrimWhitespace":false,"editor.wordWrap":"on","editor.quickSuggestions":{"comments":"off","strings":"off","other":"off"}},"[chatmode]":{"editor.unicodeHighlight.ambiguousCharacters":false,"editor.unicodeHighlight.invisibleCharacters":false,"diffEditor.ignoreTrimWhitespace":false,"editor.wordWrap":"on","editor.quickSuggestions":{"comments":"off","strings":"off","other":"off"}}}},"scripts":{},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.pug","identifier":{"value":"vscode.pug","_lower":"vscode.pug"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/pug","path":"/snap/code/206/usr/share/code/resources/app/extensions/pug","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"pug","displayName":"Pug Language Basics","description":"Provides syntax highlighting and bracket matching in Pug files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin davidrios/pug-tmbundle Syntaxes/Pug.JSON-tmLanguage ./syntaxes/pug.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"jade","extensions":[".pug",".jade"],"aliases":["Pug","Jade","jade"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"jade","scopeName":"text.pug","path":"./syntaxes/pug.tmLanguage.json"}],"configurationDefaults":{"[jade]":{"diffEditor.ignoreTrimWhitespace":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.python","identifier":{"value":"vscode.python","_lower":"vscode.python"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/python","path":"/snap/code/206/usr/share/code/resources/app/extensions/python","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"python","displayName":"Python Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Python files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"python","extensions":[".py",".rpy",".pyw",".cpy",".gyp",".gypi",".pyi",".ipy",".pyt"],"aliases":["Python","py"],"filenames":["SConstruct","SConscript"],"firstLine":"^#!\\s*/?.*\\bpython[0-9.-]*\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"python","scopeName":"source.python","path":"./syntaxes/MagicPython.tmLanguage.json"},{"scopeName":"source.regexp.python","path":"./syntaxes/MagicRegExp.tmLanguage.json"}],"configurationDefaults":{"[python]":{"diffEditor.ignoreTrimWhitespace":false,"editor.defaultColorDecorators":"never"}}},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin MagicStack/MagicPython grammars/MagicPython.tmLanguage ./syntaxes/MagicPython.tmLanguage.json grammars/MagicRegExp.tmLanguage ./syntaxes/MagicRegExp.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.r","identifier":{"value":"vscode.r","_lower":"vscode.r"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/r","path":"/snap/code/206/usr/share/code/resources/app/extensions/r","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"r","displayName":"R Language Basics","description":"Provides syntax highlighting and bracket matching in R files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin REditorSupport/vscode-R-syntax syntaxes/r.json ./syntaxes/r.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"r","extensions":[".r",".rhistory",".rprofile",".rt"],"aliases":["R","r"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"r","scopeName":"source.r","path":"./syntaxes/r.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.razor","identifier":{"value":"vscode.razor","_lower":"vscode.razor"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/razor","path":"/snap/code/206/usr/share/code/resources/app/extensions/razor","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"razor","displayName":"Razor Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Razor files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammar.mjs"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"razor","extensions":[".cshtml",".razor"],"aliases":["Razor","razor"],"mimetypes":["text/x-cshtml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"razor","scopeName":"text.html.cshtml","path":"./syntaxes/cshtml.tmLanguage.json","embeddedLanguages":{"section.embedded.source.cshtml":"csharp","source.css":"css","source.js":"javascript"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.references-view","identifier":{"value":"vscode.references-view","_lower":"vscode.references-view"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/references-view","path":"/snap/code/206/usr/share/code/resources/app/extensions/references-view","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"references-view","displayName":"Reference Search View","description":"Reference Search results as separate, stable view in the sidebar","icon":"media/icon.png","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.67.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-references-view"},"bugs":{"url":"https://github.com/Microsoft/vscode-references-view/issues"},"activationEvents":["onCommand:references-view.find","onCommand:editor.action.showReferences"],"main":"./dist/extension","browser":"./dist/extension.js","contributes":{"configuration":{"properties":{"references.preferredLocation":{"description":"Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.","type":"string","default":"peek","enum":["peek","view"],"enumDescriptions":["Show references in peek editor.","Show references in separate view."]}}},"viewsContainers":{"activitybar":[{"id":"references-view","icon":"$(references)","title":"References"}]},"views":{"references-view":[{"id":"references-view.tree","name":"Reference Search Results","when":"reference-list.isActive"}]},"commands":[{"command":"references-view.findReferences","title":"Find All References","category":"References"},{"command":"references-view.findImplementations","title":"Find All Implementations","category":"References"},{"command":"references-view.clearHistory","title":"Clear History","category":"References","icon":"$(clear-all)"},{"command":"references-view.clear","title":"Clear","category":"References","icon":"$(clear-all)"},{"command":"references-view.refresh","title":"Refresh","category":"References","icon":"$(refresh)"},{"command":"references-view.pickFromHistory","title":"Show History","category":"References"},{"command":"references-view.removeReferenceItem","title":"Dismiss","icon":"$(close)"},{"command":"references-view.copy","title":"Copy"},{"command":"references-view.copyAll","title":"Copy All"},{"command":"references-view.copyPath","title":"Copy Path"},{"command":"references-view.refind","title":"Rerun","icon":"$(refresh)"},{"command":"references-view.showCallHierarchy","title":"Show Call Hierarchy","category":"Calls"},{"command":"references-view.showOutgoingCalls","title":"Show Outgoing Calls","category":"Calls","icon":"$(call-outgoing)"},{"command":"references-view.showIncomingCalls","title":"Show Incoming Calls","category":"Calls","icon":"$(call-incoming)"},{"command":"references-view.removeCallItem","title":"Dismiss","icon":"$(close)"},{"command":"references-view.next","title":"Go to Next Reference","enablement":"references-view.canNavigate"},{"command":"references-view.prev","title":"Go to Previous Reference","enablement":"references-view.canNavigate"},{"command":"references-view.showTypeHierarchy","title":"Show Type Hierarchy","category":"Types"},{"command":"references-view.showSupertypes","title":"Show Supertypes","category":"Types","icon":"$(type-hierarchy-super)"},{"command":"references-view.showSubtypes","title":"Show Subtypes","category":"Types","icon":"$(type-hierarchy-sub)"},{"command":"references-view.removeTypeItem","title":"Dismiss","icon":"$(close)"}],"menus":{"editor/context":[{"command":"references-view.findReferences","when":"editorHasReferenceProvider","group":"0_navigation@1"},{"command":"references-view.findImplementations","when":"editorHasImplementationProvider","group":"0_navigation@2"},{"command":"references-view.showCallHierarchy","when":"editorHasCallHierarchyProvider","group":"0_navigation@3"},{"command":"references-view.showTypeHierarchy","when":"editorHasTypeHierarchyProvider","group":"0_navigation@4"}],"view/title":[{"command":"references-view.clear","group":"navigation@3","when":"view == references-view.tree && reference-list.hasResult"},{"command":"references-view.clearHistory","group":"navigation@3","when":"view == references-view.tree && reference-list.hasHistory && !reference-list.hasResult"},{"command":"references-view.refresh","group":"navigation@2","when":"view == references-view.tree && reference-list.hasResult"},{"command":"references-view.showOutgoingCalls","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showIncoming"},{"command":"references-view.showIncomingCalls","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showOutgoing"},{"command":"references-view.showSupertypes","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != supertypes"},{"command":"references-view.showSubtypes","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != subtypes"}],"view/item/context":[{"command":"references-view.removeReferenceItem","group":"inline","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.removeCallItem","group":"inline","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.removeTypeItem","group":"inline","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.refind","group":"inline","when":"view == references-view.tree && viewItem == history-item"},{"command":"references-view.removeReferenceItem","group":"1","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.removeCallItem","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.removeTypeItem","group":"1","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.refind","group":"1","when":"view == references-view.tree && viewItem == history-item"},{"command":"references-view.copy","group":"2@1","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.copyPath","group":"2@2","when":"view == references-view.tree && viewItem == file-item"},{"command":"references-view.copyAll","group":"2@3","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.showOutgoingCalls","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.showIncomingCalls","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.showSupertypes","group":"1","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.showSubtypes","group":"1","when":"view == references-view.tree && viewItem == type-item"}],"commandPalette":[{"command":"references-view.removeReferenceItem","when":"never"},{"command":"references-view.removeCallItem","when":"never"},{"command":"references-view.removeTypeItem","when":"never"},{"command":"references-view.copy","when":"never"},{"command":"references-view.copyAll","when":"never"},{"command":"references-view.copyPath","when":"never"},{"command":"references-view.refind","when":"never"},{"command":"references-view.findReferences","when":"editorHasReferenceProvider"},{"command":"references-view.clear","when":"reference-list.hasResult"},{"command":"references-view.clearHistory","when":"reference-list.isActive && !reference-list.hasResult"},{"command":"references-view.refresh","when":"reference-list.hasResult"},{"command":"references-view.pickFromHistory","when":"reference-list.isActive"},{"command":"references-view.next","when":"never"},{"command":"references-view.prev","when":"never"}]},"keybindings":[{"command":"references-view.findReferences","when":"editorHasReferenceProvider","key":"shift+alt+f12"},{"command":"references-view.next","when":"reference-list.hasResult","key":"f4"},{"command":"references-view.prev","when":"reference-list.hasResult","key":"shift+f4"},{"command":"references-view.showCallHierarchy","when":"editorHasCallHierarchyProvider","key":"shift+alt+h"}]}},{"id":"vscode.restructuredtext","identifier":{"value":"vscode.restructuredtext","_lower":"vscode.restructuredtext"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/restructuredtext","path":"/snap/code/206/usr/share/code/resources/app/extensions/restructuredtext","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"restructuredtext","displayName":"reStructuredText Language Basics","description":"Provides syntax highlighting in reStructuredText files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin trond-snekvik/vscode-rst syntaxes/rst.tmLanguage.json ./syntaxes/rst.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"restructuredtext","aliases":["reStructuredText"],"configuration":"./language-configuration.json","extensions":[".rst"]}],"grammars":[{"language":"restructuredtext","scopeName":"source.rst","path":"./syntaxes/rst.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.ruby","identifier":{"value":"vscode.ruby","_lower":"vscode.ruby"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/ruby","path":"/snap/code/206/usr/share/code/resources/app/extensions/ruby","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"ruby","displayName":"Ruby Language Basics","description":"Provides syntax highlighting and bracket matching in Ruby files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin Shopify/ruby-lsp vscode/grammars/ruby.cson.json ./syntaxes/ruby.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"ruby","extensions":[".rb",".rbx",".rjs",".gemspec",".rake",".ru",".erb",".podspec",".rbi"],"filenames":["rakefile","gemfile","guardfile","podfile","capfile","cheffile","hobofile","vagrantfile","appraisals","rantfile","berksfile","berksfile.lock","thorfile","puppetfile","dangerfile","brewfile","fastfile","appfile","deliverfile","matchfile","scanfile","snapfile","gymfile"],"aliases":["Ruby","rb"],"firstLine":"^#!\\s*/.*\\bruby\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"ruby","scopeName":"source.ruby","path":"./syntaxes/ruby.tmLanguage.json"}],"configurationDefaults":{"[ruby]":{"editor.defaultColorDecorators":"never"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.rust","identifier":{"value":"vscode.rust","_lower":"vscode.rust"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/rust","path":"/snap/code/206/usr/share/code/resources/app/extensions/rust","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"rust","displayName":"Rust Language Basics","description":"Provides syntax highlighting and bracket matching in Rust files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammar.mjs"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"rust","extensions":[".rs"],"aliases":["Rust","rust"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"rust","path":"./syntaxes/rust.tmLanguage.json","scopeName":"source.rust"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.scss","identifier":{"value":"vscode.scss","_lower":"vscode.scss"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/scss","path":"/snap/code/206/usr/share/code/resources/app/extensions/scss","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"scss","displayName":"SCSS Language Basics","description":"Provides syntax highlighting, bracket matching and folding in SCSS files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-sass grammars/scss.cson ./syntaxes/scss.tmLanguage.json grammars/sassdoc.cson ./syntaxes/sassdoc.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"scss","aliases":["SCSS","scss"],"extensions":[".scss"],"mimetypes":["text/x-scss","text/scss"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"scss","scopeName":"source.css.scss","path":"./syntaxes/scss.tmLanguage.json"},{"scopeName":"source.sassdoc","path":"./syntaxes/sassdoc.tmLanguage.json"}],"problemMatchers":[{"name":"node-sass","label":"Node Sass Compiler","owner":"node-sass","fileLocation":"absolute","pattern":[{"regexp":"^{$"},{"regexp":"\\s*\"status\":\\s\\d+,"},{"regexp":"\\s*\"file\":\\s\"(.*)\",","file":1},{"regexp":"\\s*\"line\":\\s(\\d+),","line":1},{"regexp":"\\s*\"column\":\\s(\\d+),","column":1},{"regexp":"\\s*\"message\":\\s\"(.*)\",","message":1},{"regexp":"\\s*\"formatted\":\\s(.*)"},{"regexp":"^}$"}]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.search-result","identifier":{"value":"vscode.search-result","_lower":"vscode.search-result"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/search-result","path":"/snap/code/206/usr/share/code/resources/app/extensions/search-result","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"search-result","displayName":"Search Result","description":"Provides syntax highlighting and language features for tabbed search results.","version":"1.0.0","publisher":"vscode","license":"MIT","icon":"images/icon.png","engines":{"vscode":"^1.39.0"},"main":"./dist/extension.js","browser":"./dist/extension.js","activationEvents":["onLanguage:search-result"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["documentFiltersExclusive"],"contributes":{"configurationDefaults":{"[search-result]":{"editor.lineNumbers":"off"}},"languages":[{"id":"search-result","extensions":[".code-search"],"aliases":["Search Result"]}],"grammars":[{"language":"search-result","scopeName":"text.searchResult","path":"./syntaxes/searchResult.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.shaderlab","identifier":{"value":"vscode.shaderlab","_lower":"vscode.shaderlab"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/shaderlab","path":"/snap/code/206/usr/share/code/resources/app/extensions/shaderlab","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"shaderlab","displayName":"Shaderlab Language Basics","description":"Provides syntax highlighting and bracket matching in Shaderlab files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin tgjones/shaders-tmLanguage grammars/shaderlab.json ./syntaxes/shaderlab.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"shaderlab","extensions":[".shader"],"aliases":["ShaderLab","shaderlab"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"shaderlab","path":"./syntaxes/shaderlab.tmLanguage.json","scopeName":"source.shaderlab"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.shellscript","identifier":{"value":"vscode.shellscript","_lower":"vscode.shellscript"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/shellscript","path":"/snap/code/206/usr/share/code/resources/app/extensions/shellscript","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"shellscript","displayName":"Shell Script Language Basics","description":"Provides syntax highlighting and bracket matching in Shell Script files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin jeff-hykin/better-shell-syntax autogenerated/shell.tmLanguage.json ./syntaxes/shell-unix-bash.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"shellscript","aliases":["Shell Script","shellscript","bash","fish","sh","zsh","ksh","csh"],"extensions":[".sh",".bash",".bashrc",".bash_aliases",".bash_profile",".bash_login",".ebuild",".eclass",".profile",".bash_logout",".xprofile",".xsession",".xsessionrc",".Xsession",".zsh",".zshrc",".zprofile",".zlogin",".zlogout",".zshenv",".zsh-theme",".fish",".ksh",".csh",".cshrc",".tcshrc",".yashrc",".yash_profile"],"filenames":["APKBUILD","PKGBUILD",".envrc",".hushlogin","zshrc","zshenv","zlogin","zprofile","zlogout","bashrc_Apple_Terminal","zshrc_Apple_Terminal"],"filenamePatterns":[".env.*"],"firstLine":"^#!.*\\b(bash|fish|zsh|sh|ksh|dtksh|pdksh|mksh|ash|dash|yash|sh|csh|jcsh|tcsh|itcsh).*|^#\\s*-\\*-[^*]*mode:\\s*shell-script[^*]*-\\*-","configuration":"./language-configuration.json","mimetypes":["text/x-shellscript"]}],"grammars":[{"language":"shellscript","scopeName":"source.shell","path":"./syntaxes/shell-unix-bash.tmLanguage.json","balancedBracketScopes":["*"],"unbalancedBracketScopes":["meta.scope.case-pattern.shell"]}],"configurationDefaults":{"[shellscript]":{"files.eol":"\n","editor.defaultColorDecorators":"never"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.simple-browser","identifier":{"value":"vscode.simple-browser","_lower":"vscode.simple-browser"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/simple-browser","path":"/snap/code/206/usr/share/code/resources/app/extensions/simple-browser","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"simple-browser","displayName":"Simple Browser","description":"A very basic built-in webview for displaying web content.","enabledApiProposals":["externalUriOpener"],"version":"1.0.0","icon":"media/icon.png","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.70.0"},"main":"./dist/extension","browser":"./dist/browser/extension","categories":["Other"],"extensionKind":["ui","workspace"],"activationEvents":["onCommand:simpleBrowser.api.open","onOpenExternalUri:http","onOpenExternalUri:https","onWebviewPanel:simpleBrowser.view"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"simpleBrowser.show","title":"Show","category":"Simple Browser"}],"configuration":[{"title":"Simple Browser","properties":{"simpleBrowser.focusLockIndicator.enabled":{"type":"boolean","default":true,"title":"Focus Lock Indicator Enabled","description":"Enable/disable the floating indicator that shows when focused in the simple browser."}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.sql","identifier":{"value":"vscode.sql","_lower":"vscode.sql"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/sql","path":"/snap/code/206/usr/share/code/resources/app/extensions/sql","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"sql","displayName":"SQL Language Basics","description":"Provides syntax highlighting and bracket matching in SQL files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammar.mjs"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"sql","extensions":[".sql",".dsql"],"aliases":["MS SQL","T-SQL"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"sql","scopeName":"source.sql","path":"./syntaxes/sql.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.swift","identifier":{"value":"vscode.swift","_lower":"vscode.swift"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/swift","path":"/snap/code/206/usr/share/code/resources/app/extensions/swift","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"swift","displayName":"Swift Language Basics","description":"Provides snippets, syntax highlighting and bracket matching in Swift files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin jtbandes/swift-tmlanguage Swift.tmLanguage.json ./syntaxes/swift.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"swift","aliases":["Swift","swift"],"extensions":[".swift"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"swift","scopeName":"source.swift","path":"./syntaxes/swift.tmLanguage.json"}],"snippets":[{"language":"swift","path":"./snippets/swift.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.terminal-suggest","identifier":{"value":"vscode.terminal-suggest","_lower":"vscode.terminal-suggest"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/terminal-suggest","path":"/snap/code/206/usr/share/code/resources/app/extensions/terminal-suggest","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"terminal-suggest","publisher":"vscode","displayName":"Terminal Suggest for VS Code","description":"Extension to add terminal completions for zsh, bash, and fish terminals.","version":"1.0.1","private":true,"license":"MIT","icon":"./src/media/icon.png","engines":{"vscode":"^1.95.0"},"categories":["Other"],"enabledApiProposals":["terminalCompletionProvider","terminalShellEnv"],"contributes":{"commands":[{"command":"terminal.integrated.suggest.clearCachedGlobals","category":"Terminal","title":"Clear Suggest Cached Globals"}]},"main":"./dist/terminalSuggestMain","activationEvents":["onTerminalShellIntegration:*"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-abyss","identifier":{"value":"vscode.theme-abyss","_lower":"vscode.theme-abyss"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-abyss","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-abyss","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-abyss","displayName":"Abyss Theme","description":"Abyss theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Abyss","label":"Abyss","uiTheme":"vs-dark","path":"./themes/abyss-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-defaults","identifier":{"value":"vscode.theme-defaults","_lower":"vscode.theme-defaults"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-defaults","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-defaults","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-defaults","displayName":"Default Themes","description":"The default Visual Studio light and dark themes","categories":["Themes"],"version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Default Dark+","label":"Dark+","uiTheme":"vs-dark","path":"./themes/dark_plus.json"},{"id":"Default Dark Modern","label":"Dark Modern","uiTheme":"vs-dark","path":"./themes/dark_modern.json"},{"id":"Default Light+","label":"Light+","uiTheme":"vs","path":"./themes/light_plus.json"},{"id":"Default Light Modern","label":"Light Modern","uiTheme":"vs","path":"./themes/light_modern.json"},{"id":"Visual Studio Dark","label":"Dark (Visual Studio)","uiTheme":"vs-dark","path":"./themes/dark_vs.json"},{"id":"Visual Studio Light","label":"Light (Visual Studio)","uiTheme":"vs","path":"./themes/light_vs.json"},{"id":"Default High Contrast","label":"Dark High Contrast","uiTheme":"hc-black","path":"./themes/hc_black.json"},{"id":"Default High Contrast Light","label":"Light High Contrast","uiTheme":"hc-light","path":"./themes/hc_light.json"}],"iconThemes":[{"id":"vs-minimal","label":"Minimal (Visual Studio Code)","path":"./fileicons/vs_minimal-icon-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-kimbie-dark","identifier":{"value":"vscode.theme-kimbie-dark","_lower":"vscode.theme-kimbie-dark"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-kimbie-dark","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-kimbie-dark","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-kimbie-dark","displayName":"Kimbie Dark Theme","description":"Kimbie dark theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Kimbie Dark","label":"Kimbie Dark","uiTheme":"vs-dark","path":"./themes/kimbie-dark-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-monokai","identifier":{"value":"vscode.theme-monokai","_lower":"vscode.theme-monokai"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-monokai","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-monokai","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-monokai","displayName":"Monokai Theme","description":"Monokai theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Monokai","label":"Monokai","uiTheme":"vs-dark","path":"./themes/monokai-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-monokai-dimmed","identifier":{"value":"vscode.theme-monokai-dimmed","_lower":"vscode.theme-monokai-dimmed"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-monokai-dimmed","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-monokai-dimmed","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-monokai-dimmed","displayName":"Monokai Dimmed Theme","description":"Monokai dimmed theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Monokai Dimmed","label":"Monokai Dimmed","uiTheme":"vs-dark","path":"./themes/dimmed-monokai-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-quietlight","identifier":{"value":"vscode.theme-quietlight","_lower":"vscode.theme-quietlight"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-quietlight","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-quietlight","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-quietlight","displayName":"Quiet Light Theme","description":"Quiet light theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Quiet Light","label":"Quiet Light","uiTheme":"vs","path":"./themes/quietlight-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-red","identifier":{"value":"vscode.theme-red","_lower":"vscode.theme-red"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-red","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-red","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-red","displayName":"Red Theme","description":"Red theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Red","label":"Red","uiTheme":"vs-dark","path":"./themes/Red-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.vscode-theme-seti","identifier":{"value":"vscode.vscode-theme-seti","_lower":"vscode.vscode-theme-seti"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-seti","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-seti","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"vscode-theme-seti","private":true,"version":"1.0.0","displayName":"Seti File Icon Theme","description":"A file icon theme made out of the Seti UI file icons","publisher":"vscode","license":"MIT","icon":"icons/seti-circular-128x128.png","scripts":{"update":"node ./build/update-icon-theme.js"},"engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"iconThemes":[{"id":"vs-seti","label":"Seti (Visual Studio Code)","path":"./icons/vs-seti-icon-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-solarized-dark","identifier":{"value":"vscode.theme-solarized-dark","_lower":"vscode.theme-solarized-dark"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-solarized-dark","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-solarized-dark","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-solarized-dark","displayName":"Solarized Dark Theme","description":"Solarized dark theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Solarized Dark","label":"Solarized Dark","uiTheme":"vs-dark","path":"./themes/solarized-dark-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-solarized-light","identifier":{"value":"vscode.theme-solarized-light","_lower":"vscode.theme-solarized-light"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-solarized-light","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-solarized-light","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-solarized-light","displayName":"Solarized Light Theme","description":"Solarized light theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Solarized Light","label":"Solarized Light","uiTheme":"vs","path":"./themes/solarized-light-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.theme-tomorrow-night-blue","identifier":{"value":"vscode.theme-tomorrow-night-blue","_lower":"vscode.theme-tomorrow-night-blue"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/theme-tomorrow-night-blue","path":"/snap/code/206/usr/share/code/resources/app/extensions/theme-tomorrow-night-blue","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"theme-tomorrow-night-blue","displayName":"Tomorrow Night Blue Theme","description":"Tomorrow night blue theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Themes"],"contributes":{"themes":[{"id":"Tomorrow Night Blue","label":"Tomorrow Night Blue","uiTheme":"vs-dark","path":"./themes/tomorrow-night-blue-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.tunnel-forwarding","identifier":{"value":"vscode.tunnel-forwarding","_lower":"vscode.tunnel-forwarding"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/tunnel-forwarding","path":"/snap/code/206/usr/share/code/resources/app/extensions/tunnel-forwarding","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"tunnel-forwarding","displayName":"Local Tunnel Port Forwarding","description":"Allows forwarding local ports to be accessible over the internet.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.82.0"},"icon":"media/icon.png","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["resolvers","tunnelFactory"],"activationEvents":["onTunnel"],"contributes":{"commands":[{"category":"Port Forwarding","command":"tunnel-forwarding.showLog","title":"Show Log","enablement":"tunnelForwardingHasLog"},{"category":"Port Forwarding","command":"tunnel-forwarding.restart","title":"Restart Forwarding System","enablement":"tunnelForwardingIsRunning"}]},"main":"./dist/extension","prettier":{"printWidth":100,"trailingComma":"all","singleQuote":true,"arrowParens":"avoid"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.typescript","identifier":{"value":"vscode.typescript","_lower":"vscode.typescript"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/typescript-basics","path":"/snap/code/206/usr/share/code/resources/app/extensions/typescript-basics","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"typescript","description":"Provides snippets, syntax highlighting, bracket matching and folding in TypeScript files.","displayName":"TypeScript Language Basics","version":"1.0.0","author":"vscode","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.mjs"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"typescript","aliases":["TypeScript","ts","typescript"],"extensions":[".ts",".cts",".mts"],"configuration":"./language-configuration.json"},{"id":"typescriptreact","aliases":["TypeScript JSX","TypeScript React","tsx"],"extensions":[".tsx"],"configuration":"./language-configuration.json"},{"id":"jsonc","filenames":["tsconfig.json","jsconfig.json"],"filenamePatterns":["tsconfig.*.json","jsconfig.*.json","tsconfig-*.json","jsconfig-*.json"]},{"id":"json","extensions":[".tsbuildinfo"]}],"grammars":[{"language":"typescript","scopeName":"source.ts","path":"./syntaxes/TypeScript.tmLanguage.json","unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","meta.brace.angle","punctuation.definition.tag","keyword.operator.assignment.compound.bitwise.ts"],"tokenTypes":{"punctuation.definition.template-expression":"other","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"typescriptreact","scopeName":"source.tsx","path":"./syntaxes/TypeScriptReact.tmLanguage.json","unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","punctuation.definition.tag","keyword.operator.assignment.compound.bitwise.ts"],"embeddedLanguages":{"meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","meta.tag.attributes.tsx":"typescriptreact","meta.embedded.expression.tsx":"typescriptreact"},"tokenTypes":{"punctuation.definition.template-expression":"other","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"scopeName":"documentation.injection.ts","path":"./syntaxes/jsdoc.ts.injection.tmLanguage.json","injectTo":["source.ts","source.tsx"]},{"scopeName":"documentation.injection.js.jsx","path":"./syntaxes/jsdoc.js.injection.tmLanguage.json","injectTo":["source.js","source.js.jsx"]}],"semanticTokenScopes":[{"language":"typescript","scopes":{"property":["variable.other.property.ts"],"property.readonly":["variable.other.constant.property.ts"],"variable":["variable.other.readwrite.ts"],"variable.readonly":["variable.other.constant.object.ts"],"function":["entity.name.function.ts"],"namespace":["entity.name.type.module.ts"],"variable.defaultLibrary":["support.variable.ts"],"function.defaultLibrary":["support.function.ts"]}},{"language":"typescriptreact","scopes":{"property":["variable.other.property.tsx"],"property.readonly":["variable.other.constant.property.tsx"],"variable":["variable.other.readwrite.tsx"],"variable.readonly":["variable.other.constant.object.tsx"],"function":["entity.name.function.tsx"],"namespace":["entity.name.type.module.tsx"],"variable.defaultLibrary":["support.variable.tsx"],"function.defaultLibrary":["support.function.tsx"]}}],"snippets":[{"language":"typescript","path":"./snippets/typescript.code-snippets"},{"language":"typescriptreact","path":"./snippets/typescript.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.typescript-language-features","identifier":{"value":"vscode.typescript-language-features","_lower":"vscode.typescript-language-features"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/typescript-language-features","path":"/snap/code/206/usr/share/code/resources/app/extensions/typescript-language-features","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"typescript-language-features","description":"Provides rich language support for JavaScript and TypeScript.","displayName":"TypeScript and JavaScript Language Features","version":"1.0.0","author":"vscode","publisher":"vscode","license":"MIT","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","enabledApiProposals":["workspaceTrust","multiDocumentHighlightProvider","codeActionAI","codeActionRanges","editorHoverVerbosityLevel"],"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, resolving and finding references across files is not supported."},"untrustedWorkspaces":{"supported":"limited","description":"The extension requires workspace trust when the workspace version is used because it executes code specified by the workspace.","restrictedConfigurations":["typescript.tsdk","typescript.tsserver.pluginPaths","typescript.npm","typescript.tsserver.nodePath"]}},"engines":{"vscode":"^1.30.0"},"icon":"media/icon.png","categories":["Programming Languages"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:jsx-tags","onCommand:typescript.tsserverRequest","onCommand:_typescript.configurePlugin","onCommand:_typescript.learnMoreAboutRefactorings","onCommand:typescript.fileReferences","onTaskType:typescript","onLanguage:jsonc","onWalkthrough:nodejsWelcome"],"main":"./dist/extension","browser":"./dist/browser/extension","contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"},{"fileMatch":"tsconfig.json","url":"https://www.schemastore.org/tsconfig"},{"fileMatch":"tsconfig.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig.*.json","url":"https://www.schemastore.org/tsconfig"},{"fileMatch":"tsconfig-*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig-*.json","url":"https://www.schemastore.org/tsconfig"},{"fileMatch":"tsconfig.*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"typings.json","url":"https://www.schemastore.org/typings"},{"fileMatch":".bowerrc","url":"https://www.schemastore.org/bowerrc"},{"fileMatch":".babelrc","url":"https://www.schemastore.org/babelrc"},{"fileMatch":".babelrc.json","url":"https://www.schemastore.org/babelrc"},{"fileMatch":"babel.config.json","url":"https://www.schemastore.org/babelrc"},{"fileMatch":"jsconfig.json","url":"https://www.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"https://www.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.*.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":".swcrc","url":"https://swc.rs/schema.json"},{"fileMatch":"typedoc.json","url":"https://typedoc.org/schema.json"}],"configuration":[{"type":"object","order":20,"properties":{"typescript.tsdk":{"type":"string","markdownDescription":"Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.","scope":"window"},"typescript.disableAutomaticTypeAcquisition":{"type":"boolean","default":false,"markdownDescription":"Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.","scope":"window","tags":["usesOnlineServices"]},"typescript.enablePromptUseWorkspaceTsdk":{"type":"boolean","default":false,"description":"Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.","scope":"window"},"javascript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens in JavaScript files.","scope":"window"},"javascript.referencesCodeLens.showOnAllFunctions":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens on all functions in JavaScript files.","scope":"window"},"typescript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens in TypeScript files.","scope":"window"},"typescript.referencesCodeLens.showOnAllFunctions":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens on all functions in TypeScript files.","scope":"window"},"typescript.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.","scope":"window"},"typescript.experimental.useTsgo":{"type":"boolean","default":false,"markdownDescription":"Disables TypeScript and JavaScript language features to allow usage of the TypeScript Go experimental extension. Requires TypeScript Go to be installed and configured. Requires reloading extensions after changing this setting.","scope":"window","tags":["experimental"]},"typescript.implementationsCodeLens.showOnInterfaceMethods":{"type":"boolean","default":false,"description":"Enable/disable implementations CodeLens on interface methods.","scope":"window"},"typescript.reportStyleChecksAsWarnings":{"type":"boolean","default":true,"description":"Report style checks as warnings.","scope":"window"},"typescript.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable TypeScript validation.","scope":"window"},"javascript.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable JavaScript validation.","scope":"window"},"js/ts.implicitProjectConfig.module":{"type":"string","markdownDescription":"Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.","default":"ESNext","enum":["CommonJS","AMD","System","UMD","ES6","ES2015","ES2020","ESNext","None","ES2022","Node12","NodeNext"],"scope":"window"},"js/ts.implicitProjectConfig.target":{"type":"string","default":"ES2024","markdownDescription":"Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.","enum":["ES3","ES5","ES6","ES2015","ES2016","ES2017","ES2018","ES2019","ES2020","ES2021","ES2022","ES2023","ES2024","ESNext"],"scope":"window"},"js/ts.implicitProjectConfig.checkJs":{"type":"boolean","default":false,"markdownDescription":"Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.","scope":"window"},"js/ts.implicitProjectConfig.experimentalDecorators":{"type":"boolean","default":false,"markdownDescription":"Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.","scope":"window"},"js/ts.implicitProjectConfig.strictNullChecks":{"type":"boolean","default":true,"markdownDescription":"Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.","scope":"window"},"js/ts.implicitProjectConfig.strictFunctionTypes":{"type":"boolean","default":true,"markdownDescription":"Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.","scope":"window"},"js/ts.implicitProjectConfig.strict":{"type":"boolean","default":true,"markdownDescription":"Enable/disable [strict mode](https://www.typescriptlang.org/tsconfig#strict) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.","scope":"window"},"typescript.tsc.autoDetect":{"type":"string","default":"on","enum":["on","off","build","watch"],"markdownEnumDescriptions":["Create both build and watch tasks.","Disable this feature.","Only create single run compile tasks.","Only create compile and watch tasks."],"description":"Controls auto detection of tsc tasks.","scope":"window"},"typescript.locale":{"type":"string","default":"auto","enum":["auto","de","es","en","fr","it","ja","ko","ru","zh-CN","zh-TW"],"enumDescriptions":["Use VS Code's configured display language.","Deutsch","español","English","français","italiano","日本語","한국어","русский","中文(简体)","中文(繁體)"],"markdownDescription":"Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.","scope":"window"},"javascript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Enable/disable suggestion diagnostics for JavaScript files in the editor.","scope":"resource"},"typescript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Enable/disable suggestion diagnostics for TypeScript files in the editor.","scope":"resource"},"typescript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Prompt on each rename.","Always update paths automatically.","Never rename paths and don't prompt."],"default":"prompt","description":"Enable/disable automatic updating of import paths when you rename or move a file in VS Code.","scope":"resource"},"javascript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Prompt on each rename.","Always update paths automatically.","Never rename paths and don't prompt."],"default":"prompt","description":"Enable/disable automatic updating of import paths when you rename or move a file in VS Code.","scope":"resource"},"typescript.autoClosingTags":{"type":"boolean","default":true,"description":"Enable/disable automatic closing of JSX tags.","scope":"language-overridable"},"javascript.autoClosingTags":{"type":"boolean","default":true,"description":"Enable/disable automatic closing of JSX tags.","scope":"language-overridable"},"typescript.workspaceSymbols.scope":{"type":"string","enum":["allOpenProjects","currentProject"],"enumDescriptions":["Search all open JavaScript or TypeScript projects for symbols.","Only search for symbols in the current JavaScript or TypeScript project."],"default":"allOpenProjects","markdownDescription":"Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).","scope":"window"},"typescript.preferGoToSourceDefinition":{"type":"boolean","default":false,"description":"Makes `Go to Definition` avoid type declaration files when possible by triggering `Go to Source Definition` instead. This allows `Go to Source Definition` to be triggered with the mouse gesture.","scope":"window"},"javascript.preferGoToSourceDefinition":{"type":"boolean","default":false,"description":"Makes `Go to Definition` avoid type declaration files when possible by triggering `Go to Source Definition` instead. This allows `Go to Source Definition` to be triggered with the mouse gesture.","scope":"window"},"typescript.workspaceSymbols.excludeLibrarySymbols":{"type":"boolean","default":true,"markdownDescription":"Exclude symbols that come from library files in `Go to Symbol in Workspace` results. Requires using TypeScript 5.3+ in the workspace.","scope":"window"},"typescript.tsserver.enableRegionDiagnostics":{"type":"boolean","default":true,"description":"Enables region-based diagnostics in TypeScript. Requires using TypeScript 5.6+ in the workspace.","scope":"window"},"javascript.updateImportsOnPaste.enabled":{"scope":"window","type":"boolean","default":true,"markdownDescription":"Automatically update imports when pasting code. Requires TypeScript 5.6+."},"typescript.updateImportsOnPaste.enabled":{"scope":"window","type":"boolean","default":true,"markdownDescription":"Automatically update imports when pasting code. Requires TypeScript 5.6+."},"js/ts.hover.maximumLength":{"type":"number","default":500,"description":"The maximum number of characters in a hover. If the hover is longer than this, it will be truncated. Requires TypeScript 5.9+.","scope":"resource"}}},{"type":"object","title":"Suggestions","order":21,"properties":{"javascript.suggest.enabled":{"type":"boolean","default":true,"description":"Enable/disable autocomplete suggestions.","scope":"language-overridable"},"typescript.suggest.enabled":{"type":"boolean","default":true,"description":"Enable/disable autocomplete suggestions.","scope":"language-overridable"},"javascript.suggest.autoImports":{"type":"boolean","default":true,"description":"Enable/disable auto import suggestions.","scope":"resource"},"typescript.suggest.autoImports":{"type":"boolean","default":true,"description":"Enable/disable auto import suggestions.","scope":"resource"},"javascript.suggest.names":{"type":"boolean","default":true,"markdownDescription":"Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.","scope":"resource"},"javascript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature.","scope":"resource"},"typescript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature.","scope":"resource"},"javascript.suggest.paths":{"type":"boolean","default":true,"description":"Enable/disable suggestions for paths in import statements and require calls.","scope":"resource"},"typescript.suggest.paths":{"type":"boolean","default":true,"description":"Enable/disable suggestions for paths in import statements and require calls.","scope":"resource"},"javascript.suggest.completeJSDocs":{"type":"boolean","default":true,"description":"Enable/disable suggestion to complete JSDoc comments.","scope":"language-overridable"},"typescript.suggest.completeJSDocs":{"type":"boolean","default":true,"description":"Enable/disable suggestion to complete JSDoc comments.","scope":"language-overridable"},"javascript.suggest.jsdoc.generateReturns":{"type":"boolean","default":true,"markdownDescription":"Enable/disable generating `@returns` annotations for JSDoc templates.","scope":"language-overridable"},"typescript.suggest.jsdoc.generateReturns":{"type":"boolean","default":true,"markdownDescription":"Enable/disable generating `@returns` annotations for JSDoc templates.","scope":"language-overridable"},"javascript.suggest.includeAutomaticOptionalChainCompletions":{"type":"boolean","default":true,"description":"Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.","scope":"resource"},"typescript.suggest.includeAutomaticOptionalChainCompletions":{"type":"boolean","default":true,"description":"Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.","scope":"resource"},"javascript.suggest.includeCompletionsForImportStatements":{"type":"boolean","default":true,"description":"Enable/disable auto-import-style completions on partially-typed import statements.","scope":"resource"},"typescript.suggest.includeCompletionsForImportStatements":{"type":"boolean","default":true,"description":"Enable/disable auto-import-style completions on partially-typed import statements.","scope":"resource"},"javascript.suggest.classMemberSnippets.enabled":{"type":"boolean","default":true,"description":"Enable/disable snippet completions for class members.","scope":"resource"},"typescript.suggest.classMemberSnippets.enabled":{"type":"boolean","default":true,"description":"Enable/disable snippet completions for class members.","scope":"resource"},"typescript.suggest.objectLiteralMethodSnippets.enabled":{"type":"boolean","default":true,"description":"Enable/disable snippet completions for methods in object literals.","scope":"resource"}}},{"type":"object","title":"Preferences","order":21,"properties":{"javascript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Preferred quote style to use for Quick Fixes.","markdownEnumDescriptions":["Infer quote type from existing code","Always use single quotes: `'`","Always use double quotes: `\"`"],"scope":"language-overridable"},"typescript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Preferred quote style to use for Quick Fixes.","markdownEnumDescriptions":["Infer quote type from existing code","Always use single quotes: `'`","Always use double quotes: `\"`"],"scope":"language-overridable"},"javascript.preferences.importModuleSpecifier":{"type":"string","enum":["shortest","relative","non-relative","project-relative"],"markdownEnumDescriptions":["Prefers a non-relative import only if one is available that has fewer path segments than a relative import.","Prefers a relative path to the imported file location.","Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.","Prefers a non-relative import only if the relative import path would leave the package or project directory."],"default":"shortest","description":"Preferred path style for auto imports.","scope":"language-overridable"},"typescript.preferences.importModuleSpecifier":{"type":"string","enum":["shortest","relative","non-relative","project-relative"],"markdownEnumDescriptions":["Prefers a non-relative import only if one is available that has fewer path segments than a relative import.","Prefers a relative path to the imported file location.","Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.","Prefers a non-relative import only if the relative import path would leave the package or project directory."],"default":"shortest","description":"Preferred path style for auto imports.","scope":"language-overridable"},"javascript.preferences.importModuleSpecifierEnding":{"type":"string","enum":["auto","minimal","index","js"],"enumItemLabels":[null,null,null,".js / .ts"],"markdownEnumDescriptions":["Use project settings to select a default.","Shorten `./component/index.js` to `./component`.","Shorten `./component/index.js` to `./component/index`.","Do not shorten path endings; include the `.js` or `.ts` extension."],"default":"auto","description":"Preferred path ending for auto imports.","scope":"language-overridable"},"typescript.preferences.importModuleSpecifierEnding":{"type":"string","enum":["auto","minimal","index","js"],"enumItemLabels":[null,null,null,".js / .ts"],"markdownEnumDescriptions":["Use project settings to select a default.","Shorten `./component/index.js` to `./component`.","Shorten `./component/index.js` to `./component/index`.","Do not shorten path endings; include the `.js` or `.ts` extension."],"default":"auto","description":"Preferred path ending for auto imports.","scope":"language-overridable"},"javascript.preferences.jsxAttributeCompletionStyle":{"type":"string","enum":["auto","braces","none"],"markdownEnumDescriptions":["Insert `={}` or `=\"\"` after attribute names based on the prop type. See `#javascript.preferences.quoteStyle#` to control the type of quotes used for string attributes.","Insert `={}` after attribute names.","Only insert attribute names."],"default":"auto","description":"Preferred style for JSX attribute completions.","scope":"language-overridable"},"typescript.preferences.jsxAttributeCompletionStyle":{"type":"string","enum":["auto","braces","none"],"markdownEnumDescriptions":["Insert `={}` or `=\"\"` after attribute names based on the prop type. See `#typescript.preferences.quoteStyle#` to control the type of quotes used for string attributes.","Insert `={}` after attribute names.","Only insert attribute names."],"default":"auto","description":"Preferred style for JSX attribute completions.","scope":"language-overridable"},"typescript.preferences.includePackageJsonAutoImports":{"type":"string","enum":["auto","on","off"],"enumDescriptions":["Search dependencies based on estimated performance impact.","Always search dependencies.","Never search dependencies."],"default":"auto","markdownDescription":"Enable/disable searching `package.json` dependencies for available auto imports.","scope":"window"},"javascript.preferences.autoImportFileExcludePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics.","scope":"resource"},"typescript.preferences.autoImportFileExcludePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics.","scope":"resource"},"javascript.preferences.autoImportSpecifierExcludeRegexes":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify regular expressions to exclude auto imports with matching import specifiers. Examples:\n\n- `^node:`\n- `lib/internal` (slashes don't need to be escaped...)\n- `/lib\\/internal/i` (...unless including surrounding slashes for `i` or `u` flags)\n- `^lodash$` (only allow subpath imports from lodash)","scope":"resource"},"typescript.preferences.autoImportSpecifierExcludeRegexes":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify regular expressions to exclude auto imports with matching import specifiers. Examples:\n\n- `^node:`\n- `lib/internal` (slashes don't need to be escaped...)\n- `/lib\\/internal/i` (...unless including surrounding slashes for `i` or `u` flags)\n- `^lodash$` (only allow subpath imports from lodash)","scope":"resource"},"typescript.preferences.preferTypeOnlyAutoImports":{"type":"boolean","default":false,"markdownDescription":"Include the `type` keyword in auto-imports whenever possible. Requires using TypeScript 5.3+ in the workspace.","scope":"resource"},"javascript.preferences.useAliasesForRenames":{"type":"boolean","default":true,"description":"Enable/disable introducing aliases for object shorthand properties during renames.","scope":"language-overridable"},"typescript.preferences.useAliasesForRenames":{"type":"boolean","default":true,"description":"Enable/disable introducing aliases for object shorthand properties during renames.","scope":"language-overridable"},"javascript.preferences.renameMatchingJsxTags":{"type":"boolean","default":true,"description":"When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.","scope":"language-overridable"},"typescript.preferences.renameMatchingJsxTags":{"type":"boolean","default":true,"description":"When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.","scope":"language-overridable"},"javascript.preferences.organizeImports":{"type":"object","markdownDescription":"Advanced preferences that control how imports are ordered.","properties":{"caseSensitivity":{"type":"string","markdownDescription":"Specifies how imports should be sorted with regards to case-sensitivity. If `auto` or unspecified, we will detect the case-sensitivity per file","enum":["auto","caseInsensitive","caseSensitive"],"markdownEnumDescriptions":["Detect case-sensitivity for import sorting.","%typescript.preferences.organizeImports.caseSensitivity.insensitive","Sort imports case-sensitively."],"default":"auto"},"typeOrder":{"type":"string","markdownDescription":"Specify how type-only named imports should be sorted.","enum":["auto","last","inline","first"],"default":"auto","markdownEnumDescriptions":["Detect where type-only named imports should be sorted.","Type only named imports are sorted to the end of the import list. E.g. `import { B, Z, type A, type Y } from 'module';`","Named imports are sorted by name only. E.g. `import { type A, B, type Y, Z } from 'module';`","Type only named imports are sorted to the beginning of the import list. E.g. `import { type A, type Y, B, Z } from 'module';`"]},"unicodeCollation":{"type":"string","markdownDescription":"Specify whether to sort imports using Unicode or Ordinal collation.","enum":["ordinal","unicode"],"markdownEnumDescriptions":["Sort imports using the numeric value of each code point.","Sort imports using the Unicode code collation."],"default":"ordinal"},"locale":{"type":"string","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Overrides the locale used for collation. Specify `auto` to use the UI locale."},"numericCollation":{"type":"boolean","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Sort numeric strings by integer value."},"accentCollation":{"type":"boolean","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Compare characters with diacritical marks as unequal to base character."},"caseFirst":{"type":"string","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`, and `organizeImports.caseSensitivity` is not `caseInsensitive`. Indicates whether upper-case will sort before lower-case.","enum":["default","upper","lower"],"markdownEnumDescriptions":["Default order given by `locale`.","Upper-case comes before lower-case. E.g. ` A, a, B, b`.","Lower-case comes before upper-case. E.g.` a, A, z, Z`."],"default":"default"}}},"typescript.preferences.organizeImports":{"type":"object","markdownDescription":"Advanced preferences that control how imports are ordered.","properties":{"caseSensitivity":{"type":"string","markdownDescription":"Specifies how imports should be sorted with regards to case-sensitivity. If `auto` or unspecified, we will detect the case-sensitivity per file","enum":["auto","caseInsensitive","caseSensitive"],"markdownEnumDescriptions":["Detect case-sensitivity for import sorting.","%typescript.preferences.organizeImports.caseSensitivity.insensitive","Sort imports case-sensitively."],"default":"auto"},"typeOrder":{"type":"string","markdownDescription":"Specify how type-only named imports should be sorted.","enum":["auto","last","inline","first"],"default":"auto","markdownEnumDescriptions":["Detect where type-only named imports should be sorted.","Type only named imports are sorted to the end of the import list. E.g. `import { B, Z, type A, type Y } from 'module';`","Named imports are sorted by name only. E.g. `import { type A, B, type Y, Z } from 'module';`","Type only named imports are sorted to the beginning of the import list. E.g. `import { type A, type Y, B, Z } from 'module';`"]},"unicodeCollation":{"type":"string","markdownDescription":"Specify whether to sort imports using Unicode or Ordinal collation.","enum":["ordinal","unicode"],"markdownEnumDescriptions":["Sort imports using the numeric value of each code point.","Sort imports using the Unicode code collation."],"default":"ordinal"},"locale":{"type":"string","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Overrides the locale used for collation. Specify `auto` to use the UI locale."},"numericCollation":{"type":"boolean","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Sort numeric strings by integer value."},"accentCollation":{"type":"boolean","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`. Compare characters with diacritical marks as unequal to base character."},"caseFirst":{"type":"string","markdownDescription":"Requires `organizeImports.unicodeCollation: 'unicode'`, and `organizeImports.caseSensitivity` is not `caseInsensitive`. Indicates whether upper-case will sort before lower-case.","enum":["default","upper","lower"],"markdownEnumDescriptions":["Default order given by `locale`.","Upper-case comes before lower-case. E.g. ` A, a, B, b`.","Lower-case comes before upper-case. E.g.` a, A, z, Z`."],"default":"default"}}}}},{"type":"object","title":"Formatting","order":23,"properties":{"javascript.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default JavaScript formatter.","scope":"window"},"typescript.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default TypeScript formatter.","scope":"window"},"javascript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Defines space handling after a comma delimiter.","scope":"resource"},"typescript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Defines space handling after a comma delimiter.","scope":"resource"},"javascript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Defines space handling after the constructor keyword.","scope":"resource"},"typescript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Defines space handling after the constructor keyword.","scope":"resource"},"javascript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":"Defines space handling after a semicolon in a for statement.","scope":"resource"},"typescript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":"Defines space handling after a semicolon in a for statement.","scope":"resource"},"javascript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Defines space handling after a binary operator.","scope":"resource"},"typescript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Defines space handling after a binary operator.","scope":"resource"},"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Defines space handling after keywords in a control flow statement.","scope":"resource"},"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Defines space handling after keywords in a control flow statement.","scope":"resource"},"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Defines space handling after function keyword for anonymous functions.","scope":"resource"},"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Defines space handling after function keyword for anonymous functions.","scope":"resource"},"javascript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Defines space handling before function argument parentheses.","scope":"resource"},"typescript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Defines space handling before function argument parentheses.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty parenthesis.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty parenthesis.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty brackets.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty brackets.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing non-empty braces.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing non-empty braces.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing empty braces.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing empty braces.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing template string braces.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing template string braces.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing JSX expression braces.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing JSX expression braces.","scope":"resource"},"typescript.format.insertSpaceAfterTypeAssertion":{"type":"boolean","default":false,"description":"Defines space handling after type assertions in TypeScript.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for functions or not.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for functions or not.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for control blocks or not.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for control blocks or not.","scope":"resource"},"javascript.format.semicolons":{"type":"string","default":"ignore","description":"Defines handling of optional semicolons.","scope":"resource","enum":["ignore","insert","remove"],"enumDescriptions":["Don't insert or remove any semicolons.","Insert semicolons at statement ends.","Remove unnecessary semicolons."]},"typescript.format.semicolons":{"type":"string","default":"ignore","description":"Defines handling of optional semicolons.","scope":"resource","enum":["ignore","insert","remove"],"enumDescriptions":["Don't insert or remove any semicolons.","Insert semicolons at statement ends.","Remove unnecessary semicolons."]},"javascript.format.indentSwitchCase":{"type":"boolean","default":true,"description":"Indent case clauses in switch statements. Requires using TypeScript 5.1+ in the workspace.","scope":"resource"},"typescript.format.indentSwitchCase":{"type":"boolean","default":true,"description":"Indent case clauses in switch statements. Requires using TypeScript 5.1+ in the workspace.","scope":"resource"}}},{"type":"object","title":"Inlay Hints","order":24,"properties":{"typescript.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Disable parameter name hints.","Enable parameter name hints only for literal arguments.","Enable parameter name hints for literal and non-literal arguments."],"default":"none","markdownDescription":"Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```","scope":"resource"},"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName":{"type":"boolean","default":true,"markdownDescription":"Suppress parameter name hints on arguments whose text is identical to the parameter name.","scope":"resource"},"typescript.inlayHints.parameterTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```","scope":"resource"},"typescript.inlayHints.variableTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```","scope":"resource"},"typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName":{"type":"boolean","default":true,"markdownDescription":"Suppress type hints on variables whose name is identical to the type name.","scope":"resource"},"typescript.inlayHints.propertyDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```","scope":"resource"},"typescript.inlayHints.functionLikeReturnTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```","scope":"resource"},"typescript.inlayHints.enumMemberValues.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```","scope":"resource"},"javascript.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Disable parameter name hints.","Enable parameter name hints only for literal arguments.","Enable parameter name hints for literal and non-literal arguments."],"default":"none","markdownDescription":"Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```","scope":"resource"},"javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName":{"type":"boolean","default":true,"markdownDescription":"Suppress parameter name hints on arguments whose text is identical to the parameter name.","scope":"resource"},"javascript.inlayHints.parameterTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```","scope":"resource"},"javascript.inlayHints.variableTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```","scope":"resource"},"javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName":{"type":"boolean","default":true,"markdownDescription":"Suppress type hints on variables whose name is identical to the type name.","scope":"resource"},"javascript.inlayHints.propertyDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```","scope":"resource"},"javascript.inlayHints.functionLikeReturnTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```","scope":"resource"}}},{"type":"object","title":"TS Server","order":25,"properties":{"typescript.tsserver.nodePath":{"type":"string","description":"Run TS Server on a custom Node installation. This can be a path to a Node executable, or 'node' if you want VS Code to detect a Node installation.","scope":"window"},"typescript.npm":{"type":"string","markdownDescription":"Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).","scope":"machine"},"typescript.check.npmIsInstalled":{"type":"boolean","default":true,"markdownDescription":"Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).","scope":"window"},"typescript.tsserver.web.projectWideIntellisense.enabled":{"type":"boolean","default":true,"description":"Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.","scope":"window"},"typescript.tsserver.web.projectWideIntellisense.suppressSemanticErrors":{"type":"boolean","default":false,"description":"Suppresses semantic errors on web even when project wide IntelliSense is enabled. This is always on when project wide IntelliSense is not enabled or available. See `#typescript.tsserver.web.projectWideIntellisense.enabled#`","scope":"window"},"typescript.tsserver.web.typeAcquisition.enabled":{"type":"boolean","default":true,"description":"Enable/disable package acquisition on the web. This enables IntelliSense for imported packages. Requires `#typescript.tsserver.web.projectWideIntellisense.enabled#`. Currently not supported for Safari.","scope":"window"},"typescript.tsserver.useSyntaxServer":{"type":"string","scope":"window","description":"Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.","default":"auto","enum":["always","never","auto"],"enumDescriptions":["Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.","Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.","Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading."]},"typescript.tsserver.maxTsServerMemory":{"type":"number","default":3072,"markdownDescription":"The maximum amount of memory (in MB) to allocate to the TypeScript server process. To use a memory limit greater than 4 GB, use `#typescript.tsserver.nodePath#` to run TS Server with a custom Node installation.","scope":"window"},"typescript.tsserver.experimental.enableProjectDiagnostics":{"type":"boolean","default":false,"description":"Enables project wide error reporting.","scope":"window","tags":["experimental"]},"typescript.tsserver.watchOptions":{"description":"Configure which watching strategies should be used to keep track of files and directories.","scope":"window","default":"vscode","oneOf":[{"type":"string","const":"vscode","description":"Use VS Code's file watchers instead of TypeScript's. Requires using TypeScript 5.4+ in the workspace."},{"type":"object","properties":{"watchFile":{"type":"string","description":"Strategy for how individual files are watched.","enum":["fixedChunkSizePolling","fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling","useFsEvents","useFsEventsOnParentDirectory"],"enumDescriptions":["Polls files in chunks at regular interval.","Check every file for changes several times a second at a fixed interval.","Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.","Use a dynamic queue where less-frequently modified files will be checked less often.","Attempt to use the operating system/file system's native events for file changes.","Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate."],"default":"useFsEvents"},"watchDirectory":{"type":"string","description":"Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.","enum":["fixedChunkSizePolling","fixedPollingInterval","dynamicPriorityPolling","useFsEvents"],"enumDescriptions":["Polls directories in chunks at regular interval.","Check every directory for changes several times a second at a fixed interval.","Use a dynamic queue where less-frequently modified directories will be checked less often.","Attempt to use the operating system/file system's native events for directory changes."],"default":"useFsEvents"},"fallbackPolling":{"type":"string","description":"When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.","enum":["fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling"],"enumDescriptions":["configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval","configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval","configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"]},"synchronousWatchDirectory":{"type":"boolean","description":"Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups."}}}]},"typescript.tsserver.enableTracing":{"type":"boolean","default":false,"description":"Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.","scope":"window"},"typescript.tsserver.log":{"type":"string","enum":["off","terse","normal","verbose","requestTime"],"default":"off","description":"Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.","scope":"window"},"typescript.tsserver.pluginPaths":{"type":"array","items":{"type":"string","description":"Either an absolute or relative path. Relative path will be resolved against workspace folder(s)."},"default":[],"description":"Additional paths to discover TypeScript Language Service plugins.","scope":"machine"}}}],"commands":[{"command":"typescript.reloadProjects","title":"Reload Project","category":"TypeScript"},{"command":"javascript.reloadProjects","title":"Reload Project","category":"JavaScript"},{"command":"typescript.selectTypeScriptVersion","title":"Select TypeScript Version...","category":"TypeScript"},{"command":"typescript.goToProjectConfig","title":"Go to Project Configuration (tsconfig)","category":"TypeScript"},{"command":"javascript.goToProjectConfig","title":"Go to Project Configuration (jsconfig / tsconfig)","category":"JavaScript"},{"command":"typescript.openTsServerLog","title":"Open TS Server log","category":"TypeScript"},{"command":"typescript.restartTsServer","title":"Restart TS Server","category":"TypeScript"},{"command":"typescript.findAllFileReferences","title":"Find File References","category":"TypeScript"},{"command":"typescript.goToSourceDefinition","title":"Go to Source Definition","category":"TypeScript"},{"command":"typescript.sortImports","title":"Sort Imports","category":"TypeScript"},{"command":"javascript.sortImports","title":"Sort Imports","category":"JavaScript"},{"command":"typescript.removeUnusedImports","title":"Remove Unused Imports","category":"TypeScript"},{"command":"javascript.removeUnusedImports","title":"Remove Unused Imports","category":"JavaScript"},{"command":"typescript.experimental.enableTsgo","title":"Use TypeScript Go (Experimental)","category":"TypeScript","enablement":"!config.typescript.experimental.useTsgo && config.typescript-go.executablePath"},{"command":"typescript.experimental.disableTsgo","title":"Stop using TypeScript Go (Experimental)","category":"TypeScript","enablement":"config.typescript.experimental.useTsgo"}],"menus":{"commandPalette":[{"command":"typescript.reloadProjects","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.reloadProjects","when":"editorLangId == typescriptreact && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescriptreact"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.selectTypeScriptVersion","when":"typescript.isManagedFile"},{"command":"typescript.openTsServerLog","when":"typescript.isManagedFile"},{"command":"typescript.restartTsServer","when":"typescript.isManagedFile"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && typescript.isManagedFile"},{"command":"typescript.goToSourceDefinition","when":"tsSupportsSourceDefinition && typescript.isManagedFile"},{"command":"typescript.sortImports","when":"supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^typescript(react)?$/"},{"command":"javascript.sortImports","when":"supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^javascript(react)?$/"},{"command":"typescript.removeUnusedImports","when":"supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^typescript(react)?$/"},{"command":"javascript.removeUnusedImports","when":"supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^javascript(react)?$/"}],"editor/context":[{"command":"typescript.goToSourceDefinition","when":"tsSupportsSourceDefinition && (resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact)","group":"navigation@1.41"}],"explorer/context":[{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescript","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescriptreact","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascript","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascriptreact","group":"4_search"}],"editor/title/context":[{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascript"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascriptreact"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescript"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescriptreact"}]},"breakpoints":[{"language":"typescript"},{"language":"typescriptreact"}],"taskDefinitions":[{"type":"typescript","required":["tsconfig"],"properties":{"tsconfig":{"type":"string","description":"The tsconfig file that defines the TS build."},"option":{"type":"string"}},"when":"shellExecutionSupported"}],"problemPatterns":[{"name":"tsc","regexp":"^([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$","file":1,"line":2,"column":3,"severity":4,"code":5,"message":6}],"problemMatchers":[{"name":"tsc","label":"TypeScript problems","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc"},{"name":"tsc-watch","label":"TypeScript problems (watch mode)","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc","background":{"activeOnStart":true,"beginsPattern":{"regexp":"^\\s*(?:message TS6032:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (Starting compilation in watch mode|File change detected\\. Starting incremental compilation)\\.\\.\\."},"endsPattern":{"regexp":"^\\s*(?:message TS6042:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (?:Compilation complete\\.|Found \\d+ errors?\\.) Watching for file changes\\."}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.vb","identifier":{"value":"vscode.vb","_lower":"vscode.vb"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/vb","path":"/snap/code/206/usr/share/code/resources/app/extensions/vb","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"vb","displayName":"Visual Basic Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Visual Basic files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/asp.vb.net.tmbundle Syntaxes/ASP%20VB.net.plist ./syntaxes/asp-vb-net.tmLanguage.json"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"vb","extensions":[".vb",".brs",".vbs",".bas",".vba"],"aliases":["Visual Basic","vb"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vb","scopeName":"source.asp.vb.net","path":"./syntaxes/asp-vb-net.tmLanguage.json"}],"snippets":[{"language":"vb","path":"./snippets/vb.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.xml","identifier":{"value":"vscode.xml","_lower":"vscode.xml"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/xml","path":"/snap/code/206/usr/share/code/resources/app/extensions/xml","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"xml","displayName":"XML Language Basics","description":"Provides syntax highlighting and bracket matching in XML files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"xml","extensions":[".xml",".xsd",".ascx",".atom",".axml",".axaml",".bpmn",".cpt",".csl",".csproj",".csproj.user",".dita",".ditamap",".dtd",".ent",".mod",".dtml",".fsproj",".fxml",".iml",".isml",".jmx",".launch",".menu",".mxml",".nuspec",".opml",".owl",".proj",".props",".pt",".publishsettings",".pubxml",".pubxml.user",".rbxlx",".rbxmx",".rdf",".rng",".rss",".shproj",".slnx",".storyboard",".svg",".targets",".tld",".tmx",".vbproj",".vbproj.user",".vcxproj",".vcxproj.filters",".wsdl",".wxi",".wxl",".wxs",".xaml",".xbl",".xib",".xlf",".xliff",".xpdl",".xul",".xoml"],"firstLine":"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)","aliases":["XML","xml"],"configuration":"./xml.language-configuration.json"},{"id":"xsl","extensions":[".xsl",".xslt"],"aliases":["XSL","xsl"],"configuration":"./xsl.language-configuration.json"}],"grammars":[{"language":"xml","scopeName":"text.xml","path":"./syntaxes/xml.tmLanguage.json"},{"language":"xsl","scopeName":"text.xml.xsl","path":"./syntaxes/xsl.tmLanguage.json"}]},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-xml grammars/xml.cson ./syntaxes/xml.tmLanguage.json grammars/xsl.cson ./syntaxes/xsl.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"vscode.yaml","identifier":{"value":"vscode.yaml","_lower":"vscode.yaml"},"isBuiltin":true,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/snap/code/206/usr/share/code/resources/app/extensions/yaml","path":"/snap/code/206/usr/share/code/resources/app/extensions/yaml","scheme":"file"},"targetPlatform":"undefined","preRelease":false,"name":"yaml","displayName":"YAML Language Basics","description":"Provides syntax highlighting and bracket matching in YAML files.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"dockercompose","aliases":["Compose","compose"],"filenamePatterns":["compose.yml","compose.yaml","compose.*.yml","compose.*.yaml","*docker*compose*.yml","*docker*compose*.yaml"],"configuration":"./language-configuration.json"},{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yaml",".yml",".eyaml",".eyml",".cff",".yaml-tmlanguage",".yaml-tmpreferences",".yaml-tmtheme",".winget"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"dockercompose","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"},{"scopeName":"source.yaml.1.3","path":"./syntaxes/yaml-1.3.tmLanguage.json"},{"scopeName":"source.yaml.1.2","path":"./syntaxes/yaml-1.2.tmLanguage.json"},{"scopeName":"source.yaml.1.1","path":"./syntaxes/yaml-1.1.tmLanguage.json"},{"scopeName":"source.yaml.1.0","path":"./syntaxes/yaml-1.0.tmLanguage.json"},{"scopeName":"source.yaml.embedded","path":"./syntaxes/yaml-embedded.tmLanguage.json"},{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json","unbalancedBracketScopes":["invalid.illegal","meta.scalar.yaml","storage.type.tag.shorthand.yaml","keyword.control.flow"]}],"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":"advanced","diffEditor.ignoreTrimWhitespace":false,"editor.defaultColorDecorators":"never","editor.quickSuggestions":{"strings":"on"}},"[dockercompose]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":"advanced"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"}},{"id":"bradlc.vscode-tailwindcss","identifier":{"value":"bradlc.vscode-tailwindcss","_lower":"bradlc.vscode-tailwindcss"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/bradlc.vscode-tailwindcss-0.14.26","path":"/root/.vscode/extensions/bradlc.vscode-tailwindcss-0.14.26","scheme":"file"},"uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","targetPlatform":"undefined","publisherDisplayName":"Tailwind Labs","preRelease":false,"name":"vscode-tailwindcss","version":"0.14.26","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json","icon":{"light":"media/icon.png","dark":"media/icon.png"}}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"},{"command":"tailwindCSS.sortSelection","title":"Tailwind CSS: Sort Selection","enablement":"editorHasSelection && (resourceScheme == file || resourceScheme == vscode-remote) && tailwindCSS.activeTextEditorSupportsClassSorting"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass","class:list"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.classFunctions":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"The function or tagged template literal names for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.codeLens":{"type":"boolean","default":true,"markdownDescription":"Enable code lens.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.lint.usedBlocklistedClass":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Usage of class names that have been blocklisted via `@source not inline(…)`","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."},"tailwindcss-intellisense.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Tailwind CSS Language Server."}}}},"scripts":{"_esbuild":"node ../../esbuild.mjs src/extension.ts src/server.ts src/cssServer.ts --outdir=dist","dev":"concurrently --raw --kill-others \"pnpm run watch\" \"pnpm run check --watch\"","watch":"pnpm run clean && pnpm run _esbuild --watch","build":"pnpm run check && pnpm run clean && pnpm run _esbuild --minify && move-file dist/server.js dist/tailwindServer.js && move-file dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package --no-dependencies","publish":"vsce publish --no-dependencies","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"pnpm run build && pnpm run copy:notices","clean":"rimraf dist","check":"tsc --noEmit"},"devDependencies":{"@tailwindcss/language-server":"workspace:*","@tailwindcss/language-service":"workspace:*","@types/braces":"3.0.1","@types/picomatch":"^2.3.3","@types/vscode":"1.65.0","@vscode/vsce":"2.21.1","braces":"3.0.3","color-name":"1.1.4","concurrently":"9.1.2","esbuild":"^0.25.5","minimist":"^1.2.8","move-file-cli":"3.0.0","normalize-path":"3.0.0","picomatch":"^4.0.1","rimraf":"3.0.2","typescript":"5.8.3","vscode-languageclient":"8.0.2"}},{"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/esbenp.prettier-vscode-11.0.0","path":"/root/.vscode/extensions/esbenp.prettier-vscode-11.0.0","scheme":"file"},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","targetPlatform":"undefined","publisherDisplayName":"Prettier","preRelease":false,"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"11.0.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.80.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","prepare":"husky"},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.7","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.80.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.56","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.1.4","lint-staged":"^15.2.9","mocha":"^10.7.3","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.93.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.3","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"},"prettier.experimentalTernaries":{"type":"boolean","default":false,"markdownDescription":"Try prettier's [new ternary formatting](https://github.com/prettier/prettier/pull/13183) before it becomes the default behavior.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},{"id":"GitHub.copilot","identifier":{"value":"GitHub.copilot","_lower":"github.copilot"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/github.copilot-1.372.0","path":"/root/.vscode/extensions/github.copilot-1.372.0","scheme":"file"},"uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6","targetPlatform":"undefined","publisherDisplayName":"GitHub","preRelease":false,"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.372.0","build":"1785","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/microsoft/vscode/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat","GitHub.copilot"],"engines":{"vscode":"^1.98.0","node":">=20.0.0","npm":">=9.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"browser":"./dist/web","main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions"],"contributes":{"commands":[{"command":"github.copilot.toggleStatusMenu","title":"Open Status Menu","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept Panel Suggestion at the Cursor","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the Previous Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the Next Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","enablement":"github.copilot.activated && !isWeb","category":"GitHub Copilot"},{"command":"github.copilot.generateComparison","title":"Open Comparison Panel","enablement":"github.copilot.activated && !isWeb && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.acceptCursorComparisonPanelSolution","title":"Accept Comparison Panel Suggestion at the Cursor","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.previousComparisonPanelSolution","title":"Navigate to the Previous Comparison Panel Suggestion","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.nextComparisonPanelSolution","title":"Navigate to the Next Comparison Panel Suggestion","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.disable","title":"Disable Completions","enablement":"github.copilot.activated && config.editor.inlineSuggest.enabled && github.copilot.completions.enabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.enable","title":"Enable Completions","enablement":"github.copilot.activated && !(config.editor.inlineSuggest.enabled && github.copilot.completions.enabled)","category":"GitHub Copilot"},{"command":"github.copilot.completions.toggle","title":"Toggle (Enable/Disable) Completions","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"},{"command":"github.copilot.openModelPicker","title":"Change Completions Model","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github.copilot.sendCompletionFeedback","title":"Send Copilot Completion Feedback","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github-copilot-completions-debugger-view.refresh","title":"Refresh","icon":"$(refresh)"}],"keybindings":[{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.acceptCursorComparisonPanelSolution","key":"ctrl+shift+/","mac":"ctrl+shift+/","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"github.copilot.previousComparisonPanelSolution","key":"alt+shift+[","mac":"alt+shift+[","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"github.copilot.nextComparisonPanelSolution","key":"alt+shift+]","mac":"alt+shift+]","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"}],"configuration":[{"title":"GitHub Copilot","properties":{"github.copilot.selectedCompletionModel":{"type":"string","default":"","markdownDescription":"The currently selected completion model ID. To select from a list of available models, use the __\"Change Completions Model\"__ command or open the model picker (from the Copilot menu in the VS Code title bar, select __\"Configure Code Completions\"__ then __\"Change Completions Model\"__. The value must be a valid model ID. An empty value indicates that the default model will be used."},"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"authPermissions":{"type":"string","enum":["default","minimal"],"markdownEnumDescriptions":["Default (recommended) - The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.","Minimal - The minimal permissions required for Copilot functionality."],"default":"default","markdownDescription":"Controls what kind of permissions are asked for when signing in to Copilot. The options are\n* `default` - (strongly recommended) The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.\n* `minimal` - The minimal permissions are the least that Copilot needs to function. Some features may behave slower or not at all."},"useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use language server"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"deprecationMessage":"Set overrideLogLevels.* to ERROR to filter out unwanted categories.","description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","scope":"window","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable or disable auto triggering of Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). You can still trigger suggestions manually using `Alt + \\`"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"viewsContainers":{"activitybar":[{"id":"github-copilot-completions-debugger-panel","title":"Debugger","icon":"$(bug)","when":"config.github.copilot.internal.showWorkspaceContextDebugger && config.github.copilot.internal.useWorkspaceContextCoordinator"}]},"views":{"github-copilot-completions-debugger-panel":[{"id":"github-copilot-completions-debugger-view","name":"Debugger","when":"config.github.copilot.internal.showWorkspaceContextDebugger && config.github.copilot.internal.useWorkspaceContextCoordinator","icon":"$(bug)"}]},"menus":{"view/title":[{"command":"github-copilot-completions-debugger-view.refresh","when":"view == github-copilot-completions-debugger-view","group":"navigation"}]}},"scripts":{"build":"tsx esbuild.ts","clean":"./script/build/clean.sh","compress":"tsx ./script/compressTokenizer.ts","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"tsx script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"tsx script/deviceFlow.ts --save-as-test-token","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --quiet --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"npm install","pretest":"npm run build","pretest:headless":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","pretest:lib-e2e":"npm run build","prewatch":"npm run build","prewatch:esbuild":"npm run build","start":"npm run watch","test":"npm-run-all \"test:extension --ignore-scripts\" \"test:headless --ignore-scripts\" lint","test:headless":"npm-run-all test:lib test:agent \"test:lib-e2e --ignore-scripts\" test:prompt \"test:lsp-client --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.{ts,tsx}\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.{ts,tsx}\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.{ts,tsx}\" --exclude \"lib/e2e/src/prompt/**/*.test.ts\"","test:lib-e2e-no-ci":"mocha \"lib/e2e/no-ci/**/*.test.{ts,tsx}\"","test:lib-prompt-e2e":"mocha \"lib/e2e/src/prompt/prompt.test.ts\"","test:lib-prompt-e2e-perf":"INCLUDE_PERFORMANCE=true npm run test:lib-prompt-e2e","test:lsp-client":"mocha \"lsp-client/test/*.test.{ts,tsx}\"","test:prompt":"mocha \"prompt/test/**/*.test.{ts,tsx}\"","test:prepare-msbench":"tsx script/setupMsbench.ts","test:run-msbench":"tsx lsp-client/test/msbench/agent/index.ts","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package --allow-missing-repository","watch":"run-p \"watch:esbuild --ignore-scripts\" \"watch:types -- --preserveWatchOutput\"","watch:esbuild":"tsx esbuild.ts --watch","watch:types":"tsc --noEmit --watch"},"devDependencies":{"@azure/identity":"^4.11.0","@azure/keyvault-secrets":"^4.10.0","@datadog/datadog-ci":"^3.17.0","@github/prettier-config":"0.0.6","@limegrass/eslint-plugin-import-alias":"^1.5.1","@parcel/watcher":"^2.5.1","@types/benchmark":"^2.1.5","@types/crypto-js":"^4.2.2","@types/diff":"^8.0.0","@types/git-url-parse":"^16.0.0","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/markdown-it":"^14.1.2","@types/mocha":"^10.0.10","@types/node":"~20.16.0","@types/semver":"^7.7.0","@types/sinon":"^17.0.4","@types/uuid":"^10.0.0","@types/vscode":"1.98.0","@types/yargs":"^17.0.24","@vscode/test-electron":"^2.5.2","@vscode/vsce":"^3.6.0","@yao-pkg/pkg":"^6.6.0","benchmark":"^2.1.4","boxen":"^8.0.1","chalk":"^5.4.1","dependency-cruiser":"^17.0.1","electron":"^28.1.4","esbuild":"^0.25.8","esbuild-plugin-copy":"^2.1.1","eslint":"^9.32.0","eslint-formatter-visualstudio":"^8.40.0","eslint-plugin-mocha":"^10.5.0","glob":"^11.0.3","globals":"^16.3.0","js-yaml":"^4.1.0","mocha":"^11.2.2","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","prettier":"^3.5.3","prettier-plugin-organize-imports":"^4.2.0","proxy":"^2.1.1","simple-git":"^3.28.0","sinon":"^20.0.0","ts-dedent":"^2.2.0","tsx":"^4.19.4","typescript":"^5.9.2","typescript-eslint":"^8.39.1","vscode-dts":"^0.3.3","@vscode/tree-sitter-wasm":"0.0.5-php.2"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#2a08fa939591a0e14f34f611adcc3ed767579e9a","@anthropic-ai/sdk":"^0.56.0","@github/memoize":"1.1.5","@microsoft/1ds-post-js":"^4.3.9","@microsoft/applicationinsights-web-basic":"^3.3.6","@microsoft/tiktokenizer":"^1.0.10","@modelcontextprotocol/sdk":"^1.17.0","@sinclair/typebox":"^0.34.33","@types/vscode-webview":"^1.57.4","@vscode/codicons":"^0.0.39","@vscode/prompt-tsx":"0.4.0-alpha.1","@vscode/webview-ui-toolkit":"^1.3.1","await-lock":"^2.2.2","crypto-js":"^4.2.0","diff":"^8.0.2","dldr":"^0.0.10","events":"^3.3.0","get-stream":"^6.0.1","git-url-parse":"^16.0.3","kerberos":"^2.2.0","mac-ca":"^3.1.3","markdown-it":"^14.1.0","microjob":"^0.7.0","minimatch":"^9.0.3","open":"^10.2.0","os-browserify":"^0.3.0","path-browserify":"^1.0.1","semver":"^7.7.1","shiki":"~1.15.0","source-map-support":"^0.5.21","sqlite3":"^5.1.7","uuid":"^11.1.0","vscode-languageclient":"^9.0.0","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.1.0","web-tree-sitter":"^0.23.0","windows-ca-certs":"^0.2.2","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"npm:bundled-bindings@^1.5.0"}},{"id":"GitHub.copilot-chat","identifier":{"value":"GitHub.copilot-chat","_lower":"github.copilot-chat"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/github.copilot-chat-0.31.2","path":"/root/.vscode/extensions/github.copilot-chat-0.31.2","scheme":"file"},"uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","targetPlatform":"undefined","publisherDisplayName":"GitHub","preRelease":false,"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.31.2","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","completionsCore":"3acd8894289d201737afff63c5183b567e6e2774","completionsCoreVersion":"1.372.0","internalLargeStorageAriaKey":"ec712b3202c5462fb6877acae7f1f9d7-c19ad55e-3e3c-4f99-984b-827f6d95bd9e-6917","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-chat"},"bugs":{"url":"https://github.com/microsoft/vscode/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/copilot.png","pricing":"Trial","engines":{"vscode":"^1.104.0-20250905","npm":">=9.0.0","node":">=22.14.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["interactive","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","chatParticipantAdditions","defaultChatParticipant","embeddings","chatEditing","chatProvider","mappedEditsProvider","aiRelatedInformation","aiSettingsSearch","codeActionAI","findTextInFiles","findTextInFiles2","textSearchProvider","textSearchProvider2","activeComment","commentReveal","contribSourceControlInputBoxMenu","contribCommentEditorActionsMenu","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","newSymbolNamesProvider","findFiles2","chatReferenceDiagnostic","extensionsAny","authLearnMore","testObserver","aiTextSearchProvider","documentFiltersExclusive","chatParticipantPrivate","contribDebugCreateConfiguration","inlineCompletionsAdditions","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","languageModelDataPart","languageModelThinkingPart","chatStatusItem","taskProblemMatcherStatus","contribLanguageModelToolSets","textDocumentChangeReason","resolvers","taskExecutionTerminal","dataChannels","chatSessionsProvider"],"contributes":{"languageModelTools":[{"name":"copilot_searchCodebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","userDescription":"Find relevant file chunks, symbols, and other information in your codebase","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small.","tags":["codesearch","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Should ideally be text that might appear in the codebase, such as function names, variable names, or comments."}},"required":["query"]}},{"name":"execute_task","toolReferenceName":"executeTask","displayName":"Execute Task","when":"config.github.copilot.chat.advanced.taskTools.enabled","canBeReferencedInPrompt":true,"modelDescription":"Launch a new agent to handle complex, multi-step tasks autonomously. This tool is good at researching complex questions, searching for code, and executing multi-step tasks. When you are searching for a keyword or file and are not confident that you will find the right match in the first few tries, use this agent to perform the search for you.\n\n- When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n - Each agent invocation is stateless. You will not be able to send additional messages to the agent, nor will the agent be able to communicate with you outside of its final report. Therefore, your prompt should contain a highly detailed task description for the agent to perform autonomously and you should specify exactly what information the agent should return back to you in its final and only message to you.\n - The agent's outputs should generally be trusted\n - Clearly tell the agent whether you expect it to write code or just to do research (search, file reads, web fetches, etc.), since it is not aware of the user's intent","tags":[],"inputSchema":{"type":"object","properties":{"prompt":{"type":"string","description":"A detailed description of the task for the agent to perform"},"description":{"type":"string","description":"A short (3-5 word) description of the task"}},"required":["prompt","description"]}},{"name":"execute_prompt","toolReferenceName":"executePrompt","displayName":"Execute Prompt","when":"config.github.copilot.chat.advanced.taskTools.enabled","canBeReferencedInPrompt":true,"modelDescription":"This tool can take a path to a user's prompt file as input, and execute it autonomously. If the user's prompt includes multiple references to .prompt.md files, then you should use this tool to execute those prompts in sequence.\n\n- When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n - The agent's outputs should generally be trusted","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the prompt file to execute"}},"required":["filePath"]}},{"name":"copilot_searchWorkspaceSymbols","toolReferenceName":"symbols","displayName":"Workspace Symbols","icon":"$(symbol)","userDescription":"Search for workspace symbols using language services.","modelDescription":"Search the user's workspace for code symbols using language services. Use this tool when the user is looking for a specific symbol in their workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The symbol to search for, such as a function name, class name, or variable name."}},"required":["symbolName"]}},{"name":"copilot_listCodeUsages","toolReferenceName":"usages","displayName":"Find Usages","icon":"$(references)","canBeReferencedInPrompt":true,"userDescription":"Find references, definitions, and other usages of a symbol","modelDescription":"Request to list all usages (references, definitions, implementations etc) of a function, class, method, variable etc. Use this tool when \n1. Looking for a sample implementation of an interface or class\n2. Checking how a function is used throughout the codebase.\n3. Including and updating all usages when changing a function, method, or constructor","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The name of the symbol, such as a function name, class name, method name, variable name, etc."},"filePaths":{"type":"array","description":"One or more file paths which likely contain the definition of the symbol. For instance the file which declares a class or function. This is optional but will speed up the invocation of this tool and improve the quality of its output.","items":{"type":"string"}}},"required":["symbolName"]}},{"name":"copilot_getVSCodeAPI","toolReferenceName":"vscodeAPI","displayName":"Get VS Code API References","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Get comprehensive VS Code API documentation and references for extension development. This tool provides authoritative documentation for VS Code's extensive API surface, including proposed APIs, contribution points, and best practices. Use this tool for understanding complex VS Code API interactions.\n\nWhen to use this tool:\n- User asks about specific VS Code APIs, interfaces, or extension capabilities\n- Need documentation for VS Code extension contribution points (commands, views, settings, etc.)\n- Questions about proposed APIs and their usage patterns\n- Understanding VS Code extension lifecycle, activation events, and packaging\n- Best practices for VS Code extension development architecture\n- API examples and code patterns for extension features\n- Troubleshooting extension-specific issues or API limitations\n\nWhen NOT to use this tool:\n- Creating simple standalone files or scripts unrelated to VS Code extensions\n- General programming questions not specific to VS Code extension development\n- Questions about using VS Code as an editor (user-facing features)\n- Non-extension related development tasks\n- File creation or editing that doesn't involve VS Code extension APIs\n\nCRITICAL usage guidelines:\n1. Always include specific API names, interfaces, or concepts in your query\n2. Mention the extension feature you're trying to implement\n3. Include context about proposed vs stable APIs when relevant\n4. Reference specific contribution points when asking about extension manifest\n5. Be specific about the VS Code version or API version when known\n\nScope: This tool is for EXTENSION DEVELOPMENT ONLY - building tools that extend VS Code itself, not for general file creation or non-extension programming tasks.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"tags":[],"canBeReferencedInPrompt":true},{"displayName":"Think","name":"copilot_think","tags":[],"canBeReferencedInPrompt":true,"toolReferenceName":"think","when":"config.github.copilot.chat.agent.thinkingTool","modelDescription":"Use this tool to think deeply about the user's request and organize your thoughts. This tool helps improve response quality by allowing the model to consider the request carefully, brainstorm solutions, and plan complex tasks. It's particularly useful for:\n\n1. Exploring repository issues and brainstorming bug fixes\n2. Analyzing test results and planning fixes\n3. Planning complex refactoring approaches\n4. Designing new features and architecture\n5. Organizing debugging hypotheses\n\nThe tool logs your thought process for transparency but doesn't execute any code or make changes.","inputSchema":{"type":"object","properties":{"thoughts":{"type":"string","description":"Your thoughts about the current task or problem. This should be a clear, structured explanation of your reasoning, analysis, or planning process."}},"required":["thoughts"]}},{"name":"copilot_findFiles","toolReferenceName":"fileSearch","displayName":"Find Files","modelDescription":"Search for files in the workspace by glob pattern. This only returns the paths of matching files. Use this tool when you know the exact filename pattern of the files you're searching for. Glob patterns match from the root of the workspace folder. Examples:\n- **/*.{js,ts} to match all js/ts files in the workspace.\n- src/** to match all files under the top-level src folder.\n- **/foo/**/*.js to match all js files under any foo folder in the workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search for files with names or paths matching this glob pattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query"]}},{"name":"copilot_findTextInFiles","toolReferenceName":"textSearch","displayName":"Find Text In Files","modelDescription":"Do a fast text search in the workspace. Use this tool when you want to search with an exact string or regex. If you are not sure what words will appear in the workspace, prefer using regex patterns with alternation (|) or character classes to search for multiple potential words at once instead of making separate searches. For example, use 'function|method|procedure' to look for all of those words at once. Use includePattern to search within files matching a specific pattern, or in a specific file, using a relative path. Use this tool when you want to see an overview of a particular file, instead of using read_file many times to look for code within a file.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The pattern to search for in files in the workspace. Use regex with alternation (e.g., 'word1|word2|word3') or character classes to find multiple potential words in a single search. Be sure to set the isRegexp property properly to declare whether it's a regex or plain text pattern. Is case-insensitive."},"isRegexp":{"type":"boolean","description":"Whether the pattern is a regex."},"includePattern":{"type":"string","description":"Search files matching this glob pattern. Will be applied to the relative path of files within the workspace. To search recursively inside a folder, use a proper glob pattern like \"src/folder/**\". Do not use | in includePattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query","isRegexp"]}},{"name":"copilot_applyPatch","displayName":"Apply Patch","toolReferenceName":"applyPatch","userDescription":"Edit text files in the workspace","modelDescription":"Edit text files. Do not use this tool to edit Jupyter notebooks. `apply_patch` allows you to execute a diff/patch against a text file, but the format of the diff specification is unique to this task, so pay careful attention to these instructions. To use the `apply_patch` command, you should pass a message of the following structure as \"input\":\n\n*** Begin Patch\n[YOUR_PATCH]\n*** End Patch\n\nWhere [YOUR_PATCH] is the actual content of your patch, specified in the following V4A diff format.\n\n*** [ACTION] File: [/absolute/path/to/file] -> ACTION can be one of Add, Update, or Delete.\nAn example of a message that you might pass as \"input\" to this function, in order to apply a patch, is shown below.\n\n*** Begin Patch\n*** Update File: /Users/someone/pygorithm/searching/binary_search.py\n@@class BaseClass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n@@class Subclass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n*** End Patch\nDo not use line numbers in this diff format.","inputSchema":{"type":"object","properties":{"input":{"type":"string","description":"The edit patch to apply."},"explanation":{"type":"string","description":"A short description of what the tool call is aiming to achieve."}},"required":["input","explanation"]}},{"name":"copilot_readFile","toolReferenceName":"readFile","displayName":"Read File","modelDescription":"Read the contents of a file.\n\nYou must specify the line range you're interested in. Line numbers are 1-indexed. If the file contents returned are insufficient for your task, you may call this tool again to retrieve more content. Prefer reading larger ranges over doing many small reads.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"filePath":{"description":"The absolute path of the file to read.","type":"string"},"startLine":{"type":"number","description":"The line number to start reading from, 1-based."},"endLine":{"type":"number","description":"The inclusive line number to end reading at, 1-based."}},"required":["filePath","startLine","endLine"]}},{"name":"copilot_listDirectory","toolReferenceName":"listDirectory","displayName":"List Dir","modelDescription":"List the contents of a directory. Result will have the name of the child. If the name ends in /, it's a folder, otherwise a file","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"path":{"type":"string","description":"The absolute path to the directory to list."}},"required":["path"]}},{"name":"copilot_getErrors","displayName":"Get Problems","toolReferenceName":"problems","canBeReferencedInPrompt":true,"icon":"$(error)","userDescription":"Check errors for a particular file","modelDescription":"Get any compile or lint errors in a specific file or across all files. If the user mentions errors or problems in a file, they may be referring to these. Use the tool to see the same errors that the user is seeing. If the user asks you to analyze all errors, or does not specify a file, use this tool to gather errors for all files. Also use this tool after editing a file to validate the change.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"description":"The absolute paths to the files to check for errors. Omit 'filePaths' when retrieving all errors.","type":"array","items":{"type":"string"}}}}},{"name":"copilot_readProjectStructure","displayName":"Project Structure","modelDescription":"Get a file tree representation of the workspace.","tags":[]},{"name":"copilot_getChangedFiles","displayName":"Git Changes","toolReferenceName":"changes","icon":"$(diff)","canBeReferencedInPrompt":true,"userDescription":"Get diffs of changed files","modelDescription":"Get git diffs of current file changes in a git repository. Don't forget that you can use run_in_terminal to run git commands in a terminal as well.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"repositoryPath":{"type":"string","description":"The absolute path to the git repository to look for changes in. If not provided, the active git repository will be used."},"sourceControlState":{"type":"array","items":{"type":"string","enum":["staged","unstaged","merge-conflicts"]},"description":"The kinds of git state to filter by. Allowed values are: 'staged', 'unstaged', and 'merge-conflicts'. If not provided, all states will be included."}}}},{"name":"copilot_testFailure","toolReferenceName":"testFailure","displayName":"Test Failure","icon":"$(beaker)","userDescription":"Includes information about the last unit test failure","modelDescription":"Includes test failure information in the prompt.","inputSchema":{},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"canBeReferencedInPrompt":true},{"name":"copilot_updateUserPreferences","toolReferenceName":"updateUserPreferences","displayName":"Update User Preferences","modelDescription":"Update the user's preferences file with new information about the user and their coding preferences, based on the current chat history.","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"facts":{"type":"array","items":{"type":"string"},"description":"An array of new user preferences to remember."}},"required":["facts"]},"when":"config.github.copilot.chat.enableUserPreferences"},{"name":"copilot_createNewWorkspace","displayName":"Create New Workspace","toolReferenceName":"newWorkspace","icon":"$(new-folder)","userDescription":"Scaffold a new workspace in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Get comprehensive setup steps to help the user create complete project structures in a VS Code workspace. This tool is designed for full project initialization and scaffolding, not for creating individual files.\n\nWhen to use this tool:\n- User wants to create a new complete project from scratch\n- Setting up entire project frameworks (TypeScript projects, React apps, Node.js servers, etc.)\n- Initializing Model Context Protocol (MCP) servers with full structure\n- Creating VS Code extensions with proper scaffolding\n- Setting up Next.js, Vite, or other framework-based projects\n- User asks for \"new project\", \"create a workspace\", \"set up a [framework] project\"\n- Need to establish complete development environment with dependencies, config files, and folder structure\n\nWhen NOT to use this tool:\n- Creating single files or small code snippets\n- Adding individual files to existing projects\n- Making modifications to existing codebases\n- User asks to \"create a file\" or \"add a component\"\n- Simple code examples or demonstrations\n- Debugging or fixing existing code\n\nThis tool provides complete project setup including:\n- Folder structure creation\n- Package.json and dependency management\n- Configuration files (tsconfig, eslint, etc.)\n- Initial boilerplate code\n- Development environment setup\n- Build and run instructions\n\nUse other file creation tools for individual files within existing projects.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the new workspace. This should be a clear and concise description of the workspace the user wants to create."}},"required":["query"]},"tags":["enable_other_tool_install_extension","enable_other_tool_get_project_setup_info"]},{"name":"copilot_getProjectSetupInfo","displayName":"Get Project Setup Info","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"getProjectSetupInfo","modelDescription":"Do not call this tool without first calling the tool to create a workspace. This tool provides a project setup information for a Visual Studio Code workspace based on a project type and programming language.","inputSchema":{"type":"object","properties":{"projectType":{"type":"string","description":"The type of project to create. Supported values are: 'python-script', 'python-project', 'mcp-server', 'model-context-protocol-server', 'vscode-extension', 'next-js', 'vite' and 'other'"}},"required":["projectType"]},"tags":[]},{"name":"copilot_installExtension","displayName":"Install Extension in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"installExtension","modelDescription":"Install an extension in VS Code. Use this tool to install an extension in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the extension to install. This should be in the format <publisher>.<extension>."},"name":{"type":"string","description":"The name of the extension to install. This should be a clear and concise description of the extension."}},"required":["id","name"]},"tags":[]},{"name":"copilot_runVscodeCommand","displayName":"Run VS Code Command","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"runVscodeCommand","modelDescription":"Run a command in VS Code. Use this tool to run a command in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"commandId":{"type":"string","description":"The ID of the command to execute. This should be in the format <command>."},"name":{"type":"string","description":"The name of the command to execute. This should be a clear and concise description of the command."},"args":{"type":"array","description":"The arguments to pass to the command. This should be an array of strings.","items":{"type":"string"}}},"required":["commandId","name"]},"tags":[]},{"name":"copilot_createNewJupyterNotebook","displayName":"Create New Jupyter Notebook","icon":"$(notebook)","toolReferenceName":"newJupyterNotebook","modelDescription":"Generates a new Jupyter Notebook (.ipynb) in VS Code. Jupyter Notebooks are interactive documents commonly used for data exploration, analysis, visualization, and combining code with narrative text. Prefer creating plain Python files or similar unless a user explicitly requests creating a new Jupyter Notebook or already has a Jupyter Notebook opened or exists in the workspace.","userDescription":"Create a new Jupyter Notebook","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the jupyter notebook. This should be a clear and concise description of the notebook the user wants to create."}},"required":["query"]},"tags":[]},{"name":"copilot_insertEdit","toolReferenceName":"insertEdit","displayName":"Edit File","modelDescription":"Insert new code into an existing file in the workspace. Use this tool once per file that needs to be modified, even if there are multiple changes for a file. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\treturn this.age;\n\t}\n}","tags":[],"inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A short explanation of the edit being made."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"code":{"type":"string","description":"The code change to apply to the file.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\t\treturn this.age;\n\t}\n}"}},"required":["explanation","filePath","code"]}},{"name":"copilot_createFile","toolReferenceName":"createFile","displayName":"Create File","userDescription":"Create new files","modelDescription":"This is a tool for creating a new file in the workspace. The file will be created with the specified content. The directory will be created if it does not already exist. Never use this tool to edit a file that already exists.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the file to create."},"content":{"type":"string","description":"The content to write to the file."}},"required":["filePath","content"]}},{"name":"copilot_createDirectory","toolReferenceName":"createDirectory","displayName":"Create Directory","userDescription":"Create new directories in your workspace","modelDescription":"Create a new directory structure in the workspace. Will recursively create all directories in the path, like mkdir -p. You do not need to use this tool before using create_file, that tool will automatically create the needed directories.","tags":[],"inputSchema":{"type":"object","properties":{"dirPath":{"type":"string","description":"The absolute path to the directory to create."}},"required":["dirPath"]}},{"name":"copilot_openSimpleBrowser","displayName":"Open Simple Browser","modelDescription":"Preview a website or open a URL in the editor's Simple Browser. Useful for quickly viewing locally hosted websites, demos, or resources without leaving the coding environment.","userDescription":"Preview a locally hosted website in the Simple Browser","toolReferenceName":"openSimpleBrowser","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"url":{"type":"string","description":"The website URL to preview or open in the Simple Browser inside the editor. Must be either an http or https URL"}},"required":["url"]}},{"name":"copilot_replaceString","toolReferenceName":"replaceString","displayName":"Replace String in File","modelDescription":"This is a tool for making edits in an existing file in the workspace. For moving or renaming files, use run in terminal tool with the 'mv' command instead. For larger edits, split them into smaller edits and call the edit tool multiple times to ensure accuracy. Before editing, always ensure you have the context to understand the file's contents and context. To edit a file, provide: 1) filePath (absolute path), 2) oldString (MUST be the exact literal text to replace including all whitespace, indentation, newlines, and surrounding code etc), and 3) newString (MUST be the exact literal text to replace \\`oldString\\` with (also including all whitespace, indentation, newlines, and surrounding code etc.). Ensure the resulting code is correct and idiomatic.). Each use of this tool replaces exactly ONE occurrence of oldString.\n\nCRITICAL for \\`oldString\\`: Must uniquely identify the single instance to change. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string matches multiple locations, or does not match exactly, the tool will fail. Never use 'Lines 123-456 omitted' from summarized documents or ...existing code... comments in the oldString or newString.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. For single replacements (default), include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. For multiple replacements, specify expected_replacements parameter. If this string is not the exact literal text (i.e. you escaped it) or does not match exactly, the tool will fail."},"newString":{"type":"string","description":"The exact literal text to replace `old_string` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["filePath","oldString","newString"]}},{"name":"copilot_multiReplaceString","toolReferenceName":"multiReplaceString","displayName":"Multi-Replace String in Files","modelDescription":"This tool allows you to apply multiple replace_string_in_file operations in a single call, which is more efficient than calling replace_string_in_file multiple times. It takes an array of replacement operations and applies them sequentially. Each replacement operation has the same parameters as replace_string_in_file: filePath, oldString, newString, and explanation. This tool is ideal when you need to make multiple edits across different files or multiple edits in the same file. The tool will provide a summary of successful and failed operations.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of what the multi-replace operation will accomplish."},"replacements":{"type":"array","description":"An array of replacement operations to apply sequentially.","items":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of this specific replacement operation."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string is not the exact literal text or does not match exactly, this replacement will fail."},"newString":{"type":"string","description":"The exact literal text to replace `oldString` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["explanation","filePath","oldString","newString"]},"minItems":1}},"required":["explanation","replacements"]}},{"name":"copilot_editNotebook","toolReferenceName":"editNotebook","displayName":"Edit Notebook","modelDescription":"This is a tool for editing an existing Notebook file in the workspace. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the notebooks.\nWhen updating the content of an existing cell, ensure newCode preserves whitespace and indentation exactly and does NOT include any code markers such as (...existing code...).","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file to edit, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1."},"cellId":{"type":"string","description":"Id of the cell that needs to be deleted or edited. Use the value `TOP`, `BOTTOM` when inserting a cell at the top or bottom of the notebook, else provide the id of the cell after which a new cell is to be inserted. Remember, if a cellId is provided and editType=insert, then a cell will be inserted after the cell with the provided cellId."},"newCode":{"anyOf":[{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags. Do NOT include code markers such as (...existing code...) to indicate existing code."},{"type":"array","items":{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags"}}]},"language":{"type":"string","description":"The language of the cell. `markdown`, `python`, `javascript`, `julia`, etc."},"editType":{"type":"string","enum":["insert","delete","edit"],"description":"The operation peformed on the cell, whether `insert`, `delete` or `edit`.\nUse the `editType` field to specify the operation: `insert` to add a new cell, `edit` to modify an existing cell's content, and `delete` to remove a cell."}},"required":["filePath","editType","cellId"]}},{"name":"copilot_runNotebookCell","displayName":"Run Notebook Cell","toolReferenceName":"runCell","icon":"$(play)","modelDescription":"This is a tool for running a code cell in a notebook file directly in the notebook editor. The output from the execution will be returned. Code cells should be run as they are added or edited when working through a problem to bring the kernel state up to date and ensure the code executes successfully. Code cells are ready to run and don't require any pre-processing. If asked to run the first cell in a notebook, you should run the first code cell since markdown cells cannot be executed. NOTE: Avoid executing Markdown cells or providing Markdown cell IDs, as Markdown cells cannot be  executed.","userDescription":"Trigger the execution of a cell in a notebook file","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"reason":{"type":"string","description":"An optional explanation of why the cell is being run. This will be shown to the user before the tool is run and is not necessary if it's self-explanatory."},"cellId":{"type":"string","description":"The ID for the code cell to execute. Avoid providing markdown cell IDs as nothing will be executed."},"continueOnError":{"type":"boolean","description":"Whether or not execution should continue for remaining cells if an error is encountered. Default to false unless instructed otherwise."}},"required":["filePath","cellId"]}},{"name":"copilot_getNotebookSummary","toolReferenceName":"getNotebookSummary","displayName":"Get the structure of a notebook","modelDescription":"This is a tool returns the list of the Notebook cells along with the id, cell types, line ranges, language, execution information and output mime types for each cell. This is useful to get Cell Ids when executing a notebook or determine what cells have been executed and what order, or what cells have outputs. If required to read contents of a cell use this to determine the line range of a cells, and then use read_file tool to read a specific line range. Requery this tool if the contents of the notebook change.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"}},"required":["filePath"]}},{"name":"copilot_readNotebookCellOutput","displayName":"Get Notebook Cell Output","toolReferenceName":"readNotebookCellOutput","icon":"$(notebook-render-output)","modelDescription":"This tool will retrieve the output for a notebook cell from its most recent execution or restored from disk. The cell may have output even when it has not been run in the current kernel session. This tool has a higher token limit for output length than the runNotebookCell tool.","userDescription":"Read the output of a previously executed cell","when":"userHasOpenedNotebook","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"cellId":{"type":"string","description":"The ID of the cell for which output should be retrieved."}},"required":["filePath","cellId"]}},{"name":"copilot_fetchWebPage","displayName":"Fetch Web Page","toolReferenceName":"fetch","when":"!isWeb","canBeReferencedInPrompt":true,"icon":"$(globe)","userDescription":"Fetch the main content from a web page. You should include the URL of the page you want to fetch.","modelDescription":"Fetches the main content from a web page. This tool is useful for summarizing or analyzing the content of a webpage. You should use this tool when you think the user is looking for information from a specific webpage.","tags":[],"inputSchema":{"type":"object","properties":{"urls":{"type":"array","items":{"type":"string"},"description":"An array of URLs to fetch content from."},"query":{"type":"string","description":"The query to search for in the web page's content. This should be a clear and concise description of the content you want to find."}},"required":["urls","query"]}},{"name":"copilot_findTestFiles","displayName":"Find Test Files","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"findTestFiles","userDescription":"For a source code file, find the file that contains the tests. For a test file, find the file that contains the code under test","modelDescription":"For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_getDocInfo","displayName":"Doc Info","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"docInfo","userDescription":"For a symbol like a class or function, find the information about how to document it","modelDescription":"Find information about how to document it a symbol like a class or function. This tool is useful for generating documentation comments for code symbols. You should use this tool when you think the user is looking for information about how to document a specific code symbol.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"},"description":"The file paths for which documentation information is needed."}},"required":["filePaths"]}},{"name":"copilot_getSearchResults","toolReferenceName":"searchResults","displayName":"Search View Results","icon":"$(search)","userDescription":"The results from the search view","modelDescription":"The results from the search view"},{"name":"copilot_githubRepo","toolReferenceName":"githubRepo","displayName":"Search GitHub Repository","modelDescription":"Searches a GitHub repository for relevant source code snippets. Only use this tool if the user is very clearly asking for code snippets from a specific GitHub repository. Do not use this tool for Github repos that the user has open in their workspace.","userDescription":"Searches a GitHub repository for relevant source code snippets. You can specify a repository using `owner/repo`","icon":"$(repo)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"repo":{"type":"string","description":"The name of the Github repository to search for code in. Should must be formatted as '<owner>/<repo>'."},"query":{"type":"string","description":"The query to search for repo. Should contain all relevant context."}},"required":["repo","query"]}},{"name":"copilot_toolReplay","modelDescription":"Replays a tool call from a previous chat session.","displayName":"tool replay","when":"false","inputSchema":{"type":"object","properties":{"toolCallId":{"type":"string","description":"the id of the tool original tool call"},"toolName":{"type":"string","description":"the name of the tool being replayed"},"toolCallArgs":{"type":"object","description":"the arguments of the tool call"}}}},{"name":"copilot_editFiles","modelDescription":"This is a placeholder tool, do not use","userDescription":"Edit files","icon":"$(pencil)","displayName":"Edit Files","toolReferenceName":"editFiles"}],"languageModelToolSets":[{"name":"edit","description":"Edit files in your workspace","icon":"$(pencil)","tools":["createFile","createDirectory","editNotebook","newJupyterNotebook","editFiles"]},{"name":"runNotebooks","description":"Run notebook cells","icon":"$(notebook)","tools":["runCell","getNotebookSummary","readNotebookCellOutput"]},{"name":"search","description":"Search and read files in your workspace","icon":"$(search)","tools":["fileSearch","textSearch","listDirectory","readFile","codebase","searchResults"]},{"name":"new","description":"Scaffold a new workspace with VS Code-specific configurations to compile, debug and run new projects.","icon":"$(new-folder)","tools":["newWorkspace","runVscodeCommand","getProjectSetupInfo","installExtension"]}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["panel"],"modes":["ask"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"add_feature_to_file","description":"The user wants to change code in a file that is provided in their request, without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Add a refresh button to the table widget."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"!config.chat.edits2.enabled"},{"id":"github.copilot.editingSessionEditor","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","locations":["editor","notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"tests","description":"Generate unit tests for the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"tests","description":"Help writing tests for the selected code","examples":["Help me write tests for the selected code."]}]},{"name":"doc","description":"Add documentation comment for this symbol","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]}]},{"id":"github.copilot.editingSession2","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"config.chat.edits2.enabled"},{"id":"github.copilot.editsAgent","name":"agent","fullName":"GitHub Copilot","description":"Edit files in your workspace in agent mode","locations":["panel"],"modes":["agent"],"isEngine":true,"isDefault":true,"isAgent":true,"when":"config.chat.agent.enabled","commands":[{"name":"list"},{"name":"error","description":"Make a model request which will result in an error","when":"github.copilot.chat.debug"}]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["editor"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"unknown","description":"Intent of this command is unclear or is not related to information technologies","examples":["Add a dog to this comment."]}],"commands":[{"name":"generate","description":"Generate new code","disambiguation":[{"category":"generate","description":"Generate new code","examples":["Add a function that returns the sum of two numbers"]}]},{"name":"edit","description":"Edit the selected code in your active editor","disambiguation":[{"category":"edit","description":"Make changes to existing code","examples":["Change this method to use async/await"]}]},{"name":"doc","description":"Add documentation comment for this symbol","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"explain","description":"Explain how the code in your active editor works","disambiguation":[{"category":"explain","description":"Explain how the code in your active editor works","examples":["Write an explanation for the code above as paragraphs of text."]}]},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"tests","description":"Generate unit tests for the selected code. The user does not want to fix their existing tests.","examples":["Write a set of detailed unit test functions for the code above."]}]}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.notebookEditorAgent","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"config.inlineChat.enableV2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"find_code_in_workspace","description":"The user wants to locate the implementation of some functionality in their current workspace.","examples":["Where is the tree widget implemented?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete Visual Studio Code workspace from scratch, such as a new application or a Visual Studio Code extension. Use this category only if the question relates to generating or creating new workspaces in Visual Studio Code. Do not use this category for updating existing code or generating sample code snippets","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner. The user does not want to fix their existing tests.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code. Use this category if the users question is specifically about commands, settings, keybindings, extensions and other features available in Visual Studio Code. Do not use this category to answer questions about generating code or creating new projects including Visual Studio Code extensions.","examples":["Switch to light mode.","Keyboard shortcut to toggle terminal visibility.","Settings to enable minimap.","Whats new in the latest release?"]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask about commands","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]},{"id":"github.copilot.chatReplay","name":"chatReplay","fullName":"Chat Replay","when":"debugType == 'vscode-chat-replay'","locations":["panel"]}],"languageModelChatProviders":[{"vendor":"copilot","displayName":"Copilot"},{"vendor":"azure","displayName":"Azure","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"anthropic","displayName":"Anthropic","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"xai","displayName":"xAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"ollama","displayName":"Ollama"},{"vendor":"openai","displayName":"OpenAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"gemini","displayName":"Google","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"groq","displayName":"Groq","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"openrouter","displayName":"OpenRouter","managementCommand":"github.copilot.chat.manageBYOK"}],"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"Debug using a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or in an [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in to enable features powered by GitHub Copilot.\n\n[Sign in](command:workbench.action.chat.triggerSetupForceSignIn)","when":"!github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled && !github.copilot.interactiveSession.switchToReleaseChannel"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"The Pre-Release version of the GitHub Copilot Chat extension is not currently supported in the stable version of VS Code. Please switch to the release version for GitHub Copilot Chat or try VS Code Insiders.\n\n[Switch to Release Version and Reload](command:runCommands?%7B%22commands%22%3A%5B%7B%22command%22%3A%22workbench.extensions.action.switchToRelease%22%2C%22args%22%3A%5B%22GitHub.copilot-chat%22%5D%7D%2C%22workbench.action.reloadWindow%22%5D%7D)\n\n[Switch to VS Code Insiders](https://aka.ms/vscode-insiders)","when":"github.copilot.interactiveSession.switchToReleaseChannel"}],"commands":[{"command":"github.copilot.chat.replay","title":"Start Chat Replay","icon":"$(debug-line-by-line)"},{"command":"github.copilot.chat.replay.enableWorkspaceEditTracing","title":"Enable Chat Edit Tracing","category":"Developer","enablement":"!github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.replay.disableWorkspaceEditTracing","title":"Disable Chat Edit Tracing","category":"Developer","enablement":"github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.review","title":"Review","enablement":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedChanges","title":"Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes","title":"Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.openUserPreferences","title":"Open User Preferences","category":"GitHub Copilot","enablement":"config.github.copilot.chat.enableUserPreferences"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.debug.showChatLogView","title":"Show Chat Debug View","category":"Developer"},{"command":"github.copilot.debug.showContextInspectorView","title":"Inspect Language Context","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.debug.resetVirtualToolGroups","title":"Reset Virtual Tool Groups","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.debug.collectDiagnostics","title":"GitHub Copilot Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.clearCache","title":"GitHub Copilot Chat Clear Next Edit Cache","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.reportNotebookNESIssue","title":"Report Notebook Next Edit Issue","enablement":"config.github.copilot.chat.advanced.notebook.alternativeNESFormat.enabled || github.copilot.chat.enableEnhancedNotebookNES","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration with GitHub Copilot","category":"GitHub Copilot","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"GitHub Copilot"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"GitHub Copilot","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.buildRemoteWorkspaceIndex","title":"Build Remote Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"GitHub Copilot"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"},{"command":"github.copilot.chat.clearTemporalContext","title":"Clear Temporal Context","category":"GitHub Copilot (Developer)"},{"command":"github.copilot.search.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.feedback","title":"Feedback","icon":"$(feedback)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.chat.debug.showElements","title":"Show Rendered Elements"},{"command":"github.copilot.chat.debug.hideElements","title":"Hide Rendered Elements"},{"command":"github.copilot.chat.debug.showTools","title":"Show Tools"},{"command":"github.copilot.chat.debug.hideTools","title":"Hide Tools"},{"command":"github.copilot.chat.debug.showNesRequests","title":"Show NES Requests"},{"command":"github.copilot.chat.debug.hideNesRequests","title":"Hide NES Requests"},{"command":"github.copilot.chat.debug.exportLogItem","title":"Export as...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportPromptArchive","title":"Export All as Archive...","icon":"$(archive)"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","title":"Export All as JSON...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","title":"Export All Prompt Logs as JSON...","icon":"$(export)"},{"command":"github.copilot.debug.collectWorkspaceIndexDiagnostics","title":"Collect Workspace Index Diagnostics","category":"Developer"},{"command":"github.copilot.chat.mcp.setup.check","title":"MCP Check: is supported"},{"command":"github.copilot.chat.mcp.setup.validatePackage","title":"MCP Check: validate package"},{"command":"github.copilot.chat.mcp.setup.flow","title":"MCP Check: do prompts"},{"command":"github.copilot.chat.generateAltText","title":"Generate/Refine Alt Text"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","title":"Enable Follow Cell Execution from Chat","shortTitle":"Follow","icon":"$(pinned)"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","title":"Disable Follow Cell Execution from Chat","shortTitle":"Unfollow","icon":"$(pinned-dirty)"},{"command":"github.copilot.chat.manageBYOK","title":"Manage Bring Your Own Key Vendor","enablement":"false"},{"command":"github.copilot.chat.configureCustomOAIModels","title":"Configure Custom OpenAI-Compatible Models","category":"GitHub Copilot"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance. [Learn more](https://aka.ms/github-copilot-custom-instructions) about customizing Copilot."},"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.nextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to enable next edit suggestions (NES).\n\nNES can propose a next edit based on your recent changes. [Learn more](https://aka.ms/vscode-nes) about next edit suggestions.","scope":"language-overridable"},"github.copilot.nextEditSuggestions.fixes":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to offer fixes for diagnostics via next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.nextEditSuggestions.allowWhitespaceOnlyChanges":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to allow whitespace-only changes be proposed by next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.chat.agent.autoFix":{"type":"boolean","default":true,"description":"Automatically fix diagnostics for edited files."},"github.copilot.chat.customInstructionsInSystemMessage":{"type":"boolean","default":true,"description":"When enabled, custom instructions and mode instructions will be appended to the system message instead of a user message."}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewAgent.enabled":{"type":"boolean","default":true,"description":"Enables the code review agent.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-review-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-review-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-review-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."},"github.copilot.chat.codesearch.enabled":{"type":"boolean","default":false,"tags":["preview"],"markdownDescription":"Whether to enable agentic codesearch when using `#codebase`."},"github.copilot.chat.byok.ollamaEndpoint":{"type":"string","default":"http://localhost:11434","tags":["preview"],"markdownDescription":"The endpoint to use for the Ollama when accessed via bring your own key. Defaults to localhost."}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.agent.thinkingTool":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Enables the thinking tool that allows Copilot to think deeply about your request before generating a response in agent mode."},"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-codeGeneration-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-codeGeneration-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-codeGeneration-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.pullRequestDescriptionGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"file":{"type":"string","examples":[".copilot-pull-request-description-instructions.md"]}},"examples":[{"file":".copilot-pull-request-description-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"text":{"type":"string","examples":["Include every commit message in the pull request description."]}},"required":["text"],"examples":[{"text":"Include every commit message in the pull request description."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate pull request titles and descriptions.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Always include a list of key changes.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-pull-request-description-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.edits.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making edits request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.editor.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making inline chat request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.languageContext.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline completions"},"github.copilot.chat.languageContext.typescript.cacheTimeout":{"type":"number","default":500,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"The cache population timeout for the TypeScript language context provider in milliseconds. The default is 500 milliseconds."},"github.copilot.chat.languageContext.fix.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for /fix commands"},"github.copilot.chat.languageContext.inline.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline chats (both generate and edit)"},"github.copilot.chat.newWorkspaceCreation.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"Whether to enable new agentic workspace creation."},"github.copilot.chat.newWorkspace.useContext7":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Whether to use the [Context7](command:github.copilot.mcp.viewContext7) tools to scaffold project for new workspace creation."},"github.copilot.chat.agent.currentEditorContext.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"When enabled, Copilot will include the name of the current active editor in the context for agent mode."},"github.copilot.chat.notebook.followCellExecution.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Controls whether the currently executing cell is revealed into the viewport upon execution from Copilot."},"github.copilot.chat.notebook.enhancedNextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["experimental","onExp"],"description":"Controls whether to use an enhanced approach for generating next edit suggestions in notebook cells."},"github.copilot.chat.summarizeAgentConversationHistory.enabled":{"type":"boolean","default":true,"tags":["experimental","onExp"],"description":"Whether to auto-summarize agent conversation history once the context window is filled."},"github.copilot.chat.virtualTools.threshold":{"type":"number","minimum":0,"maximum":128,"default":128,"tags":["experimental"],"markdownDescription":"This setting defines the tool count over which virtual tools should be used. Virtual tools group similar sets of tools together and they allow the model to activate them on-demand. Certain tool groups will optimistically be pre-activated. We are actively developing this feature and you experience degraded tool calling once the threshold is hit.\n\nMay be set to `0` to disable virtual tools."},"github.copilot.chat.azureModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the Azure model"},"url":{"type":"string","description":"URL endpoint for the Azure model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens"],"additionalProperties":false},"markdownDescription":"Configure custom Azure OpenAI models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.customOAIModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the custom OpenAI model"},"url":{"type":"string","description":"URL endpoint for the custom OpenAI-compatible model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"requiresAPIKey":{"type":"boolean","description":"Whether the model requires an API key for authentication","default":true},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens","requiresAPIKey"],"additionalProperties":false},"markdownDescription":"Configure custom OpenAI-compatible models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.alternateGptPrompt.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Enables an experimental alternate prompt for GPT models instead of the default prompt."},"github.copilot.chat.gpt5AlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for GPT-5 models."},"github.copilot.chat.grokCodeAlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for Grok Code models."},"github.copilot.chat.useResponsesApi":{"type":"boolean","default":false,"markdownDescription":"Use the Responses API instead of the Chat Completions API when supported. Enables reasoning and reasoning summaries.\n\n**Note**: This is an experimental feature that is not yet activated for all users.","tags":["experimental","onExp"]},"github.copilot.chat.responsesApiReasoningEffort":{"type":"string","default":"default","markdownDescription":"Sets the reasoning effort used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["low","medium","high","default"]},"github.copilot.chat.responsesApiReasoningSummary":{"type":"string","default":"off","markdownDescription":"Sets the reasoning summary style used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["off","detailed"]}}}],"submenus":[{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"},{"id":"github.copilot.chat.debug.filter","label":"Filter","icon":"$(filter)"},{"id":"github.copilot.chat.debug.exportAllPromptLogsAsJson","label":"Export All Logs as JSON","icon":"$(file-export)"}],"menus":{"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.replay","group":"navigation@9","when":"resourceLangId == chatReplay"}],"editor/context":[{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"1_chat@4"}],"editor/context/chat":[{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@1"},{"command":"github.copilot.chat.review","when":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled && resourceScheme != 'vscode-chat-code-block'","group":"copilotAction@2"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@1"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@2"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.stagedFileChange","when":"false"},{"command":"github.copilot.chat.review.unstagedFileChange","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"},{"command":"github.copilot.search.markHelpful","when":"false"},{"command":"github.copilot.search.markUnhelpful","when":"false"},{"command":"github.copilot.search.feedback","when":"false"},{"command":"github.copilot.chat.debug.showElements","when":"false"},{"command":"github.copilot.chat.debug.hideElements","when":"false"},{"command":"github.copilot.chat.debug.showTools","when":"false"},{"command":"github.copilot.chat.debug.hideTools","when":"false"},{"command":"github.copilot.chat.debug.showNesRequests","when":"false"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"false"},{"command":"github.copilot.chat.debug.exportLogItem","when":"false"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"false"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.mcp.setup.check","when":"false"},{"command":"github.copilot.chat.mcp.setup.validatePackage","when":"false"},{"command":"github.copilot.chat.mcp.setup.flow","when":"false"}],"view/title":[{"submenu":"github.copilot.chat.debug.filter","when":"view == copilot-chat","group":"navigation"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"view == copilot-chat","group":"export@1"},{"command":"github.copilot.debug.showChatLogView","when":"view == workbench.panel.chat.view.copilot","group":"3_show"}],"view/item/context":[{"command":"github.copilot.chat.debug.exportLogItem","when":"view == copilot-chat && (viewItem == toolcall || viewItem == request)","group":"export@1"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"view == copilot-chat && viewItem == chatprompt","group":"export@2"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"view == copilot-chat && viewItem == chatprompt","group":"export@3"}],"searchPanel/aiResults/commands":[{"command":"github.copilot.search.markHelpful","group":"inline@0","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.markUnhelpful","group":"inline@1","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.feedback","group":"inline@2","when":"aiResultsTitle && aiResultsRequested && github.copilot.debugReportFeedback"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/resourceGroup/context":[{"command":"github.copilot.chat.review.stagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index","group":"inline@-3"},{"command":"github.copilot.chat.review.unstagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree","group":"inline@-3"}],"scm/resourceState/context":[{"command":"github.copilot.chat.review.stagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index"},{"command":"github.copilot.chat.review.unstagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}],"github.copilot.chat.debug.filter":[{"command":"github.copilot.chat.debug.showElements","when":"github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.hideElements","when":"!github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.showTools","when":"github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.hideTools","when":"!github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.showNesRequests","when":"github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"!github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"}],"notebook/toolbar":[{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]},{"id":"chatReplay","aliases":["chatReplay","Chat Replay"],"extensions":[".chatReplay.json",".chatreplay.json"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.showLogView"}],"context-inspector":[{"id":"context-inspector","name":"Language Context Inspector","icon":"$(inspect)","when":"github.copilot.chat.showContextInspectorView"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Copilot Chat Debug","icon":"assets/debug-icon.svg"},{"id":"context-inspector","title":"Language Context Inspector","icon":"$(inspect)"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatEntitlementSignedOut && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signInNoAction","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatEntitlementSignedOut && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatPlanCanSignUp && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUpNoAction","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatPlanCanSignUp && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22ask%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22edit%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hclight.mp4"},"altText":"The video shows the user dragging and dropping files into the Copilot Edits input box located in the secondary sidebar. Copilot then updates the file according to the user’s request"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hclight.mp4"},"altText":"The video shows different Copilot completions, where Copilot suggests code to help the user complete their code"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"Inline Chat view in the editor. The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!chatEntitlementSignedOut || chatIsEnabled","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hclight.mp4"},"altText":"The video shows the sparkle icon in the source control input box being clicked, triggering GitHub Copilot to generate a commit message automatically"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}],"chatSessions":[{"type":"claude-code","name":"claude","displayName":"Claude Code","description":"The Claude Code agent","when":"config.github.copilot.chat.advanced.claudeCode.enabled","capabilities":{"supportsFileAttachments":true,"supportsToolAttachments":false}}],"debuggers":[{"type":"vscode-chat-replay","label":"vscode-chat-replay","languages":["chatReplay"],"configurationAttributes":{"launch":{"properties":{"program":{"type":"string","description":"Chat replay file to debug (parse for headers)","default":"${file}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","default":true,"description":"Break immediately to step through manually.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"openExternally","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Open URI externally with the default application."],"markdownDescription":"What to do with the URI when the server is ready.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}","killOnServerStop":false},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Start debugging with the 'Debugger for Chrome'."],"markdownDescription":"What to do with the URI when the server is ready.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Value passed to the debug configuration for the 'Debugger for Chrome'.","default":"${workspaceFolder}"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","name":"<launch browser config name>","killOnServerStop":false},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Name of the launch configuration to run.","default":"Launch Browser"},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}},{"type":"object","additionalProperties":false,"markdownDescription":"Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)","default":{"action":"startDebugging","config":{"type":"node","request":"launch"},"killOnServerStop":false},"required":["config"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Run another launch configuration."],"markdownDescription":"What to do with the URI when the server is ready.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.","default":"listening on port ([0-9]+)"},"config":{"type":"object","markdownDescription":"The debug configuration to run.","default":{}},"killOnServerStop":{"type":"boolean","markdownDescription":"Stop the child session when the parent session stopped.","default":false}}}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["vscode-chat-replay"],"enumDescriptions":["vscode-chat-replay"],"description":"Type of configuration.","pattern":"^(?!node2)","doNotSuggest":false,"errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"$ref":"#/definitions/common/properties/name","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"$ref":"#/definitions/common/properties/debugServer","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"$ref":"#/definitions/common/properties/preLaunchTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"$ref":"#/definitions/common/properties/postDebugTask","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"presentation":{"$ref":"#/definitions/common/properties/presentation","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"$ref":"#/definitions/common/properties/internalConsoleOptions","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"suppressMultipleSessionWarning":{"$ref":"#/definitions/common/properties/suppressMultipleSessionWarning","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request","program"],"additionalProperties":false,"type":"object"}},"initialConfigurations":[{"type":"vscode-chat-replay","request":"launch","name":"Debug Chat Replay","program":"${file}","stopOnEntry":true}]}]},"extensionPack":["GitHub.copilot"],"prettier":{"useTabs":true,"tabWidth":4,"singleQuote":true},"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0","node-gyp":"npm:node-gyp@10.3.1"},"isPreRelease":false,"originalEnabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findTextInFiles2","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","aiSettingsSearch","chatParticipantAdditions","chatEditing","defaultChatParticipant@4","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@10","chatProvider@4","contribDebugCreateConfiguration","chatReferenceDiagnostic","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions","languageModelDataPart@3","chatStatusItem","taskProblemMatcherStatus","contribLanguageModelToolSets","textDocumentChangeReason","resolvers","taskExecutionTerminal","dataChannels","languageModelThinkingPart","chatSessionsProvider"]},{"id":"ms-playwright.playwright","identifier":{"value":"ms-playwright.playwright","_lower":"ms-playwright.playwright"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/ms-playwright.playwright-1.1.15","path":"/root/.vscode/extensions/ms-playwright.playwright-1.1.15","scheme":"file"},"uuid":"f53b1d43-eef4-4909-99ca-56b5fa3e108c","targetPlatform":"undefined","publisherDisplayName":"Microsoft","preRelease":false,"name":"playwright","displayName":"Playwright Test for VSCode","description":"Run Playwright Test tests in Visual Studio Code.","icon":"images/playwright-logo.png","version":"1.1.15","publisher":"ms-playwright","repository":"https://github.com/microsoft/playwright-vscode","bugs":{"url":"https://github.com/microsoft/playwright/issues"},"engines":{"vscode":"^1.93.0"},"categories":["Testing"],"activationEvents":["workspaceContains:**/*playwright*.config.{ts,js,mjs}"],"main":"./out/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Test","command":"pw.extension.install","title":"Install Playwright"},{"category":"Test","command":"pw.extension.installBrowsers","title":"Install Playwright Browsers"},{"category":"Test","command":"pw.extension.command.inspect","title":"Pick locator"},{"category":"Test","command":"pw.extension.command.closeBrowsers","title":"Close all Playwright browsers"},{"category":"Test","icon":"$(record)","command":"pw.extension.command.recordNew","title":"Record new"},{"category":"Test","icon":"$(record)","command":"pw.extension.command.recordAtCursor","title":"Record at cursor"},{"category":"Test","icon":"$(gear)","command":"pw.extension.command.toggleModels","title":"Toggle Playwright configs"},{"category":"Test","command":"pw.extension.toggle.reuseBrowser","title":"Toggle Playwright browser reuse"},{"category":"Test","command":"pw.extension.toggle.showTrace","title":"Toggle Playwright Trace Viewer"},{"category":"Test","command":"pw.extension.toggle.runGlobalSetupOnEachRun","title":"Toggle Playwright global setup reuse"},{"category":"Test","command":"pw.extension.toggle.pickLocatorCopyToClipboard","title":"Toggle Playwright locator picker automatically copying to clipboard"},{"category":"Test","command":"pw.extension.command.runGlobalSetup","title":"Run global setup"},{"category":"Test","command":"pw.extension.command.runGlobalTeardown","title":"Run global teardown"},{"category":"Test","command":"pw.extension.command.startDevServer","title":"Start dev server"},{"category":"Test","command":"pw.extension.command.stopDevServer","title":"Stop dev server"},{"category":"Test","command":"pw.extension.command.clearCache","title":"Clear cache"}],"configuration":{"title":"Playwright","properties":{"playwright.env":{"type":"object","default":{},"description":"Environment variables to pass to Playwright Test."},"playwright.reuseBrowser":{"type":"boolean","default":false,"description":"Show & reuse browser between tests."},"playwright.showTrace":{"type":"boolean","default":false,"description":"Show Trace Viewer."},"playwright.runGlobalSetupOnEachRun":{"type":"boolean","default":false,"description":"Run global setup on each run."},"playwright.pickLocatorCopyToClipboard":{"type":"boolean","default":false,"description":"Automatically copy picked locator to clipboard."},"playwright.updateSnapshots":{"type":"string","enum":["all","changed","missing","none"],"default":"missing","description":"Update snapshots"},"playwright.updateSourceMethod":{"type":"string","enum":["overwrite","patch","3way"],"default":"3way","description":"Update source method"}}},"viewsContainers":{"panel":[{"id":"playwrightContainer","title":"Playwright","icon":"images/playwright-logo.png"}]},"views":{"test":[{"type":"webview","id":"pw.extension.settingsView","name":"Playwright"}],"playwrightContainer":[{"type":"webview","id":"pw.extension.locatorsView","name":"Locators"}]}},"scripts":{"esbuild":"esbuild ./src/babelBundle.ts ./src/extension.ts ./src/oopReporter.ts ./src/debugTransform.ts ./src/playwrightFinder.ts ./src/*.script.ts --bundle --outdir=out --external:vscode --external:./babelBundle --external:./debugTransform --external:./oopReporter --external:./playwrightFinder --external:./*.script.ts --format=cjs --platform=node --target=ES2019","build":"npm run esbuild -- --minify","watch":"npm run esbuild -- --sourcemap --watch","l10n":"npx @vscode/l10n-dev export -o ./l10n ./src","lint":"tsc && eslint . --ext .ts,.tsx,.js","test":"playwright test","package":"npm run build && vsce package","code":"code --uninstall-extension ms-playwright.playwright && code --install-extension playwright-0.2.11.vsix","uncode":"code --uninstall-extension ms-playwright.playwright","code-insiders":"code-insiders --uninstall-extension ms-playwright.playwright && code-insiders --install-extension playwright-0.2.11.vsix","uncode-insiders":"code-insiders --uninstall-extension ms-playwright.playwright"},"devDependencies":{"@babel/preset-typescript":"^7.23.2","@playwright/test":"^1.53.0-alpha-2025-06-02","@types/babel__core":"^7.20.3","@types/babel__helper-plugin-utils":"^7.10.2","@types/babel__traverse":"^7.20.3","@types/glob":"^8.0.0","@types/node":"^18.11.9","@types/stack-utils":"^2.0.1","@types/vscode":"1.93.0","@types/which":"^3.0.3","@types/ws":"^8.5.3","@typescript-eslint/eslint-plugin":"^7.3.1","@typescript-eslint/parser":"^7.3.1","@vscode/l10n-dev":"^0.0.24","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.0.0","esbuild":"^0.25.0","eslint":"^8.57.0","eslint-plugin-notice":"^0.9.10","eslint-plugin-react-hooks":"^4.6.0","glob":"^8.0.3","minimatch":"^10.0.1","typescript":"^5.4.3"},"dependencies":{"@babel/core":"^7.23.2","@babel/helper-plugin-utils":"^7.22.5","@babel/plugin-proposal-decorators":"^7.24.7","@babel/traverse":"^7.23.2","stack-utils":"^2.0.6","which":"^4.0.0","ws":"^8.17.1"}},{"id":"ms-vscode.vscode-typescript-next","identifier":{"value":"ms-vscode.vscode-typescript-next","_lower":"ms-vscode.vscode-typescript-next"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/ms-vscode.vscode-typescript-next-6.0.20250922","path":"/root/.vscode/extensions/ms-vscode.vscode-typescript-next-6.0.20250922","scheme":"file"},"uuid":"15305aca-2588-4ca0-8147-ab2c64730b82","targetPlatform":"undefined","publisherDisplayName":"Microsoft","preRelease":false,"name":"vscode-typescript-next","displayName":"JavaScript and TypeScript Nightly","description":"Enables typescript@next to power VS Code's built-in JavaScript and TypeScript support","icon":"documentation/logo.png","private":true,"publisher":"ms-vscode","version":"6.0.20250922","engines":{"vscode":"^1.36.0"},"extensionKind":["workspace"],"workspaceTrust":{"request":"never"},"scripts":{"bump-version":"npm install typescript@next && node ./build/updatePackageVersion.js","update-grammar":"node ./build/updateGrammar.js"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode-typescript-next.git"},"bugs":{"url":"https://github.com/microsoft/vscode-typescript-next/issues"},"keywords":["JavaScript","TypeScript","js","ts","nightly"],"author":"Microsoft","license":"MIT","dependencies":{"typescript":"^6.0.0-dev.20250922"},"devDependencies":{"@types/node":"^12.0.7","fast-plist":"0.1.1"},"contributes":{"grammars":[{"language":"javascriptreact","scopeName":"source.js.jsx","path":"./syntaxes/JavaScriptReact.tmLanguage.json","unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","punctuation.definition.tag"],"embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js.jsx":"javascriptreact","meta.embedded.expression.js":"javascriptreact"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"javascript","scopeName":"source.js","path":"./syntaxes/JavaScript.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js":"javascript","meta.embedded.expression.js":"javascript"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"typescript","scopeName":"source.ts","path":"./syntaxes/TypeScript.tmLanguage.json","unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","punctuation.definition.tag"],"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"typescriptreact","scopeName":"source.tsx","path":"./syntaxes/TypeScriptReact.tmLanguage.json","unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","punctuation.definition.tag"],"embeddedLanguages":{"meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","meta.tag.attributes.tsx":"typescriptreact","meta.embedded.expression.tsx":"typescriptreact"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}}]}},{"id":"YoavBls.pretty-ts-errors","identifier":{"value":"YoavBls.pretty-ts-errors","_lower":"yoavbls.pretty-ts-errors"},"isBuiltin":false,"isUserBuiltin":false,"isUnderDevelopment":false,"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/yoavbls.pretty-ts-errors-0.6.1","path":"/root/.vscode/extensions/yoavbls.pretty-ts-errors-0.6.1","scheme":"file"},"uuid":"1e149c89-8f97-447e-863d-1146f0ad1b70","targetPlatform":"undefined","publisherDisplayName":"yoavbls","preRelease":false,"name":"pretty-ts-errors","displayName":"Pretty TypeScript Errors","publisher":"YoavBls","description":"Make TypeScript errors prettier and more human-readable in VSCode","version":"0.6.1","icon":"assets/icon.png","repository":{"type":"git","url":"https://github.com/yoavbls/pretty-ts-errors"},"homepage":"https://github.com/yoavbls/pretty-ts-errors","sponsor":{"url":"https://github.com/sponsors/yoavbls"},"engines":{"vscode":"^1.77.0","node":"20.18.x"},"categories":["Programming Languages","Debuggers","Visualization","Other"],"galleryBanner":{"color":"#133b55","theme":"dark"},"activationEvents":["onLanguage:typescript","onLanguage:javascript","onLanguage:typescriptreact","onLanguage:javascriptreact","onLanguage:astro","onLanguage:svelte","onLanguage:vue","onLanguage:mdx","onLanguage:glimmer-js","onLanguage:glimmer-ts"],"main":"./dist/extension.js","browser":"./dist/extension.js","contributes":{"languages":[{"id":"type","extensions":[".type"]}],"grammars":[{"language":"type","scopeName":"source.type","path":"./syntaxes/type.tmGrammar.json"}]},"scripts":{"vscode:prepublish":"npm run package","compile":"node scripts/build","watch":"npm run compile -- --watch","build":"vsce package","package":"node scripts/build -- --production","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts & tsc --noEmit","test":"node ./out/test/runTest.js"},"devDependencies":{"@eslint/js":"^9.15.0","@types/eslint__js":"^8.42.3","@types/glob":"^8.1.0","@types/lz-string":"^1.5.0","@types/mocha":"^10.0.7","@types/node":"^20.17.7","@types/prettier":"^2.7.3","@types/vscode":"^1.70.0","@vscode/test-electron":"^2.4.1","esbuild":"^0.24.0","eslint":"^9.15.0","glob":"^8.1.0","mocha":"^10.6.0","path-browserify":"^1.0.1","typescript":"^5.7.2","typescript-eslint":"^8.15.0"},"dependencies":{"lz-string":"^1.5.0","prettier":"^2.8.8","ts-dedent":"^2.2.0","typedash":"^3.2.5","vscode-languageclient":"^9.0.1","vscode-languageserver-types":"^3.17.5","vscode-uri":"^3.0.8"}}],"myExtensions":[{"value":"vscode.bat","_lower":"vscode.bat"},{"value":"vscode.clojure","_lower":"vscode.clojure"},{"value":"vscode.coffeescript","_lower":"vscode.coffeescript"},{"value":"vscode.configuration-editing","_lower":"vscode.configuration-editing"},{"value":"vscode.cpp","_lower":"vscode.cpp"},{"value":"vscode.csharp","_lower":"vscode.csharp"},{"value":"vscode.css","_lower":"vscode.css"},{"value":"vscode.css-language-features","_lower":"vscode.css-language-features"},{"value":"vscode.dart","_lower":"vscode.dart"},{"value":"vscode.debug-auto-launch","_lower":"vscode.debug-auto-launch"},{"value":"vscode.debug-server-ready","_lower":"vscode.debug-server-ready"},{"value":"vscode.diff","_lower":"vscode.diff"},{"value":"vscode.docker","_lower":"vscode.docker"},{"value":"vscode.emmet","_lower":"vscode.emmet"},{"value":"vscode.extension-editing","_lower":"vscode.extension-editing"},{"value":"vscode.fsharp","_lower":"vscode.fsharp"},{"value":"vscode.git","_lower":"vscode.git"},{"value":"vscode.git-base","_lower":"vscode.git-base"},{"value":"vscode.github","_lower":"vscode.github"},{"value":"vscode.github-authentication","_lower":"vscode.github-authentication"},{"value":"vscode.go","_lower":"vscode.go"},{"value":"vscode.groovy","_lower":"vscode.groovy"},{"value":"vscode.grunt","_lower":"vscode.grunt"},{"value":"vscode.gulp","_lower":"vscode.gulp"},{"value":"vscode.handlebars","_lower":"vscode.handlebars"},{"value":"vscode.hlsl","_lower":"vscode.hlsl"},{"value":"vscode.html","_lower":"vscode.html"},{"value":"vscode.html-language-features","_lower":"vscode.html-language-features"},{"value":"vscode.ini","_lower":"vscode.ini"},{"value":"vscode.ipynb","_lower":"vscode.ipynb"},{"value":"vscode.jake","_lower":"vscode.jake"},{"value":"vscode.java","_lower":"vscode.java"},{"value":"vscode.javascript","_lower":"vscode.javascript"},{"value":"vscode.json","_lower":"vscode.json"},{"value":"vscode.json-language-features","_lower":"vscode.json-language-features"},{"value":"vscode.julia","_lower":"vscode.julia"},{"value":"vscode.latex","_lower":"vscode.latex"},{"value":"vscode.less","_lower":"vscode.less"},{"value":"vscode.log","_lower":"vscode.log"},{"value":"vscode.lua","_lower":"vscode.lua"},{"value":"vscode.make","_lower":"vscode.make"},{"value":"vscode.markdown","_lower":"vscode.markdown"},{"value":"vscode.markdown-language-features","_lower":"vscode.markdown-language-features"},{"value":"vscode.markdown-math","_lower":"vscode.markdown-math"},{"value":"vscode.media-preview","_lower":"vscode.media-preview"},{"value":"vscode.merge-conflict","_lower":"vscode.merge-conflict"},{"value":"vscode.microsoft-authentication","_lower":"vscode.microsoft-authentication"},{"value":"ms-vscode.js-debug","_lower":"ms-vscode.js-debug"},{"value":"ms-vscode.js-debug-companion","_lower":"ms-vscode.js-debug-companion"},{"value":"ms-vscode.vscode-js-profile-table","_lower":"ms-vscode.vscode-js-profile-table"},{"value":"vscode.builtin-notebook-renderers","_lower":"vscode.builtin-notebook-renderers"},{"value":"vscode.npm","_lower":"vscode.npm"},{"value":"vscode.objective-c","_lower":"vscode.objective-c"},{"value":"vscode.perl","_lower":"vscode.perl"},{"value":"vscode.php","_lower":"vscode.php"},{"value":"vscode.php-language-features","_lower":"vscode.php-language-features"},{"value":"vscode.powershell","_lower":"vscode.powershell"},{"value":"vscode.prompt","_lower":"vscode.prompt"},{"value":"vscode.pug","_lower":"vscode.pug"},{"value":"vscode.python","_lower":"vscode.python"},{"value":"vscode.r","_lower":"vscode.r"},{"value":"vscode.razor","_lower":"vscode.razor"},{"value":"vscode.references-view","_lower":"vscode.references-view"},{"value":"vscode.restructuredtext","_lower":"vscode.restructuredtext"},{"value":"vscode.ruby","_lower":"vscode.ruby"},{"value":"vscode.rust","_lower":"vscode.rust"},{"value":"vscode.scss","_lower":"vscode.scss"},{"value":"vscode.search-result","_lower":"vscode.search-result"},{"value":"vscode.shaderlab","_lower":"vscode.shaderlab"},{"value":"vscode.shellscript","_lower":"vscode.shellscript"},{"value":"vscode.simple-browser","_lower":"vscode.simple-browser"},{"value":"vscode.sql","_lower":"vscode.sql"},{"value":"vscode.swift","_lower":"vscode.swift"},{"value":"vscode.terminal-suggest","_lower":"vscode.terminal-suggest"},{"value":"vscode.theme-abyss","_lower":"vscode.theme-abyss"},{"value":"vscode.theme-defaults","_lower":"vscode.theme-defaults"},{"value":"vscode.theme-kimbie-dark","_lower":"vscode.theme-kimbie-dark"},{"value":"vscode.theme-monokai","_lower":"vscode.theme-monokai"},{"value":"vscode.theme-monokai-dimmed","_lower":"vscode.theme-monokai-dimmed"},{"value":"vscode.theme-quietlight","_lower":"vscode.theme-quietlight"},{"value":"vscode.theme-red","_lower":"vscode.theme-red"},{"value":"vscode.vscode-theme-seti","_lower":"vscode.vscode-theme-seti"},{"value":"vscode.theme-solarized-dark","_lower":"vscode.theme-solarized-dark"},{"value":"vscode.theme-solarized-light","_lower":"vscode.theme-solarized-light"},{"value":"vscode.theme-tomorrow-night-blue","_lower":"vscode.theme-tomorrow-night-blue"},{"value":"vscode.tunnel-forwarding","_lower":"vscode.tunnel-forwarding"},{"value":"vscode.typescript","_lower":"vscode.typescript"},{"value":"vscode.typescript-language-features","_lower":"vscode.typescript-language-features"},{"value":"vscode.vb","_lower":"vscode.vb"},{"value":"vscode.xml","_lower":"vscode.xml"},{"value":"vscode.yaml","_lower":"vscode.yaml"},{"value":"bradlc.vscode-tailwindcss","_lower":"bradlc.vscode-tailwindcss"},{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},{"value":"GitHub.copilot","_lower":"github.copilot"},{"value":"GitHub.copilot-chat","_lower":"github.copilot-chat"},{"value":"ms-playwright.playwright","_lower":"ms-playwright.playwright"},{"value":"ms-vscode.vscode-typescript-next","_lower":"ms-vscode.vscode-typescript-next"},{"value":"YoavBls.pretty-ts-errors","_lower":"yoavbls.pretty-ts-errors"}],"activationEvents":{"vscode.configuration-editing":["onProfile","onProfile:github","onLanguage:json","onLanguage:jsonc"],"vscode.css-language-features":["onLanguage:css","onLanguage:less","onLanguage:scss","onCommand:_css.applyCodeAction"],"vscode.debug-auto-launch":["onStartupFinished","onCommand:extension.node-debug.toggleAutoAttach"],"vscode.debug-server-ready":["onDebugResolve"],"vscode.emmet":["onCommand:emmet.expandAbbreviation","onLanguage","onCommand:editor.emmet.action.wrapWithAbbreviation","onCommand:editor.emmet.action.removeTag","onCommand:editor.emmet.action.updateTag","onCommand:editor.emmet.action.matchTag","onCommand:editor.emmet.action.balanceIn","onCommand:editor.emmet.action.balanceOut","onCommand:editor.emmet.action.prevEditPoint","onCommand:editor.emmet.action.nextEditPoint","onCommand:editor.emmet.action.mergeLines","onCommand:editor.emmet.action.selectPrevItem","onCommand:editor.emmet.action.selectNextItem","onCommand:editor.emmet.action.splitJoinTag","onCommand:editor.emmet.action.toggleComment","onCommand:editor.emmet.action.evaluateMathExpression","onCommand:editor.emmet.action.updateImageSize","onCommand:editor.emmet.action.incrementNumberByOneTenth","onCommand:editor.emmet.action.incrementNumberByOne","onCommand:editor.emmet.action.incrementNumberByTen","onCommand:editor.emmet.action.decrementNumberByOneTenth","onCommand:editor.emmet.action.decrementNumberByOne","onCommand:editor.emmet.action.decrementNumberByTen","onCommand:editor.emmet.action.reflectCSSValue","onCommand:workbench.action.showEmmetCommands"],"vscode.extension-editing":["onLanguage:json","onLanguage:markdown"],"vscode.git":["*","onEditSession:file","onFileSystem:git","onFileSystem:git-show","onCommand:git.continueInLocalClone","onCommand:git.clone","onCommand:git.cloneRecursive","onCommand:git.init","onCommand:git.openRepository","onCommand:git.reopenClosedRepositories","onCommand:git.close","onCommand:git.closeOtherRepositories","onCommand:git.openWorktree","onCommand:git.openWorktreeInNewWindow","onCommand:git.refresh","onCommand:git.compareWithWorkspace","onCommand:git.openChange","onCommand:git.openAllChanges","onCommand:git.openFile","onCommand:git.openFile2","onCommand:git.openHEADFile","onCommand:git.stage","onCommand:git.stageAll","onCommand:git.stageAllTracked","onCommand:git.stageAllUntracked","onCommand:git.stageAllMerge","onCommand:git.stageSelectedRanges","onCommand:git.diff.stageHunk","onCommand:git.diff.stageSelection","onCommand:git.revertSelectedRanges","onCommand:git.stageChange","onCommand:git.stageFile","onCommand:git.revertChange","onCommand:git.unstage","onCommand:git.unstageAll","onCommand:git.unstageSelectedRanges","onCommand:git.unstageChange","onCommand:git.unstageFile","onCommand:git.clean","onCommand:git.cleanAll","onCommand:git.cleanAllTracked","onCommand:git.cleanAllUntracked","onCommand:git.rename","onCommand:git.commit","onCommand:git.commitAmend","onCommand:git.commitSigned","onCommand:git.commitStaged","onCommand:git.commitEmpty","onCommand:git.commitStagedSigned","onCommand:git.commitStagedAmend","onCommand:git.commitAll","onCommand:git.commitAllSigned","onCommand:git.commitAllAmend","onCommand:git.commitNoVerify","onCommand:git.commitStagedNoVerify","onCommand:git.commitEmptyNoVerify","onCommand:git.commitStagedSignedNoVerify","onCommand:git.commitAmendNoVerify","onCommand:git.commitSignedNoVerify","onCommand:git.commitStagedAmendNoVerify","onCommand:git.commitAllNoVerify","onCommand:git.commitAllSignedNoVerify","onCommand:git.commitAllAmendNoVerify","onCommand:git.commitMessageAccept","onCommand:git.commitMessageDiscard","onCommand:git.restoreCommitTemplate","onCommand:git.undoCommit","onCommand:git.checkout","onCommand:git.graph.checkout","onCommand:git.checkoutDetached","onCommand:git.graph.checkoutDetached","onCommand:git.branch","onCommand:git.branchFrom","onCommand:git.deleteBranch","onCommand:git.graph.deleteBranch","onCommand:git.deleteRemoteBranch","onCommand:git.renameBranch","onCommand:git.merge","onCommand:git.mergeAbort","onCommand:git.rebase","onCommand:git.createTag","onCommand:git.deleteTag","onCommand:git.migrateWorktreeChanges","onCommand:git.createWorktree","onCommand:git.deleteWorktree","onCommand:git.deleteWorktreeFromPalette","onCommand:git.graph.deleteTag","onCommand:git.deleteRemoteTag","onCommand:git.fetch","onCommand:git.fetchPrune","onCommand:git.fetchAll","onCommand:git.fetchRef","onCommand:git.pull","onCommand:git.pullRebase","onCommand:git.pullFrom","onCommand:git.pullRef","onCommand:git.push","onCommand:git.pushForce","onCommand:git.pushTo","onCommand:git.pushToForce","onCommand:git.pushTags","onCommand:git.pushWithTags","onCommand:git.pushWithTagsForce","onCommand:git.pushRef","onCommand:git.cherryPick","onCommand:git.graph.cherryPick","onCommand:git.cherryPickAbort","onCommand:git.addRemote","onCommand:git.removeRemote","onCommand:git.sync","onCommand:git.syncRebase","onCommand:git.publish","onCommand:git.showOutput","onCommand:git.ignore","onCommand:git.revealInExplorer","onCommand:git.revealFileInOS.linux","onCommand:git.revealFileInOS.mac","onCommand:git.revealFileInOS.windows","onCommand:git.stashIncludeUntracked","onCommand:git.stash","onCommand:git.stashStaged","onCommand:git.stashPop","onCommand:git.stashPopLatest","onCommand:git.stashPopEditor","onCommand:git.stashApply","onCommand:git.stashApplyLatest","onCommand:git.stashApplyEditor","onCommand:git.stashDrop","onCommand:git.stashDropAll","onCommand:git.stashDropEditor","onCommand:git.stashView","onCommand:git.timeline.openDiff","onCommand:git.timeline.copyCommitId","onCommand:git.timeline.copyCommitMessage","onCommand:git.timeline.selectForCompare","onCommand:git.timeline.compareWithSelected","onCommand:git.timeline.viewCommit","onCommand:git.rebaseAbort","onCommand:git.closeAllDiffEditors","onCommand:git.closeAllUnmodifiedEditors","onCommand:git.api.getRepositories","onCommand:git.api.getRepositoryState","onCommand:git.api.getRemoteSources","onCommand:git.acceptMerge","onCommand:git.openMergeEditor","onCommand:git.runGitMerge","onCommand:git.runGitMergeDiff3","onCommand:git.manageUnsafeRepositories","onCommand:git.openRepositoriesInParentFolders","onCommand:git.viewChanges","onCommand:git.viewStagedChanges","onCommand:git.viewUntrackedChanges","onCommand:git.viewCommit","onCommand:git.copyCommitId","onCommand:git.copyCommitMessage","onCommand:git.blame.toggleEditorDecoration","onCommand:git.blame.toggleStatusBarItem"],"vscode.git-base":["*","onCommand:git-base.api.getRemoteSources","onLanguage:git-commit","onLanguage:git-rebase","onLanguage:ignore"],"vscode.github":["*","onCommand:github.publish","onCommand:github.copyVscodeDevLink","onCommand:github.copyVscodeDevLinkFile","onCommand:github.copyVscodeDevLinkWithoutRange","onCommand:github.openOnVscodeDev","onCommand:github.graph.openOnGitHub","onCommand:github.timeline.openOnGitHub"],"vscode.github-authentication":["onAuthenticationRequest:github","onAuthenticationRequest:github-enterprise"],"vscode.grunt":["onTaskType:grunt","onTaskType:grunt"],"vscode.gulp":["onTaskType:gulp","onTaskType:gulp"],"vscode.html-language-features":["onLanguage:html","onLanguage:handlebars"],"vscode.ipynb":["onNotebook:jupyter-notebook","onNotebookSerializer:interactive","onNotebookSerializer:repl","onCommand:ipynb.newUntitledIpynb","onCommand:ipynb.openIpynbInNotebookEditor","onCommand:ipynb.cleanInvalidImageAttachment","onCommand:notebook.cellOutput.copy","onCommand:notebook.cellOutput.addToChat","onCommand:notebook.cellOutput.openInTextEditor","onNotebookSerializer:jupyter-notebook","onRenderer:vscode.markdown-it-cell-attachment-renderer"],"vscode.jake":["onTaskType:jake","onTaskType:jake"],"vscode.json-language-features":["onLanguage:json","onLanguage:jsonc","onLanguage:snippets","onCommand:json.validate","onCommand:json.clearCache","onCommand:json.sort"],"vscode.markdown-language-features":["onLanguage:markdown","onLanguage:prompt","onLanguage:instructions","onLanguage:chatmode","onCommand:markdown.api.render","onCommand:markdown.api.reloadPlugins","onWebviewPanel:markdown.preview","onRenderer:vscode.markdown-it-renderer","onCommand:_markdown.copyImage","onCommand:_markdown.openImage","onCommand:markdown.showPreview","onCommand:markdown.showPreviewToSide","onCommand:markdown.showLockedPreviewToSide","onCommand:markdown.showSource","onCommand:markdown.showPreviewSecuritySelector","onCommand:markdown.preview.refresh","onCommand:markdown.preview.toggleLock","onCommand:markdown.findAllFileReferences","onCommand:markdown.editor.insertLinkFromWorkspace","onCommand:markdown.editor.insertImageFromWorkspace","onCustomEditor:vscode.markdown.preview.editor"],"vscode.markdown-math":["onRenderer:vscode.markdown-it-katex-extension"],"vscode.media-preview":["onCustomEditor:imagePreview.previewEditor","onCustomEditor:vscode.audioPreview","onCustomEditor:vscode.videoPreview","onCommand:imagePreview.zoomIn","onCommand:imagePreview.zoomOut","onCommand:imagePreview.copyImage","onCommand:imagePreview.reopenAsPreview","onCommand:imagePreview.reopenAsText"],"vscode.merge-conflict":["onStartupFinished","onCommand:merge-conflict.accept.all-current","onCommand:merge-conflict.accept.all-incoming","onCommand:merge-conflict.accept.all-both","onCommand:merge-conflict.accept.current","onCommand:merge-conflict.accept.incoming","onCommand:merge-conflict.accept.selection","onCommand:merge-conflict.accept.both","onCommand:merge-conflict.next","onCommand:merge-conflict.previous","onCommand:merge-conflict.compare"],"vscode.microsoft-authentication":["onAuthenticationRequest:microsoft","onAuthenticationRequest:microsoft-sovereign-cloud"],"ms-vscode.js-debug":["onDebugDynamicConfigurations","onDebugInitialConfigurations","onFileSystem:jsDebugNetworkFs","onDebugResolve:pwa-node","onDebugResolve:node-terminal","onDebugResolve:pwa-extensionHost","onDebugResolve:pwa-chrome","onDebugResolve:pwa-msedge","onDebugResolve:node","onDebugResolve:chrome","onDebugResolve:extensionHost","onDebugResolve:msedge","onCommand:extension.js-debug.clearAutoAttachVariables","onCommand:extension.js-debug.setAutoAttachVariables","onCommand:extension.js-debug.autoAttachToProcess","onCommand:extension.js-debug.pickNodeProcess","onCommand:extension.js-debug.requestCDPProxy","onCommand:extension.js-debug.completion.nodeTool","onCommand:extension.js-debug.prettyPrint","onCommand:extension.js-debug.toggleSkippingFile","onCommand:extension.js-debug.addCustomBreakpoints","onCommand:extension.js-debug.removeAllCustomBreakpoints","onCommand:extension.js-debug.addXHRBreakpoints","onCommand:extension.js-debug.removeXHRBreakpoint","onCommand:extension.js-debug.editXHRBreakpoints","onCommand:extension.pwa-node-debug.attachNodeProcess","onCommand:extension.js-debug.npmScript","onCommand:extension.js-debug.createDebuggerTerminal","onCommand:extension.js-debug.startProfile","onCommand:extension.js-debug.stopProfile","onCommand:extension.js-debug.revealPage","onCommand:extension.js-debug.debugLink","onCommand:extension.js-debug.createDiagnostics","onCommand:extension.js-debug.getDiagnosticLogs","onCommand:extension.node-debug.startWithStopOnEntry","onCommand:extension.js-debug.openEdgeDevTools","onCommand:extension.js-debug.callers.add","onCommand:extension.js-debug.callers.remove","onCommand:extension.js-debug.callers.removeAll","onCommand:extension.js-debug.callers.goToCaller","onCommand:extension.js-debug.callers.gotToTarget","onCommand:extension.js-debug.enableSourceMapStepping","onCommand:extension.js-debug.disableSourceMapStepping","onCommand:extension.js-debug.network.viewRequest","onCommand:extension.js-debug.network.clear","onCommand:extension.js-debug.network.openBody","onCommand:extension.js-debug.network.openBodyInHex","onCommand:extension.js-debug.network.replayXHR","onCommand:extension.js-debug.network.copyUri","onLanguage:wat","onTerminalProfile:extension.js-debug.debugTerminal","onView:jsBrowserBreakpoints","onView:jsExcludedCallers","onView:jsDebugNetworkTree"],"ms-vscode.js-debug-companion":["onCommand:js-debug-companion.launchAndAttach","onCommand:js-debug-companion.kill","onCommand:js-debug-companion.launch","onCommand:js-debug-companion.defaultBrowser"],"ms-vscode.vscode-js-profile-table":["onCustomEditor:jsProfileVisualizer.cpuprofile.table","onCustomEditor:jsProfileVisualizer.heapprofile.table","onCustomEditor:jsProfileVisualizer.heapsnapshot.table","onCommand:extension.jsProfileVisualizer.table.clearCodeLenses"],"vscode.npm":["onTaskType:npm","onLanguage:json","workspaceContains:package.json","onView:npm","onCommand:npm.runScript","onCommand:npm.debugScript","onCommand:npm.openScript","onCommand:npm.runInstall","onCommand:npm.refresh","onCommand:npm.runSelectedScript","onCommand:npm.runScriptFromFolder","onCommand:npm.packageManager","onTaskType:npm","onTerminalQuickFixRequest:ms-vscode.npm-command"],"vscode.php-language-features":["onLanguage:php"],"vscode.references-view":["onCommand:references-view.find","onCommand:editor.action.showReferences","onView:references-view.tree","onCommand:references-view.findReferences","onCommand:references-view.findImplementations","onCommand:references-view.clearHistory","onCommand:references-view.clear","onCommand:references-view.refresh","onCommand:references-view.pickFromHistory","onCommand:references-view.removeReferenceItem","onCommand:references-view.copy","onCommand:references-view.copyAll","onCommand:references-view.copyPath","onCommand:references-view.refind","onCommand:references-view.showCallHierarchy","onCommand:references-view.showOutgoingCalls","onCommand:references-view.showIncomingCalls","onCommand:references-view.removeCallItem","onCommand:references-view.next","onCommand:references-view.prev","onCommand:references-view.showTypeHierarchy","onCommand:references-view.showSupertypes","onCommand:references-view.showSubtypes","onCommand:references-view.removeTypeItem"],"vscode.search-result":["onLanguage:search-result"],"vscode.simple-browser":["onCommand:simpleBrowser.api.open","onOpenExternalUri:http","onOpenExternalUri:https","onWebviewPanel:simpleBrowser.view","onCommand:simpleBrowser.show"],"vscode.terminal-suggest":["onTerminalShellIntegration:*","onCommand:terminal.integrated.suggest.clearCachedGlobals"],"vscode.tunnel-forwarding":["onTunnel","onCommand:tunnel-forwarding.showLog","onCommand:tunnel-forwarding.restart"],"vscode.typescript-language-features":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:jsx-tags","onCommand:typescript.tsserverRequest","onCommand:_typescript.configurePlugin","onCommand:_typescript.learnMoreAboutRefactorings","onCommand:typescript.fileReferences","onTaskType:typescript","onLanguage:jsonc","onWalkthrough:nodejsWelcome","onCommand:typescript.reloadProjects","onCommand:javascript.reloadProjects","onCommand:typescript.selectTypeScriptVersion","onCommand:typescript.goToProjectConfig","onCommand:javascript.goToProjectConfig","onCommand:typescript.openTsServerLog","onCommand:typescript.restartTsServer","onCommand:typescript.findAllFileReferences","onCommand:typescript.goToSourceDefinition","onCommand:typescript.sortImports","onCommand:javascript.sortImports","onCommand:typescript.removeUnusedImports","onCommand:javascript.removeUnusedImports","onCommand:typescript.experimental.enableTsgo","onCommand:typescript.experimental.disableTsgo","onTaskType:typescript"],"bradlc.vscode-tailwindcss":["onStartupFinished","onLanguage:tailwindcss","onCommand:tailwindCSS.showOutput","onCommand:tailwindCSS.sortSelection"],"esbenp.prettier-vscode":["onStartupFinished","onCommand:prettier.createConfigFile","onCommand:prettier.forceFormatDocument"],"github.copilot":["onStartupFinished","onCommand:github.copilot.toggleStatusMenu","onCommand:github.copilot.signIn","onCommand:github.copilot.acceptCursorPanelSolution","onCommand:github.copilot.previousPanelSolution","onCommand:github.copilot.nextPanelSolution","onCommand:github.copilot.generate","onCommand:github.copilot.generateComparison","onCommand:github.copilot.acceptCursorComparisonPanelSolution","onCommand:github.copilot.previousComparisonPanelSolution","onCommand:github.copilot.nextComparisonPanelSolution","onCommand:github.copilot.completions.disable","onCommand:github.copilot.completions.enable","onCommand:github.copilot.completions.toggle","onCommand:github.copilot.sendFeedback","onCommand:github.copilot.collectDiagnostics","onCommand:github.copilot.openLogs","onCommand:github.copilot.openModelPicker","onCommand:github.copilot.sendCompletionFeedback","onCommand:github-copilot-completions-debugger-view.refresh","onView:github-copilot-completions-debugger-view"],"github.copilot-chat":["onStartupFinished","onLanguageModelChat:copilot","onUri:github.copilot-chat","onFileSystem:ccreq","onFileSystem:ccsettings","onLanguageModelTool:copilot_searchCodebase","onLanguageModelTool:execute_task","onLanguageModelTool:execute_prompt","onLanguageModelTool:copilot_searchWorkspaceSymbols","onLanguageModelTool:copilot_listCodeUsages","onLanguageModelTool:copilot_getVSCodeAPI","onLanguageModelTool:copilot_think","onLanguageModelTool:copilot_findFiles","onLanguageModelTool:copilot_findTextInFiles","onLanguageModelTool:copilot_applyPatch","onLanguageModelTool:copilot_readFile","onLanguageModelTool:copilot_listDirectory","onLanguageModelTool:copilot_getErrors","onLanguageModelTool:copilot_readProjectStructure","onLanguageModelTool:copilot_getChangedFiles","onLanguageModelTool:copilot_testFailure","onLanguageModelTool:copilot_updateUserPreferences","onLanguageModelTool:copilot_createNewWorkspace","onLanguageModelTool:copilot_getProjectSetupInfo","onLanguageModelTool:copilot_installExtension","onLanguageModelTool:copilot_runVscodeCommand","onLanguageModelTool:copilot_createNewJupyterNotebook","onLanguageModelTool:copilot_insertEdit","onLanguageModelTool:copilot_createFile","onLanguageModelTool:copilot_createDirectory","onLanguageModelTool:copilot_openSimpleBrowser","onLanguageModelTool:copilot_replaceString","onLanguageModelTool:copilot_multiReplaceString","onLanguageModelTool:copilot_editNotebook","onLanguageModelTool:copilot_runNotebookCell","onLanguageModelTool:copilot_getNotebookSummary","onLanguageModelTool:copilot_readNotebookCellOutput","onLanguageModelTool:copilot_fetchWebPage","onLanguageModelTool:copilot_findTestFiles","onLanguageModelTool:copilot_getDocInfo","onLanguageModelTool:copilot_getSearchResults","onLanguageModelTool:copilot_githubRepo","onLanguageModelTool:copilot_toolReplay","onLanguageModelTool:copilot_editFiles","onChatParticipant:github.copilot.default","onChatParticipant:github.copilot.editingSession","onChatParticipant:github.copilot.editingSessionEditor","onChatParticipant:github.copilot.editingSession2","onChatParticipant:github.copilot.editsAgent","onChatParticipant:github.copilot.editor","onChatParticipant:github.copilot.notebook","onChatParticipant:github.copilot.notebookEditorAgent","onChatParticipant:github.copilot.workspace","onChatParticipant:github.copilot.vscode","onChatParticipant:github.copilot.terminal","onChatParticipant:github.copilot.terminalPanel","onChatParticipant:github.copilot.chatReplay","onLanguageModelChatProvider:copilot","onLanguageModelChatProvider:azure","onLanguageModelChatProvider:anthropic","onLanguageModelChatProvider:xai","onLanguageModelChatProvider:ollama","onLanguageModelChatProvider:openai","onLanguageModelChatProvider:gemini","onLanguageModelChatProvider:groq","onLanguageModelChatProvider:openrouter","onCommand:github.copilot.chat.replay","onCommand:github.copilot.chat.replay.enableWorkspaceEditTracing","onCommand:github.copilot.chat.replay.disableWorkspaceEditTracing","onCommand:github.copilot.chat.explain","onCommand:github.copilot.chat.explain.palette","onCommand:github.copilot.chat.review","onCommand:github.copilot.chat.review.apply","onCommand:github.copilot.chat.review.applyAndNext","onCommand:github.copilot.chat.review.discard","onCommand:github.copilot.chat.review.discardAndNext","onCommand:github.copilot.chat.review.discardAll","onCommand:github.copilot.chat.review.stagedChanges","onCommand:github.copilot.chat.review.unstagedChanges","onCommand:github.copilot.chat.review.changes","onCommand:github.copilot.chat.review.stagedFileChange","onCommand:github.copilot.chat.review.unstagedFileChange","onCommand:github.copilot.chat.review.previous","onCommand:github.copilot.chat.review.next","onCommand:github.copilot.chat.review.continueInInlineChat","onCommand:github.copilot.chat.review.continueInChat","onCommand:github.copilot.chat.review.markHelpful","onCommand:github.copilot.chat.openUserPreferences","onCommand:github.copilot.chat.review.markUnhelpful","onCommand:github.copilot.chat.generate","onCommand:github.copilot.chat.generateDocs","onCommand:github.copilot.chat.generateTests","onCommand:github.copilot.chat.fix","onCommand:github.copilot.interactiveSession.feedback","onCommand:github.copilot.debug.workbenchState","onCommand:github.copilot.debug.showChatLogView","onCommand:github.copilot.debug.showContextInspectorView","onCommand:github.copilot.debug.resetVirtualToolGroups","onCommand:github.copilot.terminal.explainTerminalLastCommand","onCommand:github.copilot.git.generateCommitMessage","onCommand:github.copilot.devcontainer.generateDevContainerConfig","onCommand:github.copilot.tests.fixTestFailure","onCommand:github.copilot.tests.fixTestFailure.fromInline","onCommand:github.copilot.chat.attachSelection","onCommand:github.copilot.debug.collectDiagnostics","onCommand:github.copilot.debug.inlineEdit.clearCache","onCommand:github.copilot.debug.inlineEdit.reportNotebookNESIssue","onCommand:github.copilot.debug.generateSTest","onCommand:github.copilot.debug.generateConfiguration","onCommand:github.copilot.open.walkthrough","onCommand:github.copilot.debug.generateInlineEditTests","onCommand:github.copilot.buildLocalWorkspaceIndex","onCommand:github.copilot.buildRemoteWorkspaceIndex","onCommand:github.copilot.report","onCommand:github.copilot.chat.rerunWithCopilotDebug","onCommand:github.copilot.chat.startCopilotDebugCommand","onCommand:github.copilot.chat.clearTemporalContext","onCommand:github.copilot.search.markHelpful","onCommand:github.copilot.search.markUnhelpful","onCommand:github.copilot.search.feedback","onCommand:github.copilot.chat.debug.showElements","onCommand:github.copilot.chat.debug.hideElements","onCommand:github.copilot.chat.debug.showTools","onCommand:github.copilot.chat.debug.hideTools","onCommand:github.copilot.chat.debug.showNesRequests","onCommand:github.copilot.chat.debug.hideNesRequests","onCommand:github.copilot.chat.debug.exportLogItem","onCommand:github.copilot.chat.debug.exportPromptArchive","onCommand:github.copilot.chat.debug.exportPromptLogsAsJson","onCommand:github.copilot.chat.debug.exportAllPromptLogsAsJson","onCommand:github.copilot.debug.collectWorkspaceIndexDiagnostics","onCommand:github.copilot.chat.mcp.setup.check","onCommand:github.copilot.chat.mcp.setup.validatePackage","onCommand:github.copilot.chat.mcp.setup.flow","onCommand:github.copilot.chat.generateAltText","onCommand:github.copilot.chat.notebook.enableFollowCellExecution","onCommand:github.copilot.chat.notebook.disableFollowCellExecution","onCommand:github.copilot.chat.manageBYOK","onCommand:github.copilot.chat.configureCustomOAIModels","onTerminalQuickFixRequest:copilot-chat.fixWithCopilot","onTerminalQuickFixRequest:copilot-chat.generateCommitMessage","onTerminalQuickFixRequest:copilot-chat.terminalToDebugging","onTerminalQuickFixRequest:copilot-chat.terminalToDebuggingSuccess","onView:copilot-chat","onView:context-inspector","onWalkthrough:copilotWelcome","onChatSession:claude-code"],"ms-playwright.playwright":["workspaceContains:**/*playwright*.config.{ts,js,mjs}","onCommand:pw.extension.install","onCommand:pw.extension.installBrowsers","onCommand:pw.extension.command.inspect","onCommand:pw.extension.command.closeBrowsers","onCommand:pw.extension.command.recordNew","onCommand:pw.extension.command.recordAtCursor","onCommand:pw.extension.command.toggleModels","onCommand:pw.extension.toggle.reuseBrowser","onCommand:pw.extension.toggle.showTrace","onCommand:pw.extension.toggle.runGlobalSetupOnEachRun","onCommand:pw.extension.toggle.pickLocatorCopyToClipboard","onCommand:pw.extension.command.runGlobalSetup","onCommand:pw.extension.command.runGlobalTeardown","onCommand:pw.extension.command.startDevServer","onCommand:pw.extension.command.stopDevServer","onCommand:pw.extension.command.clearCache","onView:pw.extension.settingsView","onView:pw.extension.locatorsView"],"yoavbls.pretty-ts-errors":["onLanguage:typescript","onLanguage:javascript","onLanguage:typescriptreact","onLanguage:javascriptreact","onLanguage:astro","onLanguage:svelte","onLanguage:vue","onLanguage:mdx","onLanguage:glimmer-js","onLanguage:glimmer-ts"]}},"telemetryInfo":{"sessionId":"1362e719-9cbe-4a81-a012-cd9e9bdd8dea1758593857885","machineId":"2ef7c413ff4d4c8727fbde66a1bee4f349dc0f6720cdc95a9763e5cecf8cbccc","sqmId":"","devDeviceId":"b0762f83-8980-4a89-a3fb-0caac41d3bba","firstSessionDate":"Tue, 23 Sep 2025 01:55:41 GMT"},"logLevel":1,"loggers":[{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/main.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/main.log","scheme":"file"},"id":"main","name":"Main"},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/renderer.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/renderer.log","scheme":"file"},"id":"rendererLog","name":"Window","group":{"id":"rendererLog","name":"Window"}},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/views.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/views.log","scheme":"file"},"id":"views","name":"Views","group":{"id":"rendererLog","name":"Window"}},{"resource":{"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/sharedprocess.log","external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/sharedprocess.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/sharedprocess.log","scheme":"file"},"id":"sharedprocess","name":"Shared","group":{"id":"shared","name":"Shared"}},{"resource":{"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/network-shared.log","external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/network-shared.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/network-shared.log","scheme":"file"},"id":"network-shared","name":"Network","group":{"id":"shared","name":"Shared"}},{"resource":{"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/telemetry.log","external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/telemetry.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/telemetry.log","scheme":"file"},"id":"telemetry","name":"Telemetry","hidden":false,"group":{"id":"telemetry","name":"Telemetry"}},{"resource":{"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/userDataSync.log","external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/userDataSync.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/userDataSync.log","scheme":"file"},"id":"userDataSync","name":"Settings Sync"},{"resource":{"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/remoteTunnelService.log","external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/remoteTunnelService.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/remoteTunnelService.log","scheme":"file"},"id":"remoteTunnelService","name":"Remote Tunnel Service"},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/fileWatcher.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/fileWatcher.log","scheme":"file"},"id":"fileWatcher","name":"File Watcher"},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/network.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/network.log","scheme":"file"},"id":"network","name":"Network","group":{"id":"rendererLog","name":"Window"}},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/terminal.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/terminal.log","scheme":"file"},"id":"terminal","name":"Terminal"},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/notebook.rendering.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/notebook.rendering.log","scheme":"file"},"id":"notebook.rendering","name":"Notebook","group":{"id":"rendererLog","name":"Window"}},{"resource":{"$mid":1,"external":"file:///root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/output_20250922T231740/tasks.log","path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/output_20250922T231740/tasks.log","scheme":"file"},"id":"-48103757","logLevel":1,"hidden":true}],"logsLocation":{"$mid":1,"path":"/root/altamedica-reboot/~/.vscode-root/logs/20250922T231736/window1/exthost","scheme":"file"},"autoStart":false,"uiKind":1,"handle":"BADAAA=="}
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand __vsc90d01b51-fee1-4955-bc45-4c032995e780
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand testing.getExplorerSelection
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDataToNotebook
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeNotebookToData
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand notebook.selectKernel
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeNotebookVariableProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand interactive.open
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDocumentHighlights
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDocumentSymbolProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeFormatDocumentProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeFormatRangeProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeFormatOnTypeProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDefinitionProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeDefinitionProvider_recursive
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeTypeDefinitionProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeTypeDefinitionProvider_recursive
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDeclarationProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeDeclarationProvider_recursive
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeImplementationProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeImplementationProvider_recursive
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeReferenceProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeReferenceProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeHoverProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.executeHoverProvider_recursive
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeSelectionRangeProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeWorkspaceSymbolProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.prepareCallHierarchy
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideIncomingCalls
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideOutgoingCalls
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.prepareRename
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDocumentRenameProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeLinkProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideDocumentSemanticTokensLegend
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideDocumentSemanticTokens
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideDocumentRangeSemanticTokensLegend
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideDocumentRangeSemanticTokens
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeCompletionItemProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeSignatureHelpProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeCodeLensProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeCodeActionProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeDocumentColorProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeColorPresentationProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeInlayHintProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeFoldingRangeProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.resolveNotebookContentProviders
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.executeInlineValueProvider
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.open
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.openWith
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.diff
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.changes
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.prepareTypeHierarchy
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideSupertypes
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.provideSubtypes
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.revealTestInExplorer
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.startContinuousTestRun
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.stopContinuousTestRun
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.experimental.editSession.continue
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand setContext
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand vscode.editorChat.start
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand _validateWhenClauses
2025-09-22 23:17:41.415 [trace] ExtHostCommands#registerCommand _workbench.downloadResource
2025-09-22 23:17:41.415 [info] Skipping acquiring lock for /root/altamedica-reboot/~/.vscode-root/User/workspaceStorage/602e01651a858412530e82445468fb37.
2025-09-22 23:17:41.415 [trace] [ExtHostStorage] storage dir already exists {"$mid":1,"fsPath":"/root/altamedica-reboot/~/.vscode-root/User/workspaceStorage/602e01651a858412530e82445468fb37","path":"/root/altamedica-reboot/~/.vscode-root/User/workspaceStorage/602e01651a858412530e82445468fb37","scheme":"file"}
2025-09-22 23:17:41.495 [info] ExtensionService#_doActivateExtension vscode.github-authentication, startup: false, activationEvent: 'onAuthenticationRequest:github'
2025-09-22 23:17:41.496 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/github-authentication/dist/extension.js
2025-09-22 23:17:41.497 [trace] ExtensionService#loadExtensionContext vscode.github-authentication
2025-09-22 23:17:41.590 [info] ExtensionService#_doActivateExtension vscode.emmet, startup: false, activationEvent: 'onLanguage'
2025-09-22 23:17:41.590 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/emmet/dist/node/emmetNodeMain
2025-09-22 23:17:41.590 [trace] ExtensionService#loadExtensionContext vscode.emmet
2025-09-22 23:17:41.699 [info] ExtensionService#_doActivateExtension GitHub.copilot-chat, startup: false, activationEvent: 'onChatParticipant:github.copilot.editsAgent'
2025-09-22 23:17:41.699 [trace] ExtensionService#loadModule [cjs] -> file:///root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension
2025-09-22 23:17:41.699 [trace] ExtensionService#loadExtensionContext GitHub.copilot-chat
2025-09-22 23:17:44.344 [trace] ExtensionService#_callActivateOptional vscode.github-authentication
2025-09-22 23:17:44.400 [trace] ExtensionService#_callActivateOptional vscode.emmet
2025-09-22 23:17:44.400 [trace] ExtHostCommands#registerCommand editor.emmet.action.updateImageSize
2025-09-22 23:17:44.437 [trace] ExtHostCommands#registerCommand editor.emmet.action.wrapWithAbbreviation
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand emmet.expandAbbreviation
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand editor.emmet.action.removeTag
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand editor.emmet.action.updateTag
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand editor.emmet.action.matchTag
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand editor.emmet.action.balanceOut
2025-09-22 23:17:44.438 [trace] ExtHostCommands#registerCommand editor.emmet.action.balanceIn
2025-09-22 23:17:44.439 [trace] ExtHostCommands#registerCommand editor.emmet.action.splitJoinTag
2025-09-22 23:17:44.439 [trace] ExtHostCommands#registerCommand editor.emmet.action.mergeLines
2025-09-22 23:17:44.439 [trace] ExtHostCommands#registerCommand editor.emmet.action.toggleComment
2025-09-22 23:17:44.442 [trace] ExtHostCommands#registerCommand editor.emmet.action.nextEditPoint
2025-09-22 23:17:44.443 [trace] ExtHostCommands#registerCommand editor.emmet.action.prevEditPoint
2025-09-22 23:17:44.443 [trace] ExtHostCommands#registerCommand editor.emmet.action.selectNextItem
2025-09-22 23:17:44.443 [trace] ExtHostCommands#registerCommand editor.emmet.action.selectPrevItem
2025-09-22 23:17:44.444 [trace] ExtHostCommands#registerCommand editor.emmet.action.evaluateMathExpression
2025-09-22 23:17:44.444 [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByOneTenth
2025-09-22 23:17:44.445 [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByOne
2025-09-22 23:17:44.445 [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByTen
2025-09-22 23:17:44.445 [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByOneTenth
2025-09-22 23:17:44.445 [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByOne
2025-09-22 23:17:44.446 [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByTen
2025-09-22 23:17:44.446 [trace] ExtHostCommands#registerCommand editor.emmet.action.reflectCSSValue
2025-09-22 23:17:44.446 [trace] ExtHostCommands#registerCommand workbench.action.showEmmetCommands
2025-09-22 23:17:44.452 [trace] ExtensionService#_callActivateOptional GitHub.copilot-chat
2025-09-22 23:17:44.452 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:44.453 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:44.491 [trace] extHostWorkspace#findFiles2New: fileSearch, extension: GitHub.copilot-chat, entryPoint: findFiles2New
2025-09-22 23:17:44.496 [trace] ExtHostCommands#registerCommand github.copilot.chat.clearTemporalContext
2025-09-22 23:17:44.730 [info] ExtensionService#_doActivateExtension vscode.git-base, startup: true, activationEvent: '*', root cause: vscode.git
2025-09-22 23:17:44.730 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/git-base/dist/extension.js
2025-09-22 23:17:44.731 [trace] ExtensionService#loadExtensionContext vscode.git-base
2025-09-22 23:17:44.844 [debug] ExtHostSearch /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/ripgrep/bin/rg --files --hidden --case-sensitive --no-require-git -g '**/*playwright*.config.{ts,js,mjs}' -g '!**/.git' -g '!**/.svn' -g '!**/.hg' -g '!**/.DS_Store' -g '!**/Thumbs.db' -g '!**/node_modules' -g '!**/dist' -g '!**/.next' -g '!**/.turbo' -g '!**/bower_components' -g '!**/*.code-search' --no-ignore-parent --follow --quiet --no-config --no-ignore-global
 - cwd: /root/altamedica-reboot
 - Sibling clauses: {}
2025-09-22 23:17:44.856 [debug] ProxyResolver#resolveProxy https://default.exp-tas.com/vscode/ab DIRECT 
2025-09-22 23:17:44.856 [trace] ProxyResolver#loadAdditionalCertificates: Loading certificates from main process
2025-09-22 23:17:44.857 [debug] ProxyResolver#resolveProxy http://169.254.169.254/metadata/instance/compute DIRECT 
2025-09-22 23:17:44.871 [trace] ExtensionService#_callActivateOptional vscode.git-base
2025-09-22 23:17:44.871 [trace] ExtHostCommands#registerCommand git-base.api.getRemoteSources
2025-09-22 23:17:44.874 [info] ExtensionService#_doActivateExtension vscode.npm, startup: true, activationEvent: 'workspaceContains:package.json'
2025-09-22 23:17:44.874 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/npm/dist/npmMain
2025-09-22 23:17:44.875 [trace] ExtensionService#loadExtensionContext vscode.npm
2025-09-22 23:17:45.023 [debug] ExtHostSearch Search finished. Stats: {"cmdTime":218,"fileWalkTime":218,"directoriesWalked":0,"filesWalked":0,"cmdResultCount":0}
2025-09-22 23:17:45.023 [debug] Ext host file search time: 269ms
2025-09-22 23:17:45.036 [debug] ExtHostSearch /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/ripgrep/bin/rg --files --hidden --case-sensitive --no-require-git -g '!**/.git' -g '!**/.svn' -g '!**/.hg' -g '!**/.DS_Store' -g '!**/Thumbs.db' -g '!**/node_modules' -g '!**/dist' -g '!**/.next' -g '!**/.turbo' -g '!**/bower_components' -g '!**/*.code-search' --no-ignore-parent --follow --no-config --no-ignore-global
 - cwd: /root/altamedica-reboot
 - Sibling clauses: {}
2025-09-22 23:17:45.037 [info] ExtensionService#_doActivateExtension vscode.microsoft-authentication, startup: false, activationEvent: 'onAuthenticationRequest:microsoft'
2025-09-22 23:17:45.037 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/microsoft-authentication/dist/extension.js
2025-09-22 23:17:45.037 [trace] ExtensionService#loadExtensionContext vscode.microsoft-authentication
2025-09-22 23:17:45.145 [info] ExtensionService#_doActivateExtension vscode.git, startup: true, activationEvent: '*'
2025-09-22 23:17:45.145 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/git/dist/main
2025-09-22 23:17:45.145 [trace] ExtensionService#loadExtensionContext vscode.git
2025-09-22 23:17:45.235 [info] ExtensionService#_doActivateExtension vscode.github, startup: true, activationEvent: '*'
2025-09-22 23:17:45.236 [trace] ExtensionService#loadModule [esm] -> file:///snap/code/206/usr/share/code/resources/app/extensions/github/dist/extension.js
2025-09-22 23:17:45.236 [trace] ExtensionService#loadExtensionContext vscode.github
2025-09-22 23:17:45.236 [trace] ExtensionService#_callActivateOptional vscode.npm
2025-09-22 23:17:45.245 [debug] ExtHostSearch Search finished. Stats: {"cmdTime":221,"fileWalkTime":221,"directoriesWalked":0,"filesWalked":0,"cmdResultCount":818}
2025-09-22 23:17:45.245 [debug] Ext host file search time: 222ms
2025-09-22 23:17:45.249 [trace] ExtensionService#_callActivateOptional vscode.microsoft-authentication
2025-09-22 23:17:45.283 [trace] ProxyResolver#loadAdditionalCertificates: Loaded certificates from main process 151
2025-09-22 23:17:45.303 [trace] ProxyResolver#tls.connect [{"highWaterMark":16384,"ca":"[301 certs]","servername":"default.exp-tas.com","session":"null","localAddress":"null","ALPNProtocols":"http/1.1","port":443,"host":"default.exp-tas.com"}]
2025-09-22 23:17:45.354 [trace] ExtensionService#_callActivateOptional vscode.git
2025-09-22 23:17:45.410 [info] ExtensionService#_doActivateExtension ms-playwright.playwright, startup: true, activationEvent: 'workspaceContains:**/*playwright*.config.{ts,js,mjs}'
2025-09-22 23:17:45.410 [trace] ExtensionService#loadModule [cjs] -> file:///root/.vscode/extensions/ms-playwright.playwright-1.1.15/out/extension.js
2025-09-22 23:17:45.411 [trace] ExtensionService#loadExtensionContext ms-playwright.playwright
2025-09-22 23:17:45.653 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.653 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.654 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.654 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.657 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.657 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.658 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.658 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.672 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.673 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.showOutput
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.refresh
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.openResource
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.openAllChanges
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.openMergeEditor
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.continueInLocalClone
2025-09-22 23:17:45.674 [trace] ExtHostCommands#registerCommand git.clone
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.cloneRecursive
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.init
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.openRepository
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.reopenClosedRepositories
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.close
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.closeOtherRepositories
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.openFile
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.openFile2
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.openHEADFile
2025-09-22 23:17:45.675 [trace] ExtHostCommands#registerCommand git.openChange
2025-09-22 23:17:45.676 [trace] ExtHostCommands#registerCommand git.compareWithWorkspace
2025-09-22 23:17:45.676 [trace] ExtHostCommands#registerCommand git.rename
2025-09-22 23:17:45.676 [trace] ExtHostCommands#registerCommand git.stage
2025-09-22 23:17:45.676 [trace] ExtHostCommands#registerCommand git.stageAll
2025-09-22 23:17:45.676 [trace] ExtHostCommands#registerCommand git.stageAllTracked
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.stageAllUntracked
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.stageAllMerge
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.stageChange
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.diff.stageHunk
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.diff.stageSelection
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.stageSelectedRanges
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.stageFile
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.acceptMerge
2025-09-22 23:17:45.677 [trace] ExtHostCommands#registerCommand git.runGitMerge
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.runGitMergeDiff3
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.revertChange
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.revertSelectedRanges
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.unstage
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.unstageAll
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.unstageSelectedRanges
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.unstageFile
2025-09-22 23:17:45.678 [trace] ExtHostCommands#registerCommand git.unstageChange
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.clean
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.cleanAll
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.cleanAllTracked
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.cleanAllUntracked
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.commit
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.commitAmend
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.commitSigned
2025-09-22 23:17:45.679 [trace] ExtHostCommands#registerCommand git.commitStaged
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitStagedSigned
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitStagedAmend
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitAll
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitAllSigned
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitAllAmend
2025-09-22 23:17:45.680 [trace] ExtHostCommands#registerCommand git.commitMessageAccept
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitMessageDiscard
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitEmpty
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitNoVerify
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitStagedNoVerify
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitStagedSignedNoVerify
2025-09-22 23:17:45.681 [trace] ExtHostCommands#registerCommand git.commitAmendNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitSignedNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitStagedAmendNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitAllNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitAllSignedNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitAllAmendNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.commitEmptyNoVerify
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.restoreCommitTemplate
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.undoCommit
2025-09-22 23:17:45.682 [trace] ExtHostCommands#registerCommand git.checkout
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.graph.checkout
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.checkoutDetached
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.graph.checkoutDetached
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.branch
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.branchFrom
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.deleteBranch
2025-09-22 23:17:45.683 [trace] ExtHostCommands#registerCommand git.graph.deleteBranch
2025-09-22 23:17:45.684 [trace] ExtHostCommands#registerCommand git.deleteRemoteBranch
2025-09-22 23:17:45.684 [trace] ExtHostCommands#registerCommand git.renameBranch
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.merge
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.mergeAbort
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.rebase
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.createTag
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.deleteTag
2025-09-22 23:17:45.685 [trace] ExtHostCommands#registerCommand git.migrateWorktreeChanges
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.openWorktreeMergeEditor
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.createWorktree
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.deleteWorktree
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.deleteWorktreeFromPalette
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.openWorktree
2025-09-22 23:17:45.686 [trace] ExtHostCommands#registerCommand git.openWorktreeInNewWindow
2025-09-22 23:17:45.687 [trace] ExtHostCommands#registerCommand git.graph.deleteTag
2025-09-22 23:17:45.687 [trace] ExtHostCommands#registerCommand git.deleteRemoteTag
2025-09-22 23:17:45.687 [trace] ExtHostCommands#registerCommand git.fetch
2025-09-22 23:17:45.688 [trace] ExtHostCommands#registerCommand git.fetchPrune
2025-09-22 23:17:45.688 [trace] ExtHostCommands#registerCommand git.fetchAll
2025-09-22 23:17:45.688 [trace] ExtHostCommands#registerCommand git.fetchRef
2025-09-22 23:17:45.688 [trace] ExtHostCommands#registerCommand git.pullFrom
2025-09-22 23:17:45.689 [trace] ExtHostCommands#registerCommand git.pull
2025-09-22 23:17:45.689 [trace] ExtHostCommands#registerCommand git.pullRebase
2025-09-22 23:17:45.689 [trace] ExtHostCommands#registerCommand git.pullRef
2025-09-22 23:17:45.689 [trace] ExtHostCommands#registerCommand git.push
2025-09-22 23:17:45.689 [trace] ExtHostCommands#registerCommand git.pushForce
2025-09-22 23:17:45.690 [trace] ExtHostCommands#registerCommand git.pushWithTags
2025-09-22 23:17:45.690 [trace] ExtHostCommands#registerCommand git.pushWithTagsForce
2025-09-22 23:17:45.690 [trace] ExtHostCommands#registerCommand git.pushRef
2025-09-22 23:17:45.690 [trace] ExtHostCommands#registerCommand git.cherryPick
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.graph.cherryPick
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.cherryPickAbort
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.pushTo
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.pushToForce
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.pushTags
2025-09-22 23:17:45.691 [trace] ExtHostCommands#registerCommand git.addRemote
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git.removeRemote
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git.sync
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git._syncAll
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git.syncRebase
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git.publish
2025-09-22 23:17:45.692 [trace] ExtHostCommands#registerCommand git.ignore
2025-09-22 23:17:45.693 [trace] ExtHostCommands#registerCommand git.revealInExplorer
2025-09-22 23:17:45.693 [trace] ExtHostCommands#registerCommand git.revealFileInOS.windows
2025-09-22 23:17:45.693 [trace] ExtHostCommands#registerCommand git.revealFileInOS.mac
2025-09-22 23:17:45.693 [trace] ExtHostCommands#registerCommand git.revealFileInOS.linux
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stash
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashStaged
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashIncludeUntracked
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashPop
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashPopLatest
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashPopEditor
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashApply
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashApplyLatest
2025-09-22 23:17:45.698 [trace] ExtHostCommands#registerCommand git.stashApplyEditor
2025-09-22 23:17:45.699 [trace] ExtHostCommands#registerCommand git.stashDrop
2025-09-22 23:17:45.699 [trace] ExtHostCommands#registerCommand git.stashDropAll
2025-09-22 23:17:45.699 [trace] ExtHostCommands#registerCommand git.stashDropEditor
2025-09-22 23:17:45.699 [trace] ExtHostCommands#registerCommand git.stashView
2025-09-22 23:17:45.699 [trace] ExtHostCommands#registerCommand git.timeline.openDiff
2025-09-22 23:17:45.700 [trace] ExtHostCommands#registerCommand git.timeline.viewCommit
2025-09-22 23:17:45.700 [trace] ExtHostCommands#registerCommand git.timeline.copyCommitId
2025-09-22 23:17:45.700 [trace] ExtHostCommands#registerCommand git.timeline.copyCommitMessage
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.timeline.selectForCompare
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.timeline.compareWithSelected
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.rebaseAbort
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.closeAllDiffEditors
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.closeAllUnmodifiedEditors
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.openRepositoriesInParentFolders
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.manageUnsafeRepositories
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.viewChanges
2025-09-22 23:17:45.701 [trace] ExtHostCommands#registerCommand git.viewStagedChanges
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.viewUntrackedChanges
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.copyCommitId
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.copyCommitMessage
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.viewCommit
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.copyContentToClipboard
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.blame.toggleEditorDecoration
2025-09-22 23:17:45.702 [trace] ExtHostCommands#registerCommand git.blame.toggleStatusBarItem
2025-09-22 23:17:45.735 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.736 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.739 [trace] ExtHostCommands#registerCommand git.api.getRepositories
2025-09-22 23:17:45.739 [trace] ExtHostCommands#registerCommand git.api.getRepositoryState
2025-09-22 23:17:45.740 [trace] ExtHostCommands#registerCommand git.api.getRemoteSources
2025-09-22 23:17:45.747 [trace] ExtensionService#_callActivateOptional ms-playwright.playwright
2025-09-22 23:17:45.754 [trace] ExtHostCommands#registerCommand pw.extension.toggle.reuseBrowser
2025-09-22 23:17:45.754 [trace] ExtHostCommands#registerCommand pw.extension.toggle.showTrace
2025-09-22 23:17:45.754 [trace] ExtHostCommands#registerCommand pw.extension.toggle.runGlobalSetupOnEachRun
2025-09-22 23:17:45.754 [trace] ExtHostCommands#registerCommand pw.extension.toggle.updateSnapshots
2025-09-22 23:17:45.759 [trace] ExtHostCommands#registerCommand pw.extension.toggle.updateSourceMethod
2025-09-22 23:17:45.760 [trace] ExtHostCommands#registerCommand pw.extension.toggle.pickLocatorCopyToClipboard
2025-09-22 23:17:45.772 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:45.772 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:45.774 [trace] ExtHostCommands#registerCommand pw.extension.install
2025-09-22 23:17:45.774 [trace] ExtHostCommands#registerCommand pw.extension.installBrowsers
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.inspect
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.closeBrowsers
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.recordNew
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.recordAtCursor
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.toggleModels
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.runGlobalSetup
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.runGlobalTeardown
2025-09-22 23:17:45.775 [trace] ExtHostCommands#registerCommand pw.extension.command.startDevServer
2025-09-22 23:17:45.776 [trace] ExtHostCommands#registerCommand pw.extension.command.stopDevServer
2025-09-22 23:17:45.776 [trace] ExtHostCommands#registerCommand pw.extension.command.clearCache
2025-09-22 23:17:45.782 [trace] extHostWorkspace#findFiles: fileSearch, extension: ms-playwright.playwright, entryPoint: findFiles
2025-09-22 23:17:45.784 [trace] [DiagnosticCollection] remove all (extension, owner) ms-playwright.playwright pw.testErrors.diagnostic
2025-09-22 23:17:45.843 [debug] ExtHostSearch /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/ripgrep/bin/rg --files --hidden --case-sensitive --no-require-git -g '**/*playwright*.config.{ts,js,mts,mjs}' -g '!**/.git' -g '!**/.svn' -g '!**/.hg' -g '!**/.DS_Store' -g '!**/Thumbs.db' -g '!**/node_modules' -g '!**/dist' -g '!**/.next' -g '!**/.turbo' -g '!**/node_modules/**' --no-ignore --follow --no-config --no-ignore-global
 - cwd: /root/altamedica-reboot
 - Sibling clauses: {}
2025-09-22 23:17:45.881 [trace] ExtHostCommands#registerCommand npm.runScript
2025-09-22 23:17:45.881 [trace] ExtHostCommands#registerCommand npm.debugScript
2025-09-22 23:17:45.881 [trace] ExtHostCommands#registerCommand npm.openScript
2025-09-22 23:17:45.881 [trace] ExtHostCommands#registerCommand npm.runInstall
2025-09-22 23:17:45.883 [trace] ExtHostCommands#registerCommand npm.runScriptFromHover
2025-09-22 23:17:45.883 [trace] ExtHostCommands#registerCommand npm.debugScriptFromHover
2025-09-22 23:17:45.883 [trace] ExtHostCommands#registerCommand npm.runSelectedScript
2025-09-22 23:17:45.887 [debug] ExtHostSearch Search finished. Stats: {"cmdTime":53,"fileWalkTime":53,"directoriesWalked":0,"filesWalked":0,"cmdResultCount":1}
2025-09-22 23:17:45.887 [debug] Ext host file search time: 54ms
2025-09-22 23:17:45.890 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.891 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.892 [trace] ExtHostCommands#registerCommand npm.runScriptFromFolder
2025-09-22 23:17:45.892 [trace] ExtHostCommands#registerCommand npm.refresh
2025-09-22 23:17:45.892 [trace] ExtHostCommands#registerCommand npm.scriptRunner
2025-09-22 23:17:45.892 [trace] ExtHostCommands#registerCommand npm.packageManager
2025-09-22 23:17:45.916 [trace] ExtHostSCM#createSourceControl vscode.git git Git {"$mid":1,"path":"/root/altamedica-reboot","scheme":"file"}
2025-09-22 23:17:45.926 [trace] CommandsConverter#CREATE git.commit git.commit /1
2025-09-22 23:17:45.932 [trace] CommandsConverter#CREATE git.checkout git.checkout /2
2025-09-22 23:17:45.935 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.935 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.935 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.937 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.938 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.938 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.939 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.939 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.939 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.939 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:45.945 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:45.945 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:46.078 [trace] ExtensionService#_callActivateOptional vscode.github
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.publish
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.copyVscodeDevLink
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.copyVscodeDevLinkFile
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.copyVscodeDevLinkWithoutRange
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.openOnGitHub
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.graph.openOnGitHub
2025-09-22 23:17:46.127 [trace] ExtHostCommands#registerCommand github.timeline.openOnGitHub
2025-09-22 23:17:46.128 [trace] ExtHostCommands#registerCommand github.openOnVscodeDev
2025-09-22 23:17:46.130 [trace] CommandsConverter#CREATE git.checkout git.checkout /3
2025-09-22 23:17:46.130 [trace] CommandsConverter#CREATE git.publish git.publish /4
2025-09-22 23:17:46.131 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:46.131 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:46.132 [info] Eager extensions activated
2025-09-22 23:17:46.135 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:46.135 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:46.136 [trace] ExtHostSCM#$setSelectedSourceControl 0
2025-09-22 23:17:46.142 [trace] CommandsConverter#DISPOSE git.checkout /2
2025-09-22 23:17:46.177 [info] ExtensionService#_doActivateExtension vscode.debug-auto-launch, startup: false, activationEvent: 'onStartupFinished'
2025-09-22 23:17:46.177 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/debug-auto-launch/dist/extension
2025-09-22 23:17:46.178 [trace] ExtensionService#loadExtensionContext vscode.debug-auto-launch
2025-09-22 23:17:46.182 [info] ExtensionService#_doActivateExtension vscode.merge-conflict, startup: false, activationEvent: 'onStartupFinished'
2025-09-22 23:17:46.182 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/merge-conflict/dist/mergeConflictMain
2025-09-22 23:17:46.183 [trace] ExtensionService#loadExtensionContext vscode.merge-conflict
2025-09-22 23:17:46.226 [info] ExtensionService#_doActivateExtension bradlc.vscode-tailwindcss, startup: false, activationEvent: 'onStartupFinished'
2025-09-22 23:17:46.226 [trace] ExtensionService#loadModule [cjs] -> file:///root/.vscode/extensions/bradlc.vscode-tailwindcss-0.14.26/dist/extension.js
2025-09-22 23:17:46.226 [trace] ExtensionService#loadExtensionContext bradlc.vscode-tailwindcss
2025-09-22 23:17:46.299 [info] ExtensionService#_doActivateExtension esbenp.prettier-vscode, startup: false, activationEvent: 'onStartupFinished'
2025-09-22 23:17:46.299 [trace] ExtensionService#loadModule [cjs] -> file:///root/.vscode/extensions/esbenp.prettier-vscode-11.0.0/dist/extension
2025-09-22 23:17:46.300 [trace] ExtensionService#loadExtensionContext esbenp.prettier-vscode
2025-09-22 23:17:46.502 [info] ExtensionService#_doActivateExtension GitHub.copilot, startup: false, activationEvent: 'onStartupFinished'
2025-09-22 23:17:46.505 [trace] ExtensionService#loadModule [cjs] -> file:///root/.vscode/extensions/github.copilot-1.372.0/dist/extension
2025-09-22 23:17:46.505 [trace] ExtensionService#loadExtensionContext GitHub.copilot
2025-09-22 23:17:50.930 [trace] ExtHostCommands#registerCommand github.copilot.chat.attachSelection
2025-09-22 23:17:50.940 [trace] ExtHostCommands#registerCommand github.copilot.debug.collectDiagnostics
2025-09-22 23:17:50.940 [trace] ExtHostCommands#registerCommand github.copilot.refreshToken
2025-09-22 23:17:50.941 [trace] ExtHostCommands#registerCommand github.copilot.debug.showChatLogView
2025-09-22 23:17:50.941 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.941 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.942 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.942 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.943 [trace] ExtHostCommands#registerCommand github.copilot.chat.startCopilotDebugCommand
2025-09-22 23:17:50.944 [trace] ExtHostCommands#registerCommand github.copilot.debug.generateSTest
2025-09-22 23:17:50.945 [trace] ExtHostCommands#registerCommand github.copilot.createLaunchJsonFileWithContents
2025-09-22 23:17:50.945 [trace] ExtHostCommands#registerCommand github.copilot.debug.generateConfiguration
2025-09-22 23:17:50.945 [trace] ExtHostCommands#registerCommand github.copilot.startDebugging
2025-09-22 23:17:50.947 [trace] ExtHostCommands#registerCommand github.copilot.open.walkthrough
2025-09-22 23:17:50.947 [trace] ExtHostCommands#registerCommand github.copilot.mcp.viewContext7
2025-09-22 23:17:50.952 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.952 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.954 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.955 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.955 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.955 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.956 [trace] ExtHostCommands#registerCommand github.copilot.survey.signalUsage
2025-09-22 23:17:50.956 [trace] ExtHostCommands#registerCommand github.copilot.report
2025-09-22 23:17:50.961 [trace] ExtHostCommands#registerCommand github.copilot.debug.showContextInspectorView
2025-09-22 23:17:50.962 [trace] ExtHostCommands#registerCommand github.copilot.search.markHelpful
2025-09-22 23:17:50.962 [trace] ExtHostCommands#registerCommand github.copilot.search.markUnhelpful
2025-09-22 23:17:50.962 [trace] ExtHostCommands#registerCommand github.copilot.search.feedback
2025-09-22 23:17:50.962 [trace] ExtHostCommands#registerCommand chat.enablePremiumOverages
2025-09-22 23:17:50.966 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.966 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.966 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.967 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.967 [trace] ExtHostCommands#registerCommand github.copilot.chat.notebook.enableFollowCellExecution
2025-09-22 23:17:50.967 [trace] ExtHostCommands#registerCommand github.copilot.chat.notebook.disableFollowCellExecution
2025-09-22 23:17:50.983 [trace] ExtHostCommands#registerCommand github.copilot.chat.replay
2025-09-22 23:17:50.983 [trace] ExtHostCommands#registerCommand github.copilot.chat.replay.enableWorkspaceEditTracing
2025-09-22 23:17:50.984 [trace] ExtHostCommands#registerCommand github.copilot.chat.replay.disableWorkspaceEditTracing
2025-09-22 23:17:50.984 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:50.984 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:50.987 [trace] ExtHostCommands#registerCommand _copilot.workspaceIndex.signInToAnything
2025-09-22 23:17:50.989 [trace] ExtHostCommands#registerCommand _copilot.workspaceIndex.signInAgain
2025-09-22 23:17:50.991 [trace] ExtHostCommands#registerCommand github.copilot.buildLocalWorkspaceIndex
2025-09-22 23:17:50.992 [trace] ExtHostCommands#registerCommand github.copilot.buildRemoteWorkspaceIndex
2025-09-22 23:17:50.992 [trace] ExtHostCommands#registerCommand github.copilot.debug.collectWorkspaceIndexDiagnostics
2025-09-22 23:17:51.014 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:51.015 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:51.055 [trace] ExtensionService#_callActivateOptional vscode.debug-auto-launch
2025-09-22 23:17:51.055 [trace] ExtHostCommands#registerCommand extension.node-debug.toggleAutoAttach
2025-09-22 23:17:51.057 [trace] ExtensionService#_callActivateOptional vscode.merge-conflict
2025-09-22 23:17:51.059 [trace] ExtHostCommands#registerCommand merge-conflict.accept.current
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.incoming
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.selection
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.both
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-current
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-incoming
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-both
2025-09-22 23:17:51.060 [trace] ExtHostCommands#registerCommand merge-conflict.next
2025-09-22 23:17:51.061 [trace] ExtHostCommands#registerCommand merge-conflict.previous
2025-09-22 23:17:51.062 [trace] ExtHostCommands#registerCommand merge-conflict.compare
2025-09-22 23:17:51.169 [trace] ExtensionService#_callActivateOptional bradlc.vscode-tailwindcss
2025-09-22 23:17:51.169 [trace] ExtHostCommands#registerCommand tailwindCSS.showOutput
2025-09-22 23:17:51.169 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:51.169 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:51.170 [trace] ExtensionService#_callActivateOptional esbenp.prettier-vscode
2025-09-22 23:17:51.250 [trace] ExtHostCommands#registerCommand prettier.createConfigFile
2025-09-22 23:17:51.250 [trace] ExtHostCommands#registerCommand prettier.openOutput
2025-09-22 23:17:51.250 [trace] ExtHostCommands#registerCommand prettier.forceFormatDocument
2025-09-22 23:17:51.254 [trace] ExtensionService#_callActivateOptional GitHub.copilot
2025-09-22 23:17:51.378 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:51.381 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:51.383 [trace] extHostWorkspace#findFiles: fileSearch, extension: vscode.npm, entryPoint: findFiles
2025-09-22 23:17:51.435 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:51.435 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:51.454 [debug] ExtHostSearch /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/ripgrep/bin/rg --files --hidden --case-sensitive --no-require-git -g '**/package.json' -g '!**/.git' -g '!**/.svn' -g '!**/.hg' -g '!**/.DS_Store' -g '!**/Thumbs.db' -g '!**/node_modules' -g '!**/dist' -g '!**/.next' -g '!**/.turbo' -g '!**/{node_modules,.vscode-test}/**' --no-ignore --follow --no-config --no-ignore-global
 - cwd: /root/altamedica-reboot
 - Sibling clauses: {}
2025-09-22 23:17:51.910 [trace] CommandsConverter#CREATE git.checkout git.checkout /5
2025-09-22 23:17:51.910 [trace] CommandsConverter#CREATE git.publish git.publish /6
2025-09-22 23:17:51.912 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:51.913 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:51.949 [trace] ExtHostCommands#registerCommand tailwindCSS.sortSelection
2025-09-22 23:17:51.961 [debug] ExtHostSearch Search finished. Stats: {"cmdTime":523,"fileWalkTime":523,"directoriesWalked":0,"filesWalked":0,"cmdResultCount":20}
2025-09-22 23:17:51.961 [debug] Ext host file search time: 525ms
2025-09-22 23:17:51.961 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:51.961 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:51.962 [debug] ProxyResolver#resolveProxy https://westus-0.in.applicationinsights.azure.com/v2.1/track DIRECT 
2025-09-22 23:17:51.963 [trace] ProxyResolver#tls.connect [{"method":"POST","withCredentials":false,"headers":"[object Object]","disableAppInsightsAutoCollection":true,"host":"westus-0.in.app[41 chars]","port":443,"path":"null","agent":"[object Object]","_defaultAgent":"[object Object]","lookupProxyAuthorization":"[Function: bound DQ]","noDelay":true,"servername":"westus-0.in.app[41 chars]","secureEndpoint":true,"_vscodeAdditionalCaCerts":"[151 certs]","keepAlive":true,"scheduling":"lifo","timeout":5000,"_agentKey":"westus-0.in.app[66 chars]","encoding":"null","keepAliveInitialDelay":1000}]
2025-09-22 23:17:52.001 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.001 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.007 [trace] CommandsConverter#CREATE git.checkout git.checkout /7
2025-09-22 23:17:52.007 [trace] CommandsConverter#CREATE git.sync git.sync /8
2025-09-22 23:17:52.010 [trace] CommandsConverter#CREATE git.commit git.commit /9
2025-09-22 23:17:52.010 [trace] CommandsConverter#CREATE git.commit git.commit /10
2025-09-22 23:17:52.010 [trace] CommandsConverter#CREATE git.commitAmend git.commitAmend /11
2025-09-22 23:17:52.011 [trace] CommandsConverter#CREATE git.commit git.commit /12
2025-09-22 23:17:52.011 [trace] CommandsConverter#CREATE git.commit git.commit /13
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.011 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.038 [warning] [Decorations] CAPPING events from decorations provider vscode.git 411
2025-09-22 23:17:52.053 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.053 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.055 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.056 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.105 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.105 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.273 [trace] CommandsConverter#DISPOSE git.checkout /3
2025-09-22 23:17:52.273 [trace] CommandsConverter#DISPOSE git.publish /4
2025-09-22 23:17:52.898 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.898 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.901 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:52.903 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:52.905 [trace] ExtHostCommands#registerCommand github.copilot.completions.enable
2025-09-22 23:17:52.905 [trace] ExtHostCommands#registerCommand github.copilot.completions.disable
2025-09-22 23:17:52.905 [trace] ExtHostCommands#registerCommand github.copilot.completions.toggle
2025-09-22 23:17:52.905 [trace] ExtHostCommands#registerCommand github.copilot.completions.quotaExceeded
2025-09-22 23:17:52.905 [trace] ExtHostCommands#registerCommand github.copilot.toggleStatusMenu
2025-09-22 23:17:52.909 [trace] ExtHostCommands#registerCommand github.copilot.collectDiagnostics
2025-09-22 23:17:52.909 [trace] ExtHostCommands#registerCommand github.copilot.sendFeedback
2025-09-22 23:17:52.909 [trace] ExtHostCommands#registerCommand github.copilot.openDocs
2025-09-22 23:17:52.909 [trace] ExtHostCommands#registerCommand github.copilot.openLogs
2025-09-22 23:17:52.909 [trace] ExtHostCommands#registerCommand github.copilot.signIn
2025-09-22 23:17:52.910 [trace] ExtHostCommands#registerCommand github.copilot.generate
2025-09-22 23:17:52.910 [trace] ExtHostCommands#registerCommand github.copilot.acceptCursorPanelSolution
2025-09-22 23:17:52.910 [trace] ExtHostCommands#registerCommand github.copilot.previousPanelSolution
2025-09-22 23:17:52.910 [trace] ExtHostCommands#registerCommand github.copilot.nextPanelSolution
2025-09-22 23:17:52.911 [trace] ExtHostCommands#registerCommand github.copilot.openModelPicker
2025-09-22 23:17:52.911 [trace] ExtHostCommands#registerCommand _github.copilot.ghostTextPostInsert
2025-09-22 23:17:52.911 [trace] ExtHostCommands#registerCommand github.copilot.sendCompletionFeedback
2025-09-22 23:17:53.009 [trace] openTextDocument from [object Object]
2025-09-22 23:17:53.038 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.038 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.038 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.038 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.315 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:53.315 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:53.317 [trace] CommandsConverter#DISPOSE git.checkout /5
2025-09-22 23:17:53.317 [trace] CommandsConverter#DISPOSE git.publish /6
2025-09-22 23:17:53.452 [trace] extHostWorkspace#findFiles: fileSearch, extension: bradlc.vscode-tailwindcss, entryPoint: findFiles
2025-09-22 23:17:53.454 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.456 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.458 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.458 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.541 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.541 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.620 [debug] ProxyResolver#resolveProxy https://mobile.events.data.microsoft.com/OneCollector/1.0?cors=true&content-type=application/x-json-stream DIRECT 
2025-09-22 23:17:53.620 [trace] ProxyResolver#tls.connect [{"protocol":"https:","hostname":"mobile.events.d[32 chars]","port":443,"path":"null","method":"POST","headers":"[object Object]","agent":"[object Object]","_defaultAgent":"[object Object]","host":"mobile.events.d[32 chars]","lookupProxyAuthorization":"[Function: bound DQ]","noDelay":true,"servername":"mobile.events.d[32 chars]","secureEndpoint":true,"_vscodeAdditionalCaCerts":"[151 certs]","keepAlive":true,"scheduling":"lifo","timeout":5000,"_agentKey":"mobile.events.d[57 chars]","encoding":"null","keepAliveInitialDelay":1000}]
2025-09-22 23:17:53.744 [info] ExtensionService#_doActivateExtension vscode.configuration-editing, startup: false, activationEvent: 'onLanguage:json'
2025-09-22 23:17:53.744 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/configuration-editing/dist/configurationEditingMain
2025-09-22 23:17:53.745 [trace] ExtensionService#loadExtensionContext vscode.configuration-editing
2025-09-22 23:17:53.784 [info] ExtensionService#_doActivateExtension vscode.extension-editing, startup: false, activationEvent: 'onLanguage:json'
2025-09-22 23:17:53.784 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/extension-editing/dist/extensionEditingMain
2025-09-22 23:17:53.785 [trace] ExtensionService#loadExtensionContext vscode.extension-editing
2025-09-22 23:17:53.810 [info] ExtensionService#_doActivateExtension vscode.json-language-features, startup: false, activationEvent: 'onLanguage:json'
2025-09-22 23:17:53.811 [trace] ExtensionService#loadModule [cjs] -> file:///snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain
2025-09-22 23:17:53.811 [trace] ExtensionService#loadExtensionContext vscode.json-language-features
2025-09-22 23:17:53.937 [debug] ExtHostSearch /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/ripgrep/bin/rg --files --hidden --case-sensitive --no-require-git -g '**/{tailwind,tailwind.config,tailwind.*.config,tailwind.config.*}.{js,cjs,ts,mjs,mts,cts}' -g '!**/.git' -g '!**/.svn' -g '!**/.hg' -g '!**/.DS_Store' -g '!**/Thumbs.db' -g '!**/node_modules' -g '!**/dist' -g '!**/.next' -g '!**/.turbo' -g '!/{**/.git,**/.svn,**/.hg,**/.DS_Store,**/Thumbs.db,**/node_modules,**/dist,**/.next,**/.turbo,**/.git/**,**/node_modules/**,**/.hg/**,**/.svn/**}' --no-ignore --follow --no-config --no-ignore-global
 - cwd: /root/altamedica-reboot
 - Sibling clauses: {}
2025-09-22 23:17:53.976 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:53.977 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:53.983 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.983 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.984 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.985 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.985 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.985 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.985 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.986 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:53.986 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:53.990 [trace] ExtensionService#_callActivateOptional vscode.configuration-editing
2025-09-22 23:17:53.992 [trace] ExtensionService#_callActivateOptional vscode.extension-editing
2025-09-22 23:17:53.995 [trace] ExtensionService#_callActivateOptional vscode.json-language-features
2025-09-22 23:17:54.019 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.019 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.042 [debug] ExtHostSearch Search finished. Stats: {"cmdTime":118,"fileWalkTime":118,"directoriesWalked":0,"filesWalked":0,"cmdResultCount":4}
2025-09-22 23:17:54.042 [debug] Ext host file search time: 120ms
2025-09-22 23:17:54.060 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.060 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.061 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.061 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.086 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.086 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.104 [trace] ExtHostCommands#registerCommand json.clearCache
2025-09-22 23:17:54.104 [trace] ExtHostCommands#registerCommand json.validate
2025-09-22 23:17:54.104 [trace] ExtHostCommands#registerCommand json.sort
2025-09-22 23:17:54.171 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.172 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.172 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.172 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.172 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.172 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.247 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.247 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.343 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:54.344 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:54.357 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/ui/package.json","external":"file:///root/altamedica-reboot/packages/ui/package.json","path":"/root/altamedica-reboot/packages/ui/package.json","scheme":"file"},[]]]
2025-09-22 23:17:54.363 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.364 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.373 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.373 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.373 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.373 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.374 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.374 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.387 [warning] [Decorations] CAPPING events from decorations provider vscode.git 415
2025-09-22 23:17:54.391 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.392 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.638 [trace] ProxyResolver#tls.connect [443, "copilot-telemet[39 chars]", {"servername":"copilot-telemet[39 chars]","ALPNProtocols":"h2,http/1.1,http/1.0","signal":"[object AbortSignal]","rejectUnauthorized":true,"ca":"[300 certs]"}]
2025-09-22 23:17:54.817 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:54.817 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:54.895 [trace] ExtHostCommands#registerCommand _json.retryResolveSchema
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.952 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.953 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.953 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:54.954 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:54.958 [trace] ExtHostCommands#registerCommand _json.showAssociatedSchemaList
2025-09-22 23:17:55.275 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:55.276 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:55.282 [error] Error: GitHubLoginFailed
    at y9._authShowWarnings (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:949:16822)
    at y9.getCopilotToken (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:949:15345)
    at YG.getCopilotToken (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:485:25250)
    at sE._fetchModels (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:2934:3968)
    at sE.getAllChatModels (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:2934:2014)
    at Bj.getAllChatEndpoints (/root/.vscode/extensions/github.copilot-chat-0.31.2/dist/extension.js:2934:14863)
2025-09-22 23:17:55.285 [trace] forwarded error to extension? true {"value":"GitHub.copilot-chat","_lower":"github.copilot-chat"}
2025-09-22 23:17:55.549 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:55.550 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:55.650 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.650 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.723 [trace] openTextDocument from [object Object]
2025-09-22 23:17:55.739 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.739 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.739 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.740 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.744 [trace] openTextDocument from [object Object]
2025-09-22 23:17:55.766 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.766 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.766 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.766 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.783 [trace] openTextDocument from [object Object]
2025-09-22 23:17:55.799 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.799 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.800 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.800 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.807 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:55.807 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:55.939 [trace] openTextDocument from [object Object]
2025-09-22 23:17:55.975 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.976 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:55.976 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:55.976 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.017 [debug] ProxyResolver#resolveProxy cached https://mobile.events.data.microsoft.com/OneCollector/1.0?cors=true&content-type=application/x-json-stream DIRECT 
2025-09-22 23:17:56.018 [trace] ProxyResolver#tls.connect [{"session":"[object Object]","protocol":"https:","hostname":"mobile.events.d[32 chars]","port":443,"path":"null","method":"POST","headers":"[object Object]","agent":"[object Object]","_defaultAgent":"[object Object]","host":"mobile.events.d[32 chars]","lookupProxyAuthorization":"[Function: bound DQ]","noDelay":true,"servername":"mobile.events.d[32 chars]","secureEndpoint":true,"_vscodeAdditionalCaCerts":"[151 certs]","keepAlive":true,"scheduling":"lifo","timeout":5000,"_agentKey":"mobile.events.d[57 chars]","encoding":"null","keepAliveInitialDelay":1000}]
2025-09-22 23:17:56.100 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:56.101 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:56.217 [trace] openTextDocument from [object Object]
2025-09-22 23:17:56.226 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.228 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.230 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.230 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.298 [trace] openTextDocument from [object Object]
2025-09-22 23:17:56.315 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.315 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.315 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.315 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.317 [trace] openTextDocument from [object Object]
2025-09-22 23:17:56.334 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.334 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.334 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.334 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.357 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:56.358 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:56.458 [trace] openTextDocument from [object Object]
2025-09-22 23:17:56.476 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.478 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.480 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.480 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.523 [trace] openTextDocument from [object Object]
2025-09-22 23:17:56.538 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.540 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.540 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:56.542 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:56.614 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:56.614 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:56.853 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/tailwind-config/package.json","external":"file:///root/altamedica-reboot/packages/tailwind-config/package.json","path":"/root/altamedica-reboot/packages/tailwind-config/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.853 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/eslint-config/package.json","external":"file:///root/altamedica-reboot/packages/eslint-config/package.json","path":"/root/altamedica-reboot/packages/eslint-config/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.854 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/auth/package.json","external":"file:///root/altamedica-reboot/packages/auth/package.json","path":"/root/altamedica-reboot/packages/auth/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.855 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/types/package.json","external":"file:///root/altamedica-reboot/packages/types/package.json","path":"/root/altamedica-reboot/packages/types/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.855 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/hooks/package.json","external":"file:///root/altamedica-reboot/packages/hooks/package.json","path":"/root/altamedica-reboot/packages/hooks/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.856 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/typescript-config/package.json","external":"file:///root/altamedica-reboot/packages/typescript-config/package.json","path":"/root/altamedica-reboot/packages/typescript-config/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.856 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/shared/package.json","external":"file:///root/altamedica-reboot/packages/shared/package.json","path":"/root/altamedica-reboot/packages/shared/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.857 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/packages/utils/package.json","external":"file:///root/altamedica-reboot/packages/utils/package.json","path":"/root/altamedica-reboot/packages/utils/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.858 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/package.json","external":"file:///root/altamedica-reboot/package.json","path":"/root/altamedica-reboot/package.json","scheme":"file"},[]]]
2025-09-22 23:17:56.866 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:56.866 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:57.118 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:57.118 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:57.357 [trace] openTextDocument from [object Object]
2025-09-22 23:17:57.372 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.381 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.381 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.382 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.383 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:57.383 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:57.457 [trace] openTextDocument from [object Object]
2025-09-22 23:17:57.466 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.466 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.466 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.466 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.639 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:57.639 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:57.640 [trace] openTextDocument from [object Object]
2025-09-22 23:17:57.648 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.649 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.649 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.649 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.657 [debug] ProxyResolver#resolveProxy cached https://mobile.events.data.microsoft.com/OneCollector/1.0?cors=true&content-type=application/x-json-stream DIRECT 
2025-09-22 23:17:57.657 [trace] ProxyResolver#tls.connect [{"session":"[object Object]","protocol":"https:","hostname":"mobile.events.d[32 chars]","port":443,"path":"null","method":"POST","headers":"[object Object]","agent":"[object Object]","_defaultAgent":"[object Object]","host":"mobile.events.d[32 chars]","lookupProxyAuthorization":"[Function: bound DQ]","noDelay":true,"servername":"mobile.events.d[32 chars]","secureEndpoint":true,"_vscodeAdditionalCaCerts":"[151 certs]","keepAlive":true,"scheduling":"lifo","timeout":5000,"_agentKey":"mobile.events.d[57 chars]","encoding":"null","keepAliveInitialDelay":1000}]
2025-09-22 23:17:57.752 [trace] openTextDocument from [object Object]
2025-09-22 23:17:57.765 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.766 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.768 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:57.768 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:57.891 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:57.891 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:58.075 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/auth/package.json","external":"file:///root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/auth/package.json","path":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/auth/package.json","scheme":"file"},[]]]
2025-09-22 23:17:58.075 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/types/package.json","external":"file:///root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/types/package.json","path":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/types/package.json","scheme":"file"},[]]]
2025-09-22 23:17:58.075 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/shared/package.json","external":"file:///root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/shared/package.json","path":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/packages/shared/package.json","scheme":"file"},[]]]
2025-09-22 23:17:58.077 [trace] [DiagnosticCollection] change many (extension, owner, uris) vscode.extension-editing extension-editing [[{"$mid":1,"fsPath":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/package.json","external":"file:///root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/package.json","path":"/root/altamedica-reboot/apps/web-app/.open-next/server-functions/default/package.json","scheme":"file"},[]]]
2025-09-22 23:17:58.146 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:58.146 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:58.397 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:58.397 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:58.410 [trace] openTextDocument from [object Object]
2025-09-22 23:17:58.415 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.416 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.416 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.416 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.512 [trace] openTextDocument from [object Object]
2025-09-22 23:17:58.518 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.518 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.518 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.518 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.615 [trace] openTextDocument from [object Object]
2025-09-22 23:17:58.622 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.623 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.623 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.623 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.653 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:58.653 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:58.729 [trace] openTextDocument from [object Object]
2025-09-22 23:17:58.734 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.735 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.735 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.735 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.904 [trace] ExtHostCommands#executeCommand testing.getExplorerSelection
2025-09-22 23:17:58.904 [trace] ExtHostCommands#executeCommand _testing.getExplorerSelection
2025-09-22 23:17:58.924 [trace] openTextDocument from [object Object]
2025-09-22 23:17:58.940 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.941 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.941 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:58.943 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:58.950 [info] Extension host terminating: renderer closed the MessagePort
2025-09-22 23:17:58.965 [trace] [DiagnosticCollection] remove all (extension, owner) vscode.extension-editing extension-editing
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commit /1
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commit /9
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commit /10
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commitAmend /11
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commit /12
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.commit /13
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.checkout /7
2025-09-22 23:17:58.975 [trace] CommandsConverter#DISPOSE git.sync /8
2025-09-22 23:17:59.000 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:59.000 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:59.007 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:59.007 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:59.029 [trace] [DiagnosticCollection] remove all (extension, owner) vscode.json-language-features _generated_diagnostic_collection_name_#1
2025-09-22 23:17:59.032 [trace] [DiagnosticCollection] remove all (extension, owner) vscode.json-language-features json
2025-09-22 23:17:59.083 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:59.083 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:59.083 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:59.083 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:59.089 [trace] [DiagnosticCollection] remove all (extension, owner) ms-playwright.playwright pw.testErrors.diagnostic
2025-09-22 23:17:59.093 [trace] [DiagnosticCollection] remove all (extension, owner) bradlc.vscode-tailwindcss tailwindcss-intellisense
2025-09-22 23:17:59.109 [trace] ExtHostCommands#executeCommand setContext
2025-09-22 23:17:59.109 [trace] ExtHostCommands#executeCommand _setContext
2025-09-22 23:17:59.120 [error] ProxyResolver#resolveProxy DIRECT Canceled: Canceled
    at new CR (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:29:115607)
    at j4.U (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:29:120217)
    at Proxy.s.<computed>.n.charCodeAt.s.<computed> (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:29:117711)
    at Fb.resolveProxy (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:109:74040)
    at Object.resolveProxy (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:201:21837)
    at useProxySettings (/snap/code/206/usr/share/code/resources/app/node_modules/@vscode/proxy-agent/out/index.js:182:16)
    at /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/proxy-agent/out/index.js:119:13
    at /snap/code/206/usr/share/code/resources/app/node_modules/@vscode/proxy-agent/out/index.js:707:13
    at processTicksAndRejections (node:internal/process/task_queues:105:5) 
2025-09-22 23:17:59.120 [trace] ProxyResolver#tls.connect [{"method":"POST","withCredentials":false,"headers":"[object Object]","disableAppInsightsAutoCollection":true,"host":"copilot-telemet[39 chars]","port":443,"path":"null","agent":"[object Object]","_defaultAgent":"[object Object]","lookupProxyAuthorization":"[Function: bound DQ]","noDelay":true,"servername":"copilot-telemet[39 chars]","secureEndpoint":true,"_vscodeAdditionalCaCerts":"[151 certs]","keepAlive":true,"scheduling":"lifo","timeout":5000,"_agentKey":"copilot-telemet[64 chars]","encoding":"null","keepAliveInitialDelay":1000}]
2025-09-22 23:17:59.618 [trace] openTextDocument from [object Object]
2025-09-22 23:18:00.622 [error] Error: Npm task detection: failed to parse the file /root/altamedica-reboot/apps/admin/package.json
    at R (/snap/code/206/usr/share/code/resources/app/extensions/npm/dist/npmMain.js:2:248316)
    at F (/snap/code/206/usr/share/code/resources/app/extensions/npm/dist/npmMain.js:2:245949)
    at b (/snap/code/206/usr/share/code/resources/app/extensions/npm/dist/npmMain.js:2:245478)
    at t.NpmTaskProvider.provideTasks (/snap/code/206/usr/share/code/resources/app/extensions/npm/dist/npmMain.js:2:243276)
2025-09-22 23:18:01.035 [error] Error: Channel has been closed
    at n (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:119:2816)
    at Object.error (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:119:3250)
    at T.error (/snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain.js:2:44894)
    at /snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain.js:2:53365
    at Object.dispose (/snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain.js:2:322471)
    at Object.dispose (/snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain.js:2:313236)
    at Object.t.deactivate (/snap/code/206/usr/share/code/resources/app/extensions/json-language-features/client/dist/node/jsonClientMain.js:2:459022)
    at async Promise.all (index 8)
    at aJ.$ (file:///snap/code/206/usr/share/code/resources/app/out/vs/workbench/api/node/extensionHostProcess.js:116:10000)
2025-09-22 23:18:01.036 [info] Extension host with pid 2806945 exiting with code 0
