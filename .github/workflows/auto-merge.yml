name: üîÄ Auto Merge PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    name: Auto Merge Approved PRs
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout c√≥digo
        uses: actions/checkout@v4

      - name: üîç Verificar condiciones de merge
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Si es workflow_dispatch, procesar todos los PRs
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "mode=batch" >> $GITHUB_OUTPUT
            echo "üîÑ Modo batch: procesando todos los PRs"
            exit 0
          fi

          # Obtener n√∫mero del PR
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
          elif [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
          else
            echo "‚ö†Ô∏è Evento no soportado para PR individual"
            exit 0
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "mode=single" >> $GITHUB_OUTPUT
          echo "üìã Procesando PR #$PR_NUMBER"

      - name: ü§ñ Auto Merge (Batch Mode)
        if: steps.check.outputs.mode == 'batch'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîç Buscando PRs listos para auto-merge..."

          # Listar PRs con label auto-merge
          gh pr list \
            --state open \
            --label "auto-merge" \
            --json number,title,mergeable,reviewDecision,statusCheckRollup \
            --jq '.[]' \
          | while IFS= read -r pr_json; do

            PR_NUM=$(echo "$pr_json" | jq -r '.number')
            TITLE=$(echo "$pr_json" | jq -r '.title')
            MERGEABLE=$(echo "$pr_json" | jq -r '.mergeable')
            REVIEW=$(echo "$pr_json" | jq -r '.reviewDecision')
            CHECKS=$(echo "$pr_json" | jq -r '.statusCheckRollup[0].conclusion // "PENDING"')

            echo ""
            echo "üìã PR #$PR_NUM: $TITLE"
            echo "  Mergeable: $MERGEABLE"
            echo "  Review: $REVIEW"
            echo "  Checks: $CHECKS"

            # Verificar condiciones
            if [[ "$MERGEABLE" == "MERGEABLE" ]] && \
               [[ "$REVIEW" == "APPROVED" ]] && \
               [[ "$CHECKS" == "SUCCESS" ]]; then

              echo "  ‚úÖ Todas las condiciones cumplidas, mergeando..."

              gh pr merge $PR_NUM \
                --squash \
                --auto \
                --delete-branch \
                && echo "  ‚úÖ PR #$PR_NUM mergeado exitosamente" \
                || echo "  ‚ùå Error mergeando PR #$PR_NUM"
            else
              echo "  ‚è∏Ô∏è No cumple condiciones para auto-merge"
            fi
          done

      - name: ü§ñ Auto Merge (Single PR)
        if: steps.check.outputs.mode == 'single'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUM=${{ steps.check.outputs.pr_number }}

          # Obtener info del PR
          PR_INFO=$(gh pr view $PR_NUM --json labels,mergeable,reviewDecision,statusCheckRollup)

          # Verificar si tiene label auto-merge
          HAS_LABEL=$(echo "$PR_INFO" | jq -r '.labels[] | select(.name=="auto-merge") | .name' || echo "")

          if [[ -z "$HAS_LABEL" ]]; then
            echo "‚è∏Ô∏è PR #$PR_NUM no tiene label 'auto-merge', saltando"
            exit 0
          fi

          MERGEABLE=$(echo "$PR_INFO" | jq -r '.mergeable')
          REVIEW=$(echo "$PR_INFO" | jq -r '.reviewDecision')
          CHECKS=$(echo "$PR_INFO" | jq -r '.statusCheckRollup[0].conclusion // "PENDING"')

          echo "üìã Verificando PR #$PR_NUM"
          echo "  Mergeable: $MERGEABLE"
          echo "  Review: $REVIEW"
          echo "  Checks: $CHECKS"

          # Verificar condiciones
          if [[ "$MERGEABLE" == "MERGEABLE" ]] && \
             [[ "$REVIEW" == "APPROVED" ]] && \
             [[ "$CHECKS" == "SUCCESS" ]]; then

            echo "‚úÖ Todas las condiciones cumplidas, mergeando..."

            gh pr merge $PR_NUM \
              --squash \
              --auto \
              --delete-branch

            echo "‚úÖ PR #$PR_NUM configurado para auto-merge"
          else
            echo "‚è∏Ô∏è PR #$PR_NUM no cumple todas las condiciones"
          fi

      - name: üìä Resumen
        run: |
          echo "‚úÖ Auto-merge workflow completado"
          echo ""
          echo "‚ÑπÔ∏è Para que un PR se auto-merge necesita:"
          echo "  1. Label 'auto-merge'"
          echo "  2. Aprobaci√≥n de al menos 1 reviewer"
          echo "  3. Todos los checks en verde"
          echo "  4. Sin conflictos de merge"
