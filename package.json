{
  "name": "autamedica-reboot",
  "private": true,
  "engines": {
    "node": "20.x"
  },
  "scripts": {
    "test:e2e": "node tests/run-playwright.cjs",
    "test:e2e:ui": "playwright test --ui",
    "test:rls": "psql \"$SUPABASE_DB_URL\" -f supabase/tests/rls_smoke.sql",
    "test:auth": "vitest run --config vitest.browser.config.ts",
    "test:auth:watch": "vitest --config vitest.browser.config.ts",
    "test:auth:ui": "vitest --config vitest.browser.config.ts --ui",
    "test:auth:browser": "vitest run --config vitest.browser.config.ts --browser.headless=false",
    "test:auth:debug": "vitest --config vitest.browser.config.ts --browser.headless=false",
    "test:auth:ci": "vitest run --config vitest.browser.config.ts --browser.headless=true",
    "release:org-roles": "./scripts/release-org-roles.sh",
    "build": "turbo run build",
    "build:packages": "pnpm run build:packages:core",
    "build:packages:core": "turbo run build --filter=@autamedica/types --filter=@autamedica/shared --filter=@autamedica/auth --filter=@autamedica/hooks --filter=@autamedica/tailwind-config --filter=@autamedica/telemedicine --filter=@autamedica/ui --filter=@autamedica/utils",
    "build:packages-fallback": "cd packages/types && pnpm build && cd ../shared && pnpm build && cd ../auth && pnpm build && cd ../hooks && pnpm build",
    "build:apps": "turbo run build --filter ./apps/*",
    "build:all": "bash tools/build-all.sh build",
    "typecheck:all": "bash tools/build-all.sh typecheck",
    "lint:all": "bash tools/build-all.sh lint",
    "dev": "turbo run dev",
    "lint": "NODE_OPTIONS=\"--max-old-space-size=4096\" eslint .",
    "lint:fix": "eslint . --fix",
    "watch:lint": "nodemon --watch 'apps/**/*.{ts,tsx}' --watch 'packages/**/*.{ts,tsx}' --ext ts,tsx --exec 'eslint .'",
    "depcruise": "depcruise -c .dependency-cruiser.cjs apps packages scripts",
    "dup": "jscpd --config .jscpd.json",
    "ci:quality": "pnpm -w lint && pnpm -w depcruise && pnpm -w dup",
    "typecheck": "turbo run typecheck",
    "type-check": "node scripts/type-check.mjs",
    "check-types": "turbo run check-types",
    "check:policy": "node scripts/check-policy.mjs",
    "check:prod": "node scripts/ensure-env.mjs && pnpm lint && pnpm -w type-check && pnpm build:packages && pnpm docs:validate && pnpm check:policy",
    "format": "prettier --write \"**/*.{ts,tsx,md}\"",
    "validate-exports": "node scripts/validate-exports.mjs",
    "docs:validate": "node scripts/validate-exports.mjs",
    "docs:generate": "node scripts/auto-generate-docs.mjs",
    "docs:auto-fix": "node scripts/auto-generate-docs.mjs && node scripts/validate-exports.mjs",
    "types:analyze": "node scripts/analyze-type-duplication.mjs",
    "db:validate": "node scripts/validate-database-schema.mjs",
    "db:generate": "node scripts/generate-db-types.mjs",
    "db:sync": "node scripts/generate-db-types.mjs && node scripts/validate-database-schema.mjs",
    "db:test": "node scripts/test-db-generation.mjs",
    "docs:sync": "node scripts/docs-sync.mjs",
    "docs:sync:watch": "node scripts/docs-watch.mjs",
    "docs:db": "GLOSSARY_MODE=pg tsx scripts/database-glossary/cli/index.ts generate",
    "docs:db:ci": "GLOSSARY_MODE=sql tsx scripts/database-glossary/cli/index.ts generate",
    "docs:db:validate": "tsx scripts/database-glossary/cli/index.ts validate",
    "docs:db:test": "tsx scripts/database-glossary/cli/index.ts test",
    "docs:db:check-diff": "git diff --exit-code -- docs/database/_generated/ docs/database/schema.md || (echo '❌ DB Glossary desincronizado. Ejecutá pnpm docs:db' && exit 1)",
    "env:validate": "node scripts/validate-env.mjs",
    "env:validate:production": "node scripts/validate-production-values.mjs",
    "env:validate:staging": "node scripts/validate-staging.mjs",
    "env:validate:dev": "NODE_ENV=development node scripts/validate-env.mjs",
    "security:validate": "node scripts/validate-security-headers.mjs",
    "security:check": "node scripts/security-check.mjs",
    "security:audit": "pnpm audit --audit-level moderate",
    "security:full": "pnpm run security:check && pnpm run security:audit",
    "monitor:auth": "node scripts/auth-monitoring.js",
    "monitor:auth:watch": "node scripts/monitor-auth.mjs --watch",
    "test:e2e:web": "cd apps/web-app && playwright test --reporter=line",
    "setup:auth-hooks": "node scripts/apply-auth-hooks.js",
    "test:unit": "turbo run test:unit",
    "test": "turbo run test",
    "health": "node scripts/health-check.mjs",
    "policies:validate": "node scripts/validate-policies.mjs",
    "glossary:check": "node scripts/check-glossary.js",
    "ci:fix": "./fix-ci-autamedica",
    "pre-deploy": "pnpm run policies:validate && pnpm run lint && pnpm run type-check && pnpm run glossary:check",
    "start-claude": "node scripts/start-claude.mjs",
    "claude": "node scripts/start-claude.mjs",
    "codex": "codex",
    "vscode": "./vscode-root.sh",
    "cursor": "./cursor-root.sh",
    "screenshot": "node scripts/visual-snapshot.js single",
    "screenshot:watch": "node scripts/visual-snapshot.js watch",
    "visual:snapshot": "pnpm screenshot",
    "visual:monitor": "pnpm screenshot:watch",
    "visual:analyze": "node scripts/visual-analyzer.js full",
    "visual:health": "node scripts/visual-analyzer.js health",
    "dev:watch": "concurrently \"pnpm dev\" \"pnpm watch:types\" \"pnpm watch:lint\"",
    "deploy:setup": "./scripts/deploy-setup.sh",
    "deploy:web-app": "cd apps/web-app && pnpm deploy:cloudflare",
    "deploy:doctors": "cd apps/doctors && pnpm deploy:cloudflare",
    "deploy:patients": "cd apps/patients && pnpm deploy:cloudflare",
    "deploy:companies": "cd apps/companies && pnpm deploy:cloudflare",
    "deploy:admin": "cd apps/admin && pnpm deploy:cloudflare",
    "deploy:all": "pnpm deploy:web-app && pnpm deploy:doctors && pnpm deploy:patients && pnpm deploy:companies && pnpm deploy:admin",
    "watch:types": "node scripts/watch-types.mjs",
    "check:all": "pnpm run lint && pnpm run type-check && pnpm run policies:validate && pnpm run docs:validate",
    "lint-staged": "lint-staged",
    "prepare": "husky && husky install",
    "changed:ts": "git diff --name-only --cached --diff-filter=ACMRTUXB | grep -E '\\.(ts|tsx)$' || true",
    "changed:js": "git diff --name-only --cached --diff-filter=ACMRTUXB | grep -E '\\.(js|jsx)$' || true",
    "lint:changed": "FILES=\"$(pnpm -s changed:ts) $(pnpm -s changed:js)\"; [ -z \"$FILES\" ] || eslint --max-warnings 0 $FILES",
    "typecheck:fast": "tsc -p tsconfig.json --noEmit",
    "prepush": "pnpm -s lint:changed && pnpm -s typecheck:fast",
    "ai:review": "bash scripts/ai-pr-review.sh",
    "smoke:all": "bash scripts/smoke-all.sh"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@playwright/test": "^1.55.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/handlebars": "^4.1.0",
    "@types/node": "^24.6.0",
    "@types/pg": "^8.15.5",
    "@types/react": "19.1.0",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "change-case": "^5.4.4",
    "concurrently": "^9.2.1",
    "dependency-cruiser": "^17.0.1",
    "dotenv": "^17.2.2",
    "eslint": "^9.35.0",
    "eslint-config-next": "15.5.4",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-boundaries": "^5.0.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsdoc": "^58.1.0",
    "eslint-plugin-perfectionist": "^4.15.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-sonarjs": "^3.0.5",
    "eslint-plugin-unicorn": "^61.0.2",
    "eslint-plugin-unused-imports": "^4.2.0",
    "globals": "^16.3.0",
    "globby": "^11.1.0",
    "handlebars": "^4.7.8",
    "happy-dom": "^19.0.2",
    "husky": "^8.0.0",
    "jscpd": "^4.0.5",
    "lint-staged": "^15.2.2",
    "nodemon": "^3.1.10",
    "pg": "^8.16.3",
    "playwright": "^1.55.0",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "5.9.2",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "@cloudflare/next-on-pages": "^1.13.16",
    "@openai/codex": "^0.39.0",
    "@supabase/supabase-js": "^2.57.4",
    "glob": "^11.0.3",
    "jose": "^6.1.0",
    "next": "15.5.4",
    "onnxruntime-web": "^1.23.0",
    "turbo": "^2.5.6",
    "vercel": "^48.1.6"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "packageManager": "pnpm@9.15.2",
  "pnpm": {
    "overrides": {
      "esbuild": "^0.25.4",
      "undici": "^5.28.5"
    }
  }
}
